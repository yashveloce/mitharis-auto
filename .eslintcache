[{"D:\\Mitharis\\my-app\\src\\index.js":"1","D:\\Mitharis\\my-app\\src\\reportWebVitals.js":"2","D:\\Mitharis\\my-app\\src\\App.js":"3","D:\\Mitharis\\my-app\\src\\Components\\Body.js":"4","D:\\Mitharis\\my-app\\src\\Components\\Navbar.js":"5","D:\\Mitharis\\my-app\\src\\Components\\NavItems\\Data_Entry\\Insurance_Registration.js":"6","D:\\Mitharis\\my-app\\src\\Components\\NavItems\\Data_Entry\\Enquiry_Generation.js":"7","D:\\Mitharis\\my-app\\src\\Components\\NavItems\\Dashboard.js":"8","D:\\Mitharis\\my-app\\src\\Components\\NavItems\\Data_Entry\\Transaction.js":"9","D:\\Mitharis\\my-app\\src\\Components\\NavItems\\Data_Entry\\Vehicle_Registration.js":"10","D:\\Mitharis\\my-app\\src\\Components\\NavItems\\Data_Entry\\RTO_Agent.js":"11","D:\\Mitharis\\my-app\\src\\Components\\NavItems\\Data_Entry\\Stolen.js":"12","D:\\Mitharis\\my-app\\src\\Components\\NavItems\\Reporting\\Sales_Report.js":"13","D:\\Mitharis\\my-app\\src\\Components\\NavItems\\Reporting\\Commision_Report.js":"14","D:\\Mitharis\\my-app\\src\\Components\\NavItems\\Reporting\\Insurance_Report.js":"15","D:\\Mitharis\\my-app\\src\\Components\\NavItems\\Reporting\\Vehicle_History.js":"16","D:\\Mitharis\\my-app\\src\\Components\\NavItems\\Reporting\\PaperWork.js":"17","D:\\Mitharis\\my-app\\src\\Components\\NavItems\\Utilities\\Customer.js":"18","D:\\Mitharis\\my-app\\src\\Components\\NavItems\\Utilities\\RTO_Agent_Numbers.js":"19","D:\\Mitharis\\my-app\\src\\Components\\NavItems\\Utilities\\Third_Party_Agent.js":"20","D:\\Mitharis\\my-app\\src\\Components\\NavItems\\Data_Entry\\Vehicle_Master.js":"21","D:\\Mitharis\\my-app\\src\\Components\\NavItems\\Data_Entry\\Vehicle_Form.js":"22","D:\\Mitharis\\my-app\\src\\Components\\NavItems\\Data_Entry\\Delivery_Note.js":"23","D:\\Mitharis\\my-app\\src\\Components\\NavItems\\Data_Entry\\EnqGen.js":"24","D:\\Mitharis\\my-app\\src\\Components\\NavItems\\Data_Entry\\VehicleCrud.js":"25"},{"size":505,"mtime":1631711264408,"results":"26","hashOfConfig":"27"},{"size":362,"mtime":1631123112000,"results":"28","hashOfConfig":"27"},{"size":1317,"mtime":1631171219513,"results":"29","hashOfConfig":"27"},{"size":4032,"mtime":1631771563794,"results":"30","hashOfConfig":"27"},{"size":9174,"mtime":1631170866606,"results":"31","hashOfConfig":"27"},{"size":11502,"mtime":1631706099890,"results":"32","hashOfConfig":"27"},{"size":19680,"mtime":1631788013074,"results":"33","hashOfConfig":"27"},{"size":3669,"mtime":1631787797480,"results":"34","hashOfConfig":"27"},{"size":20073,"mtime":1631711998267,"results":"35","hashOfConfig":"27"},{"size":13920,"mtime":1631710723268,"results":"36","hashOfConfig":"27"},{"size":12153,"mtime":1631709203035,"results":"37","hashOfConfig":"27"},{"size":9167,"mtime":1631691314976,"results":"38","hashOfConfig":"27"},{"size":8002,"mtime":1631708960695,"results":"39","hashOfConfig":"27"},{"size":7538,"mtime":1631704148987,"results":"40","hashOfConfig":"27"},{"size":5500,"mtime":1631708980629,"results":"41","hashOfConfig":"27"},{"size":143,"mtime":1631124964000,"results":"42","hashOfConfig":"27"},{"size":6142,"mtime":1631707578536,"results":"43","hashOfConfig":"27"},{"size":3471,"mtime":1631710096326,"results":"44","hashOfConfig":"27"},{"size":7161,"mtime":1631691407037,"results":"45","hashOfConfig":"27"},{"size":6972,"mtime":1631691835971,"results":"46","hashOfConfig":"27"},{"size":7714,"mtime":1631691358267,"results":"47","hashOfConfig":"27"},{"size":21788,"mtime":1631710823121,"results":"48","hashOfConfig":"27"},{"size":12134,"mtime":1631690965332,"results":"49","hashOfConfig":"27"},{"size":18479,"mtime":1631788029000,"results":"50","hashOfConfig":"27"},{"size":36903,"mtime":1631786109570,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"l2uyve",{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"54"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"54"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Mitharis\\my-app\\src\\index.js",[],["117","118"],"D:\\Mitharis\\my-app\\src\\reportWebVitals.js",[],"D:\\Mitharis\\my-app\\src\\App.js",[],"D:\\Mitharis\\my-app\\src\\Components\\Body.js",[],"D:\\Mitharis\\my-app\\src\\Components\\Navbar.js",[],"D:\\Mitharis\\my-app\\src\\Components\\NavItems\\Data_Entry\\Insurance_Registration.js",["119","120","121","122","123","124","125","126"],"import React,{useState} from 'react';\r\nimport {\r\n    useQuery,\r\n    gql,\r\n    useMutation,\r\n    useSubscription,\r\n    useLazyQuery\r\n  } from \"@apollo/client\";\r\nimport { Switch, Route, Link } from \"react-router-dom\";\r\nimport { DataGrid } from '@material-ui/data-grid';\r\n//import { IconName } from \"react-icons/bs\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst InsuranceQuery=gql`\r\nsubscription MySubscription {\r\n  insurance {\r\n    customer\r\n    from_date\r\n    id\r\n    insurance_amount\r\n    insurance_type\r\n    to_date\r\n    vehicle_no\r\n  }\r\n}\r\n`\r\nconst DELETE_INSURANCE=gql`\r\nmutation MyMutation($id: Int!) {\r\n  delete_insurance_by_pk(id: $id) {\r\n    id\r\n  }\r\n}\r\n`\r\n\r\nconst INSERT_INSURANCE=gql`\r\nmutation MyMutation($customer: Int!, $from_date: date!, $insurance_amount: bigint!, $insurance_type: String!, $to_date: date!, $vehicle_no: String!,$timestamp:date!) {\r\n  insert_insurance_one(object: {customer: $customer, from_date: $from_date, insurance_amount: $insurance_amount, insurance_type: $insurance_type, to_date: $to_date, vehicle_no: $vehicle_no,timestamp:$timestamp}) {\r\n    id\r\n  }\r\n}\r\n`\r\n\r\nconst UPDATE_INSURANCE=gql`\r\nmutation MyMutation($id:Int!,$customer: Int!, $from_date: date!, $insurance_amount: bigint!, $insurance_type: String!, $to_date: date!, $vehicle_no: String!) {\r\n  update_insurance_by_pk(pk_columns: {id: $id}, _set: {customer: $customer, from_date: $from_date, insurance_amount: $insurance_amount, insurance_type: $insurance_type, to_date: $to_date, vehicle_no: $vehicle_no}) {\r\n    id\r\n  }\r\n}\r\n\r\n`\r\nfunction Insurance_Registration()\r\n{\r\n  var today = new Date();\r\n  var dd = String(today.getDate()).padStart(2, '0');\r\n  var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n  var yyyy = today.getFullYear();\r\n  today = yyyy + '/' + mm + '/' + dd;\r\n  const [showModal, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  const [insurance,setInsurance] = useState({\r\n      customer:\"\",\r\n      insurance_type:\"\",\r\n      from_date:\"\",\r\n      to_date:\"\",\r\n      insurance_amount:\"\",\r\n      vehicle_no:\"\"\r\n  })\r\n  const [modalInsurance,setModalInsurance] = useState({\r\n    id:\"\",\r\n    customer:\"\",\r\n    insurance_type:\"\",\r\n    from_date:\"\",\r\n    to_date:\"\",\r\n    insurance_amount:\"\",\r\n    vehicle_no:\"\"\r\n})\r\n  const onInputChange=(e)=>{\r\n    setInsurance({...insurance,[e.target.name]:e.target.value})\r\n    console.log(insurance)\r\n  }\r\n  const onFormSubmit=(e)=>{\r\n    e.preventDefault();\r\n    console.log(e.target);\r\n    insertInsuranceData({variables:{customer:insurance.customer,insurance_type:insurance.insurance_type,from_date:insurance.from_date,to_date:insurance.to_date,insurance_amount:insurance.insurance_amount,vehicle_no:insurance.vehicle_no,timestamp:today}});\r\n  }\r\n  const editInsurance=(insurance_data)=>{\r\n    setModalInsurance({\r\n      id:insurance_data.id,\r\n      vehicle_no:insurance_data.vehicle_no,\r\n      from_date:insurance_data.from_date,\r\n      to_date:insurance_data.to_date,\r\n      customer:insurance_data.customer,\r\n      insurance_amount:insurance_data.insurance_amount,\r\n      insurance_type:insurance_data.insurance_type\r\n    })\r\n    handleShow();\r\n  }\r\n  const onModalInputChange=(e)=>{\r\n    setModalInsurance({...modalInsurance,[e.target.name]:e.target.value})\r\n    console.log(modalInsurance)\r\n  }\r\n  const onModalFormSubmit=(e)=>{\r\n    e.preventDefault();\r\n    updateInsuranceData({variables:{id:modalInsurance.id,customer:modalInsurance.customer,insurance_type:modalInsurance.insurance_type,from_date:modalInsurance.from_date,to_date:modalInsurance.to_date,insurance_amount:modalInsurance.insurance_amount,vehicle_no:modalInsurance.vehicle_no}});\r\n    handleClose();\r\n  }\r\n  const deleteInsurance=(id)=>{\r\n    console.log(id);\r\n    deleteInsuranceData({variables:{id:id}})\r\n  }\r\n  const [insertInsuranceData,{insuranceData}]=useMutation(INSERT_INSURANCE);\r\n  const [updateInsuranceData,{updatedData}]=useMutation(UPDATE_INSURANCE);\r\n  const [deleteInsuranceData,{deleteData}]=useMutation(DELETE_INSURANCE);\r\n  const { loading, error, data } = useSubscription(InsuranceQuery);\r\n    // const [loadVehicle,{loading3,data3}] = useLazyQuery(VehicleMasterByPK,{\r\n    //   fetchPolicy: 'network-only',\r\n    // });\r\n    \r\n    \r\n    if (loading) return <div style={{width:\"100%\",marginTop:'25%', textAlign:'center'}}><CircularProgress /></div>;\r\n    if (error) return `Error! ${error.message}`;\r\n    //console.log(data);\r\n    //const rows=data.stolen;\r\n    const columns = [\r\n      { \r\n          field: 'id', \r\n          headerName: 'ID', \r\n          width: 150,\r\n          hide:false, \r\n      },\r\n      {\r\n        field: 'customer',\r\n        headerName: 'Customer',\r\n        width: 150,\r\n        editable: false,\r\n      },\r\n      {\r\n        field: 'vehicle_no',\r\n        headerName: 'Vehicle No',\r\n        width: 150,\r\n        editable: false,\r\n      },\r\n      {\r\n        field: 'from_date',\r\n        headerName: 'From date',\r\n        width: 150,\r\n        editable: false,\r\n      },\r\n      {\r\n        field: 'to_date',\r\n        headerName: 'To Date',\r\n        width: 150,\r\n        editable: false,\r\n      },\r\n      {\r\n        field: 'insurance_amount',\r\n        headerName: 'Insurance Amount',\r\n        width: 150,\r\n        editable: false,\r\n      },\r\n      {\r\n        field: 'insurance_type',\r\n        headerName: 'Insurance Type',\r\n        width: 150,\r\n        editable: false,\r\n      },\r\n      {\r\n        field: 'action',\r\n        headerName: 'Action',\r\n        width: 300,\r\n        renderCell: (params) => {\r\n          return (\r\n            <div className=\"\">\r\n            <button data-toggle=\"tooltip\" title=\"Edit\" type=\"button\" onClick={(e)=>editInsurance(params.row)} className=\"btn btn-warning\"><i className=\"fa fa-pencil\"></i></button>\r\n            <button data-toggle=\"tooltip\" onClick={()=>{deleteInsurance(params.row.id)}} title=\"Delete\" style={{marginLeft:'20%'}} className=\"btn btn-danger\"><i className=\"fa fa-trash\"></i></button>\r\n            \r\n            </div>\r\n          );\r\n       }\r\n      },\r\n    ];\r\n    console.log(data);\r\n    const rows=data.insurance;\r\n    return(\r\n      <div className=\"container\">\r\n        <Modal show={showModal} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Modal heading</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n            <div className=\"col-md-4\">\r\n                <form className=\"form-group\" onSubmit={e=>onModalFormSubmit(e)}>\r\n                    <div className=\"field\">\r\n                        <label>Id</label>\r\n                        <input onChange={(e)=>{onModalInputChange(e)}} defaultValue={modalInsurance.id} className=\"form-control\" name=\"id\" type=\"text\" />\r\n                    </div>\r\n                    <div className=\"field\">\r\n                        <label>Customer</label>\r\n                        <input onChange={(e)=>{onModalInputChange(e)}} defaultValue={modalInsurance.customer} className=\"form-control\" name=\"customer\" type=\"text\" />\r\n                    </div>\r\n                    <div className=\"field\">\r\n                        <label>Vehicle No</label>\r\n                        <input onChange={(e)=>{onModalInputChange(e)}} defaultValue={modalInsurance.vehicle_no} className=\"form-control\" name=\"vehicle_no\" type=\"text\" />\r\n                    </div>\r\n                    <div className=\"field\">\r\n                        <label>From Date</label>\r\n                        <input onChange={(e)=>{onModalInputChange(e)}} defaultValue={modalInsurance.from_date} className=\"form-control\" name=\"from_date\" type=\"date\" />\r\n                    </div>\r\n                    <div className=\"field\">\r\n                        <label>To Date</label>\r\n                        <input onChange={(e)=>{onModalInputChange(e)}} defaultValue={modalInsurance.to_date} className=\"form-control\" name=\"to_date\" type=\"date\" />\r\n                    </div>\r\n                    <div className=\"field\">\r\n                        <label>Insurance Amount</label>\r\n                        <input onChange={(e)=>{onModalInputChange(e)}} defaultValue={modalInsurance.insurance_amount} className=\"form-control\" name=\"insurance_amount\" type=\"text\" />\r\n                    </div>\r\n                    <div className=\"field\">\r\n                        <label>Insurance Type</label>\r\n                        <input onChange={(e)=>{onModalInputChange(e)}} defaultValue={modalInsurance.insurance_type} className=\"form-control\" name=\"insurance_type\" type=\"text\" />\r\n                    </div>\r\n                    <div className=\"field\">\r\n                        <button className=\"btn btn-primary\">Save</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          \r\n        </Modal.Footer>\r\n      </Modal>\r\n          <div className=\"col-md-12\">\r\n              <form className=\"form-group\" onSubmit={e=>onFormSubmit(e)}>\r\n                  <div className=\"row\">\r\n                      <div className=\"field col-md-6\">\r\n                          <label>Customer</label>\r\n                          <input onChange={(e)=>onInputChange(e)} className=\"form-control\" name=\"customer\" type=\"text\" />\r\n                      </div>\r\n                      <div className=\"field col-md-6\">\r\n                          <label>Vehicle No</label>\r\n                          <input onChange={(e)=>onInputChange(e)} className=\"form-control\" name=\"vehicle_no\" type=\"text\" />\r\n                      </div>\r\n                      <div className=\"field col-md-6\">\r\n                          <label>From Date</label>\r\n                          <input onChange={(e)=>onInputChange(e)} className=\"form-control\" name=\"from_date\" type=\"date\" />\r\n                      </div>\r\n                      <div className=\"field col-md-6\">\r\n                          <label>To Date</label>\r\n                          <input onChange={(e)=>onInputChange(e)} className=\"form-control\" name=\"to_date\" type=\"date\" />\r\n                      </div>\r\n                      <div className=\"field col-md-6\">\r\n                          <label>Insurance Amount</label>\r\n                          <input onChange={(e)=>onInputChange(e)} className=\"form-control\" name=\"insurance_amount\" type=\"text\" />\r\n                      </div>\r\n                      <div className=\"field col-md-6\">\r\n                          <label>Insurance Type</label>\r\n                          <input onChange={(e)=>onInputChange(e)} className=\"form-control\" name=\"insurance_type\" type=\"text\" />\r\n                      </div>\r\n                  </div>\r\n                  <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '20px' }}>\r\n                        <button className=\"btn btn-primary\" type='submit' style={{ marginRight: '50px' }}>Save</button>\r\n                        <button className=\"btn btn-primary\" type='reset'>Reset</button>\r\n                  </div>\r\n              </form>\r\n          </div><br />\r\n    <div style={{ height: 500, width: '100%' }}>\r\n      <DataGrid\r\n        rows={rows}\r\n        columns={columns}\r\n        pageSize={10}\r\n        rowsPerPageOptions={[10]}\r\n        checkboxSelection={false}\r\n        disableSelectionOnClick\r\n      />\r\n    </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Insurance_Registration;\r\n\r\n\r\n","D:\\Mitharis\\my-app\\src\\Components\\NavItems\\Data_Entry\\Enquiry_Generation.js",["127","128"],"D:\\Mitharis\\my-app\\src\\Components\\NavItems\\Dashboard.js",["129","130","131","132","133","134","135","136","137"],"D:\\Mitharis\\my-app\\src\\Components\\NavItems\\Data_Entry\\Transaction.js",["138","139","140"],"import React,{useState} from 'react';\r\nimport {\r\n    useQuery,\r\n    gql,\r\n    useSubscription,\r\n    useMutation\r\n  } from \"@apollo/client\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';       \r\n\r\nconst StockQuery=gql`\r\nquery MyQuery {\r\n  stock {\r\n    accidental\r\n    average\r\n    bank\r\n    bank_loan\r\n    vehicle_no\r\n    id\r\n  }\r\n}\r\n`\r\n\r\nconst SellerQuery=gql`\r\nquery MyQuery {\r\n  seller {\r\n    address\r\n    adhaar\r\n    email\r\n    id\r\n    licence\r\n    mobile_no\r\n    name\r\n    occupation\r\n    pan\r\n    photo\r\n    vehicle_master\r\n  }\r\n}\r\n`\r\nconst BuyerQuery=gql`\r\nquery MyQuery {\r\n  buyer {\r\n    customer_type\r\n    email\r\n    id\r\n    mobile_no\r\n    name\r\n  }\r\n}\r\n`\r\n\r\nconst TransactionQuery=gql`\r\nsubscription MySubscription {\r\n  transaction {\r\n    advance_amount\r\n    amount_paid\r\n    buyer\r\n    buyer_commission\r\n    id\r\n    pending_amount\r\n    reg_date\r\n    rto_commission\r\n    seller\r\n    seller_commission\r\n    vehicle\r\n    transaction_date\r\n    sellerBySeller {\r\n      name\r\n    }\r\n    buyerByBuyer {\r\n      name\r\n    }\r\n    stock {\r\n      vehicle_no\r\n    }\r\n  }\r\n} \r\n`\r\n\r\nconst UPDATE_TRANSACTION=gql`\r\n  mutation MyMutation2($id:Int!,$advance_amount:bigint!,$amount_paid:bigint!,$buyer:Int!,$buyer_commission:bigint!,$pending_amount:bigint!,$reg_date:date!,$rto_commission:bigint!,$seller:Int!,$seller_commission:bigint!,$transaction_date:date!,$vehicle:Int!){\r\n    update_transaction_by_pk(pk_columns: {id: $id}, _set: {advance_amount: $advance_amount, amount_paid: $amount_paid, buyer: $buyer, buyer_commission: $buyer_commission, pending_amount: $pending_amount, vehicle: $vehicle, transaction_date: $transaction_date, seller_commission: $seller_commission, seller: $seller, rto_commission: $rto_commission, reg_date: $reg_date}) {\r\n      id\r\n    }\r\n  }`\r\n\r\nconst INSERT_TRANSACTION=gql`\r\nmutation MyMutation($advance_amount:bigint!,$amount_paid:bigint!,$buyer:Int!,$buyer_commission:bigint!,$pending_amount:bigint!,$reg_date:date!,$rto_commission:bigint!,$seller:Int!,$seller_commission:bigint!,$transaction_date:date!,$vehicle:Int!){\r\n  insert_transaction_one(object: {advance_amount: $advance_amount, amount_paid: $amount_paid, buyer: $buyer, buyer_commission: $buyer_commission, pending_amount: $pending_amount, reg_date: $reg_date, rto_commission: $rto_commission, seller: $seller, seller_commission: $seller_commission, transaction_date: $transaction_date, vehicle: $vehicle}) {\r\n    id\r\n  }\r\n}\r\n`\r\nconst DELETE_TRANSACTION=gql`\r\nmutation MyMutation($id: Int!) {\r\n  delete_transaction_by_pk(id: $id) {\r\n    id\r\n  }\r\n}\r\n  `\r\n\r\n\r\nfunction Transaction()\r\n{   \r\n    const [showModal, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    const [transaction,setTransaction] = useState({\r\n      seller:\"\",\r\n      buyer:\"\",\r\n      seller_commission:\"\",\r\n      buyer_commission:\"\",\r\n      advance_amount:\"\",\r\n      amount_paid:\"\",\r\n      pending_amount:\"\",\r\n      rto_commission:\"\",\r\n      reg_date:\"\",\r\n      transaction_date:\"\",\r\n      vehicle:\"\"\r\n    })\r\n    const [modalTransaction,setModalTransaction] = useState({\r\n      id:\"\",\r\n      seller:\"\",\r\n      buyer:\"\",\r\n      seller_commission:\"\",\r\n      buyer_commission:\"\",\r\n      advance_amount:\"\",\r\n      amount_paid:\"\",\r\n      pending_amount:\"\",\r\n      rto_commission:\"\",\r\n      reg_date:\"\",\r\n      transaction_date:\"\",\r\n      vehicle:\"\"\r\n    })\r\n\r\n    const onInputChange=(e)=>{\r\n      setTransaction({...transaction,[e.target.name]:e.target.value})\r\n    }\r\n    const onModalInputChange=(e)=>{\r\n      setModalTransaction({...modalTransaction,[e.target.name]:e.target.value})\r\n      console.log(modalTransaction)\r\n  }\r\n    \r\n    const onFormSubmit=(e)=>{\r\n      e.preventDefault();\r\n      insertTransactionData({variables:{seller:transaction.seller,buyer:transaction.buyer,seller_commission:transaction.seller_commission,buyer_commission:transaction.buyer_commission,advance_amount:transaction.advance_amount,amount_paid:transaction.amount_paid,pending_amount:transaction.pending_amount,rto_commission:transaction.rto_commission,reg_date:transaction.reg_date,transaction_date:transaction.transaction_date,vehicle:transaction.vehicle}});\r\n  }\r\n  const onModalFormSubmit=(e)=>{\r\n    e.preventDefault();\r\n    console.log(e.target[0].value);\r\n    updateTransactionData({variables:{id:modalTransaction.id,seller:modalTransaction.seller,buyer:modalTransaction.buyer,seller_commission:modalTransaction.seller_commission,buyer_commission:modalTransaction.buyer_commission,advance_amount:modalTransaction.advance_amount,amount_paid:modalTransaction.amount_paid,pending_amount:modalTransaction.pending_amount,rto_commission:modalTransaction.rto_commission,reg_date:modalTransaction.reg_date,transaction_date:modalTransaction.transaction_date,vehicle:modalTransaction.vehicle}});\r\n    handleClose();\r\n  }\r\n  const editTransaction=(transaction_data)=>{\r\n    setModalTransaction({\r\n      id:transaction_data.id,\r\n      seller:transaction_data.seller,\r\n      buyer:transaction_data.buyer,\r\n      seller_commission:transaction_data.seller_commission,\r\n      buyer_commission:transaction_data.buyer_commission,\r\n      advance_amount:transaction_data.advance_amount,\r\n      amount_paid:transaction_data.amount_paid,\r\n      pending_amount:transaction_data.pending_amount,\r\n      rto_commission:transaction_data.rto_commission,\r\n      reg_date:transaction_data.reg_date,\r\n      transaction_date:transaction_data.transaction_date,\r\n      vehicle:transaction_data.vehicle\r\n    })\r\n    handleShow();\r\n}\r\nconst deleteTransaction=(id)=>{\r\n  console.log(id);\r\n  deleteTransactionData({variables:{id:id}})\r\n}\r\n    const [deleteTransactionData,{deletedData}]=useMutation(DELETE_TRANSACTION);\r\n    const [updateTransactionData,{updatedData}]=useMutation(UPDATE_TRANSACTION);\r\n    const [insertTransactionData,{transactionData}]=useMutation(INSERT_TRANSACTION);\r\n    const stock = useQuery(StockQuery);\r\n    const seller = useQuery(SellerQuery);\r\n    const buyer = useQuery(BuyerQuery);\r\n    const { loading, error, data } = useSubscription(TransactionQuery);\r\n    if (loading || stock.loading || seller.loading || buyer.loading) return <div style={{width:\"100%\",marginTop:'25%', textAlign:'center'}}><CircularProgress /></div>;\r\n    if (error) return `Error! ${error.message}`;\r\n    if (stock.error) return `Error1! ${stock.error.message}`;\r\n    \r\n    const columns = [\r\n        { \r\n            field: 'id', \r\n            headerName: 'ID', \r\n            width: 150,\r\n            hide:false, \r\n        },\r\n        {\r\n          field: \"seller\",\r\n          headerName: \"Seller Name\",\r\n          width: 160,\r\n          valueGetter: (params) => {\r\n            //console.log({ params });\r\n            let result = [];\r\n            if (params.row.sellerBySeller) {\r\n              if (params.row.sellerBySeller) {\r\n                result.push(params.row.sellerBySeller.name);\r\n              }\r\n              \r\n            } else {\r\n              result = [\"Unknown\"];\r\n            }\r\n            return result.join(\", \");\r\n          }\r\n        }\r\n        ,\r\n        {\r\n          field: \"buyer\",\r\n          headerName: \"Buyer Name\",\r\n          width: 160,\r\n          valueGetter: (params) => {\r\n            //console.log({ params });\r\n            let result = [];\r\n            if (params.row.buyerByBuyer) {\r\n              if (params.row.buyerByBuyer) {\r\n                result.push(params.row.buyerByBuyer.name);\r\n              }\r\n              \r\n            } else {\r\n              result = [\"Unknown\"];\r\n            }\r\n            return result.join(\", \");\r\n          }\r\n        },\r\n        {\r\n            field: 'seller_commission',\r\n            headerName: 'Seller Commission',\r\n            width: 150,\r\n            editable: false,\r\n          },\r\n          {\r\n            field: 'buyer_commission',\r\n            headerName: 'Buyer Commission',\r\n            width: 150,\r\n            editable: false,\r\n          },\r\n          {\r\n            field: 'advance_amount',\r\n            headerName: 'Advance Amount',\r\n            width: 150,\r\n            editable: false,\r\n          },\r\n          {\r\n            field: 'amount_paid',\r\n            headerName: 'Amount Paid',\r\n            width: 150,\r\n            editable: false,\r\n          },\r\n          {\r\n            field: 'pending_amount',\r\n            headerName: 'Pending Amount',\r\n            width: 150,\r\n            editable: false,\r\n          },\r\n        \r\n          {\r\n            field: 'rto_commission',\r\n            headerName: 'RTO Commission',\r\n            width: 150,\r\n            editable: false,\r\n          },\r\n          {\r\n            field: 'transaction_date',\r\n            headerName: 'Transaction Date',\r\n            width: 150,\r\n            editable: false,\r\n          },\r\n          {\r\n            field: 'reg_date',\r\n            headerName: 'Registered Date',\r\n            width: 150,\r\n            editable: false,\r\n          },\r\n          {\r\n            field: \"vehicle\",\r\n            headerName: \"Vehicle No\",\r\n            width: 160,\r\n            valueGetter: (params) => {\r\n              //console.log({ params });\r\n              let result = [];\r\n              if (params.row.stock) {\r\n                if (params.row.stock) {\r\n                  result.push(params.row.stock.vehicle_no);\r\n                }\r\n                \r\n              } else {\r\n                result = [\"Unknown\"];\r\n              }\r\n              return result.join(\", \");\r\n            }\r\n          },\r\n          {\r\n            field: 'action',\r\n            headerName: 'Action',\r\n            width: 300,\r\n            renderCell: (params) => {\r\n              return (\r\n                <div className=\"\">\r\n                <button data-toggle=\"tooltip\" title=\"Edit\" type=\"button\" className=\"btn btn-warning\" onClick={()=>{editTransaction(params.row)}} ><i className=\"fa fa-pencil\"></i></button>\r\n                <button data-toggle=\"tooltip\" title=\"Delete\" onClick={()=>{deleteTransaction(params.row.id)}} style={{marginLeft:'20%'}} className=\"btn btn-danger\"><i className=\"fa fa-trash\"></i></button>\r\n                \r\n                </div>\r\n              );\r\n           }\r\n          },\r\n      ];\r\n      console.log(stock.data.stock);\r\n      console.log(data.transaction);\r\n      const rows=data.transaction;\r\n      \r\nreturn (\r\n    <div className=\"container\">\r\n      <Modal show={showModal} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Modal heading</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n            <div className=\"col-md-6\">\r\n                <form className=\"form-group\" onSubmit={e=>onModalFormSubmit(e)}>\r\n                    <div className=\"field\">\r\n                        <label>Transaction Id</label>\r\n                        <input onChange={(e)=>{onModalInputChange(e)}} defaultValue={modalTransaction.id} className=\"form-control\" name=\"id\" type=\"text\" />\r\n                    </div>\r\n                    <div className=\"field\">\r\n                        <label>Seller</label>\r\n                        <input onChange={(e)=>{onModalInputChange(e)}} defaultValue={modalTransaction.seller} className=\"form-control\" name=\"seller\" type=\"text\" />\r\n                    </div>\r\n                    <div className=\"field\">\r\n                        <label>Buyer</label>\r\n                        <input onChange={(e)=>{onModalInputChange(e)}} defaultValue={modalTransaction.buyer} className=\"form-control\" name=\"buyer\" type=\"text\" />\r\n                    </div>\r\n                    <div className=\"field\">\r\n                        <label>Seller Commission</label>\r\n                        <input onChange={(e)=>{onModalInputChange(e)}} defaultValue={modalTransaction.seller_commission} className=\"form-control\" name=\"seller_commission\" type=\"text\" />\r\n                    </div>\r\n                    <div className=\"field\">\r\n                        <label>Buyer Commission</label>\r\n                        <input onChange={(e)=>{onModalInputChange(e)}} defaultValue={modalTransaction.buyer_commission} className=\"form-control\" name=\"buyer_commission\" type=\"text\" />\r\n                    </div>\r\n                    <div className=\"field\">\r\n                        <label>Advance Amount</label>\r\n                        <input onChange={(e)=>{onModalInputChange(e)}} defaultValue={modalTransaction.advance_amount} className=\"form-control\" name=\"advance_amount\" type=\"text\" />\r\n                    </div>\r\n                    <div className=\"field\">\r\n                        <label>Amount Paid</label>\r\n                        <input onChange={(e)=>{onModalInputChange(e)}} defaultValue={modalTransaction.amount_paid} className=\"form-control\" name=\"amount_paid\" type=\"text\" />\r\n                    </div>\r\n                    <div className=\"field\">\r\n                        <label>Pending Amount</label>\r\n                        <input onChange={(e)=>{onModalInputChange(e)}} defaultValue={modalTransaction.pending_amount} className=\"form-control\" name=\"pending_amount\" type=\"text\" />\r\n                    </div>\r\n                    \r\n                    <div className=\"field\">\r\n                        <label>RTO Commission</label>\r\n                        <input onChange={(e)=>{onModalInputChange(e)}} defaultValue={modalTransaction.rto_commission} className=\"form-control\" name=\"rto_commission\" type=\"text\" />\r\n                    </div>\r\n                    <div className=\"field\">\r\n                        <label>Registered Date</label>\r\n                        <input onChange={(e)=>{onModalInputChange(e)}} defaultValue={modalTransaction.reg_date} className=\"form-control\" name=\"reg_date\" type=\"text\" />\r\n                    </div>\r\n                    <div className=\"field\">\r\n                        <label>Transaction Date</label>\r\n                        <input onChange={(e)=>{onModalInputChange(e)}} defaultValue={modalTransaction.transaction_date} className=\"form-control\" name=\"transaction_date\" type=\"text\" />\r\n                    </div>\r\n                    <div className=\"field\">\r\n                        <label>Vehicle</label>\r\n                        <select onChange={(e)=>{onModalInputChange(e)}} className=\"form-control\">\r\n                          <option>Select Vehicle</option>\r\n                          {stock.data.stock.map(vehicle=>(\r\n                                <option key={vehicle.id} value={vehicle.id}>{vehicle.vehicle_no}</option>\r\n                              ))}\r\n                        </select>  \r\n                    </div>\r\n                    <div className=\"field\">\r\n                        <button className=\"btn btn-primary\">Save</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          \r\n        </Modal.Footer>\r\n      </Modal>\r\n        <div className=\"col-md-12\">\r\n              <form  onSubmit={(e)=>{onFormSubmit(e)}} className=\"form-group\">\r\n                  <div className=\"row\">\r\n                      <div className=\"field col-md-6\">\r\n                          <label>Seller</label>\r\n                          <select onChange={e=>onInputChange(e)} className=\"form-control\" name=\"seller\">\r\n                              <option>Select Seller</option>\r\n                              {seller.data.seller.map(seller=>(\r\n                                <option key={seller.id} value={seller.id}>{seller.name}</option>\r\n                              ))}\r\n                          </select>\r\n                      </div>\r\n                      <div className=\"field col-md-6\">\r\n                          <label>Buyer</label>\r\n                          <select onChange={e=>onInputChange(e)} className=\"form-control\" name=\"buyer\">\r\n                              <option>Select Buyer</option>\r\n                              {buyer.data.buyer.map(buyer=>(\r\n                                <option key={buyer.id} value={buyer.id}>{buyer.name}</option>\r\n                              ))}\r\n                          </select>\r\n                      </div>\r\n                  </div>\r\n                  <div className=\"row\">\r\n                      <div className=\"field col-md-6\">\r\n                          <label>Seller Commission</label>\r\n                          <input onChange={e=>onInputChange(e)} className=\"form-control\" name=\"seller_commission\" type=\"text\" />\r\n                      </div>\r\n                      <div className=\"field col-md-6\">\r\n                          <label>Buyer Commission</label>\r\n                          <input onChange={e=>onInputChange(e)} className=\"form-control\" name=\"buyer_commission\" type=\"text\" />\r\n                      </div>\r\n                  </div>\r\n                  <div className=\"row\">\r\n                      <div className=\"field col-md-6\">\r\n                          <label>Advance Amount</label>\r\n                          <input onChange={e=>onInputChange(e)} className=\"form-control\" name=\"advance_amount\" type=\"text\" />\r\n                      </div>\r\n                      <div className=\"field col-md-6\">\r\n                          <label>Amount Paid</label>\r\n                          <input onChange={e=>onInputChange(e)} className=\"form-control\" name=\"amount_paid\" type=\"text\" />\r\n                      </div>\r\n                  </div>\r\n                  <div className=\"row\">\r\n                      <div className=\"field col-md-6\">\r\n                          <label>Pending Amount</label>\r\n                          <input onChange={e=>onInputChange(e)} className=\"form-control\" name=\"pending_amount\" type=\"text\" />\r\n                      </div>\r\n                      \r\n                  </div>\r\n                  <div className=\"row\">\r\n                      <div className=\"field col-md-6\">\r\n                          <label>RTO Commission</label>\r\n                          <input onChange={e=>onInputChange(e)} className=\"form-control\" name=\"rto_commission\" type=\"text\" />\r\n                      </div>\r\n                      <div className=\"field col-md-6\">\r\n                          <label>Registered Date</label>\r\n                          <input onChange={e=>onInputChange(e)} className=\"form-control\" name=\"reg_date\" type=\"date\" />\r\n                      </div>\r\n                  </div>\r\n                  <div className=\"row\">\r\n                      <div className=\"field col-md-6\">\r\n                          <label>Transaction Date</label>\r\n                          <input onChange={e=>onInputChange(e)} className=\"form-control\" name=\"transaction_date\" type=\"date\" />\r\n                      </div>\r\n                      <div className=\"field col-md-6\">\r\n                          <label>Vehicle</label>\r\n                         \r\n                          <select onChange={e=>onInputChange(e)} className=\"form-control\" name=\"vehicle\">\r\n                              <option>Select Vehicle</option>\r\n                              {stock.data.stock.map(vehicle=>(\r\n                                <option key={vehicle.id} value={vehicle.id}>{vehicle.vehicle_no}</option>\r\n                              ))}\r\n                          </select>\r\n                      </div>\r\n                  </div>\r\n                  <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '20px' }}>\r\n                        <button className=\"btn btn-primary\" type='submit' style={{ marginRight: '50px' }}>Save</button>\r\n                        <button className=\"btn btn-primary\" type='reset'>Reset</button>\r\n                    </div>\r\n              </form>\r\n          </div>\r\n          <br />\r\n    <div style={{ height: 500, width: '100%' }}>\r\n      <DataGrid\r\n        rows={rows}\r\n        columns={columns}\r\n        pageSize={10}\r\n        rowsPerPageOptions={[10]}\r\n        checkboxSelection={false}\r\n        disableSelectionOnClick\r\n      />\r\n    </div>\r\n    </div>\r\n)\r\n}\r\n\r\nexport default Transaction;\r\n\r\n\r\n\r\n","D:\\Mitharis\\my-app\\src\\Components\\NavItems\\Data_Entry\\Vehicle_Registration.js",["141","142","143"],"import React, { useState } from 'react';\r\nimport {\r\n  gql,\r\n  useMutation,\r\n  useSubscription,\r\n} from \"@apollo/client\";\r\nimport { DataGrid, GridToolbar } from '@material-ui/data-grid';\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { Divider } from '@material-ui/core';\r\nimport { Switch, Route, Link } from \"react-router-dom\";\r\n\r\nconst UPDATE_VEHICLE = gql`\r\nmutation MyMutation($id: Int = 10, $address: String = \"\", $adhaar: String = \"\", $email: String = \"\", $licence: String = \"\", $mobile_no: String = \"\", $name: String = \"\", $occupation: String = \"\", $pan: String = \"\", $photo: String = \"\", $vehicle_master: Int = 10) {\r\n  update_seller_by_pk(pk_columns: {id: $id}, _set: {address: $address, adhaar: $adhaar, email: $email, licence: $licence, mobile_no: $mobile_no, name: $name, occupation: $occupation, pan: $pan, photo: $photo, vehicle_master: $vehicle_master}) {\r\n    id\r\n  }\r\n}\r\n`\r\n\r\nconst DELETE_VEHICLE = gql`\r\nmutation MyMutation($id: Int = 10) {\r\n  delete_seller_by_pk(id: $id) {\r\n    id\r\n  }\r\n}\r\n  `\r\n\r\n\r\nfunction Vehicle_Registration() {\r\n  const [showModal, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const [id, setId] = useState('');\r\n  \r\n  const INSERT_SELLER = gql`\r\n  mutation insert_seller($address: String = \"\", $adhaar: String = \"\", $licence: String = \"\", $mobile_no: String = \"\", $name: String = \"\", $occupation: String = \"\", $pan: String = \"\", $email: String = \"\") {\r\n    insert_seller(objects: {address: $address, adhaar: $adhaar, licence: $licence, mobile_no: $mobile_no, pan: $pan, name: $name, occupation: $occupation, email: $email}) {\r\n      affected_rows\r\n    }\r\n  }\r\n    `\r\n\r\n  const [insertSellersData] = useMutation(INSERT_SELLER);\r\n\r\n  const [seller, setSeller] = useState({\r\n    name: \"\",\r\n    mobile_no: \"\",\r\n    address: \"\",\r\n    adhaar: \"\",\r\n    pan: \"\",\r\n    occupation: \"\",\r\n    licence: \"\",\r\n    email: \"\",\r\n  })\r\n  \r\n  const onInputChange = (e) => {\r\n    setSeller({ ...seller, [e.target.name]: e.target.value })\r\n  }\r\n\r\n  const onFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    insertSellersData({ variables: { address: seller.address, adhaar: seller.adhaar, licence: seller.licence, mobile_no: seller.mobile_no, pan: seller.pan, name: seller.name, occupation: seller.occupation, email: seller.email } });\r\n  }\r\n  \r\n  const [modalseller, setModalSeller] = useState({\r\n    name: \"\",\r\n    mobile_no: \"\",\r\n    address: \"\",\r\n    adhaar: \"\",\r\n    pan: \"\",\r\n    occupation: \"\",\r\n    licence: \"\",\r\n    email: \"\",\r\n  })\r\n  \r\n  const onModalInputChange = (e) => {\r\n    setModalSeller({ ...modalseller, [e.target.name]: e.target.value })\r\n    console.log(modalseller)\r\n  }\r\n  \r\n  const deleteVehicle = (id) => {\r\n    console.log(id);\r\n    deleteVehicleData({ variables: { id: id } })\r\n  }\r\n  \r\n  const onModalFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(modalseller);\r\n    updateVehicleData({ variables: { id: id,address: modalseller.address, adhaar: modalseller.adhaar, licence: modalseller.licence, mobile_no: modalseller.mobile_no, pan: modalseller.pan, name: modalseller.name, occupation: modalseller.occupation, email: modalseller.email } });\r\n    handleClose();\r\n  }\r\n  const editVehicle = (row) => {\r\n    setModalSeller({\r\n      name: row.name,\r\n      mobile_no: row.mobile_no,\r\n      address: row.address,\r\n      adhaar: row.adhaar,\r\n      pan: row.pan,\r\n      occupation: row.occupation,\r\n      licence: row.licence,\r\n      email: row.email,\r\n    });\r\n    setId(row.id);\r\n\r\n    handleShow();\r\n  }\r\n  const [updateVehicleData] = useMutation(UPDATE_VEHICLE);\r\n  \r\n  const [deleteVehicleData] = useMutation(DELETE_VEHICLE);\r\n\r\n  const SellerQuery = gql`\r\n  subscription SellerSubscription {\r\n    seller(distinct_on: id) {\r\n      address\r\n      adhaar\r\n      email\r\n      licence\r\n      id\r\n      mobile_no\r\n      name\r\n      occupation\r\n      pan\r\n    }\r\n  }\r\n    `\r\n\r\n  const { loading, error, data } = useSubscription(SellerQuery);\r\n\r\n  if (loading) return <div style={{ width: \"100%\", marginTop: '25%', textAlign: 'center' }}><CircularProgress /></div>;\r\n  if (error) return `Error! ${error.message}`;\r\n\r\n  const rows = data.seller;\r\n\r\n  const columns = [\r\n    {\r\n      field: 'id',\r\n      headerName: 'ID',\r\n      width: 150,\r\n      hide: false,\r\n    },\r\n    {\r\n      field: 'name',\r\n      headerName: 'Name',\r\n      width: 150,\r\n      editable: false,\r\n    },\r\n    {\r\n      field: 'mobile_no',\r\n      headerName: 'Mobile No.',\r\n      width: 150,\r\n      editable: false,\r\n    },\r\n\r\n    {\r\n      field: 'address',\r\n      headerName: 'Address',\r\n      Width: 250,\r\n      flex: 1,\r\n      editable: false,\r\n    },\r\n    \r\n    // {\r\n    //   field: 'pan',\r\n    //   headerName: 'Pan Card Number',\r\n    //   width: 150,\r\n    //   editable: false,\r\n    // },\r\n    \r\n    // {\r\n    //   field: 'occupation',\r\n    //   headerName: 'Occupation',\r\n    //   width: 150,\r\n    //   editable: false,\r\n    // },\r\n\r\n    // {\r\n    //   field: 'licence',\r\n    //   headerName: 'Driving Licence Number',\r\n    //   width: 150,\r\n    //   editable: false,\r\n    // },\r\n    \r\n    {\r\n      field: 'email',\r\n      headerName: 'Email',\r\n      width: 150,\r\n      editable: false,\r\n    },\r\n\r\n    \r\n    // {\r\n    //   field: 'adhaar',\r\n    //   headerName: 'Adhaar Card Number',\r\n    //   width: 150,\r\n    //   editable: false,\r\n    // },\r\n\r\n\r\n    {\r\n      field: 'action',\r\n      headerName: 'Action',\r\n      width: 200,\r\n      renderCell: (params) => {\r\n        return (\r\n          <div className=\"\" style={{ width: \"100%\", textAlign: 'center', margin: '0 40px' }}>\r\n            <button type=\"button\" className=\"btn btn-warning\" data-toggle=\"tooltip\" title=\"Edit\" onClick={() => { editVehicle(params.row) }} ><i className=\"fa fa-pencil\"></i></button>\r\n            <button style={{ marginLeft: '20%' }} className=\"btn btn-danger\" data-toggle=\"tooltip\" title=\"Delete\" onClick={() => { deleteVehicle(params.row.id) }}><i className=\"fa fa-trash\"></i></button>\r\n\r\n          </div>\r\n        );\r\n      }\r\n    },\r\n  ];\r\n  //console.log(data3);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Modal show={showModal} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Modal heading</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"col-md-12\">\r\n            <form className=\"form-group\" onSubmit={(e) => { onModalFormSubmit(e) }}>\r\n            <div className=\"row\">\r\n            <div className=\"field col-md-6\">\r\n              <label>Seller Name</label>\r\n              <input defaultValue={modalseller.name} onChange={onModalInputChange} className=\"form-control\" name=\"name\" type=\"text\" placeholder='Enter Your Name' required/>\r\n            </div>\r\n\r\n            <div className=\"field col-md-6\">\r\n              <label>Occupation</label>\r\n              <input defaultValue={modalseller.occupation} onChange={onModalInputChange} className=\"form-control\" name=\"occupation\" type=\"text\" placeholder='Enter Your Occupation' required/>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"field col-md-6\">\r\n              <label>Contact Details</label>\r\n              <div style={{ display: 'flex' }}>\r\n                <input defaultValue={modalseller.mobile_no} onChange={onModalInputChange} className=\"form-control\" name=\"mobile_no\" type=\"text\" placeholder='+91' style={{ width: '50%' }} required/>\r\n                <button className=\"btn btn-primary\" style={{ margin: '0 20px' }} type='button'>Get OTP</button>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"field col-md-6\">\r\n              <label>Enter OTP</label>\r\n              <input onChange={onModalInputChange} className=\"form-control\" name=\"otp\" type=\"text\" placeholder='Enter Your OTP' />\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"field col-md-6\">\r\n              <label>License Number</label>\r\n              <input defaultValue={modalseller.licence} onChange={onModalInputChange} className=\"form-control\" name=\"licence\" type=\"text\" placeholder='Enter Your License Number' required/>\r\n            </div>\r\n\r\n            <div className=\"field col-md-6\">\r\n              <label>Pan Number</label>\r\n              <input defaultValue={modalseller.pan} onChange={onModalInputChange} className=\"form-control\" name=\"pan\" type=\"text\" placeholder='Enter Your Pan Number' required/>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"field col-md-6\">\r\n              <label>Email</label>\r\n              <input defaultValue={modalseller.email} onChange={onModalInputChange} className=\"form-control\" name=\"email\" type=\"text\" placeholder='Enter Your Email' required/>\r\n            </div>\r\n\r\n            <div className=\"field col-md-6\">\r\n              <label>Adhaar Number</label>\r\n              <input defaultValue={modalseller.adhaar} onChange={onModalInputChange} className=\"form-control\" name=\"adhaar\" type=\"text\" placeholder='Enter Your Adhar Number' required/>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"field col-md-6\">\r\n              <label>Address</label>\r\n              <input defaultValue={modalseller.address} onChange={onModalInputChange} className=\"form-control\" name=\"address\" type=\"text\" placeholder='Enter Your Address' required/>\r\n            </div>\r\n          </div>\r\n          <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '20px' }}>\r\n                        <button className=\"btn btn-primary\" type='submit' style={{ marginRight: '50px' }}>Save</button>\r\n                        <button className=\"btn btn-primary\" type='reset'>Reset</button>\r\n                    </div>\r\n            </form>\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n\r\n        </Modal.Footer>\r\n      </Modal>\r\n      <div className=\"col-md-12\">\r\n        <h1 style={{ width: '100%', textAlign: 'center' }}>Seller Registration</h1>\r\n        <Divider style={{ marginBottom: '10px', }} />\r\n        <form onSubmit={onFormSubmit} className=\"form-group\">\r\n          <div className=\"row\">\r\n            <div className=\"field col-md-6\">\r\n              <label>Seller Name</label>\r\n              <input onChange={onInputChange} className=\"form-control\" name=\"name\" type=\"text\" placeholder='Enter Your Name' required/>\r\n            </div>\r\n\r\n            <div className=\"field col-md-6\">\r\n              <label>Occupation</label>\r\n              <input onChange={onInputChange} className=\"form-control\" name=\"occupation\" type=\"text\" placeholder='Enter Your Occupation' required/>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"field col-md-6\">\r\n              <label>Contact Details</label>\r\n              <div style={{ display: 'flex' }}>\r\n                <input onChange={onInputChange} className=\"form-control\" name=\"mobile_no\" type=\"text\" placeholder='+91' style={{ width: '50%' }} required/>\r\n                <button className=\"btn btn-primary\" style={{ margin: '0 20px' }} type='button'>Get OTP</button>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"field col-md-6\">\r\n              <label>Enter OTP</label>\r\n              <input onChange={onInputChange} className=\"form-control\" name=\"otp\" type=\"text\" placeholder='Enter Your OTP' />\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"field col-md-6\">\r\n              <label>License Number</label>\r\n              <input onChange={onInputChange} className=\"form-control\" name=\"licence\" type=\"text\" placeholder='Enter Your License Number' required/>\r\n            </div>\r\n\r\n            <div className=\"field col-md-6\">\r\n              <label>Pan Number</label>\r\n              <input onChange={onInputChange} className=\"form-control\" name=\"pan\" type=\"text\" placeholder='Enter Your Pan Number' required/>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"field col-md-6\">\r\n              <label>Email</label>\r\n              <input onChange={onInputChange} className=\"form-control\" name=\"email\" type=\"text\" placeholder='Enter Your Email' required/>\r\n            </div>\r\n\r\n            <div className=\"field col-md-6\">\r\n              <label>Adhaar Number</label>\r\n              <input onChange={onInputChange} className=\"form-control\" name=\"adhaar\" type=\"text\" placeholder='Enter Your Adhar Number' required/>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"field col-md-6\">\r\n              <label>Address</label>\r\n              <input onChange={onInputChange} className=\"form-control\" name=\"address\" type=\"text\" placeholder='Enter Your Address' required/>\r\n            </div>\r\n          </div>\r\n          <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '20px' }}>\r\n            <button className=\"btn btn-primary\" type='submit' style={{ marginRight: '50px' }}>Save</button>\r\n            <button className=\"btn btn-primary\" type='reset'>Reset</button>\r\n          </div>\r\n        </form>\r\n      </div><br />\r\n      <div style={{ height: 500, width: '100%' }}>\r\n        <DataGrid\r\n          rows={rows}\r\n          columns={columns}\r\n          pageSize={10}\r\n          rowsPerPageOptions={[10]}\r\n          checkboxSelection={false}\r\n          // components={{\r\n          //   Toolbar: GridToolbar,\r\n          // }}\r\n          disableSelectionOnClick\r\n        />\r\n        <Link to={`/Data_Entry/Vehicle_Registration1`} className=\"btn btn-success\">\r\n          Next\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Vehicle_Registration;\r\n\r\n\r\n","D:\\Mitharis\\my-app\\src\\Components\\NavItems\\Data_Entry\\RTO_Agent.js",["144","145","146"],"import React, { useState } from 'react';\r\nimport {\r\n    gql,\r\n    useMutation,\r\n    useSubscription,\r\n} from \"@apollo/client\";\r\nimport { DataGrid, GridToolbar } from '@material-ui/data-grid';\r\n//import { IconName } from \"react-icons/bs\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\n//import 'bootstrap/dist/css/bootstrap.css';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { Divider } from '@material-ui/core';\r\n\r\nconst PaperWorkQuery = gql`\r\nsubscription MySubscription {\r\n  paperwork {\r\n    amount_paid\r\n    amount_pending\r\n    id\r\n    payable_amount\r\n    rto_id\r\n    seller_id\r\n  }\r\n}\r\n`\r\n// const VehicleMasterByPK=gql`\r\n// query MyQuery2($id:Int!){\r\n//   vehicle_master_by_pk(id:$id){\r\n\r\n//     model\r\n//     id\r\n//     brand\r\n//   }\r\n// }\r\n// `\r\nconst UPDATE_PAPERWORK = gql`\r\nmutation MyMutation($id: Int!, $amount_paid: bigint = \"\", $amount_pending: bigint = \"\", $payable_amount: bigint = \"\", $rto_id: Int = 10, $seller_id: Int = 10) {\r\n    update_paperwork_by_pk(pk_columns: {id: $id}, _set: {amount_paid: $amount_paid, amount_pending: $amount_pending, payable_amount: $payable_amount, rto_id: $rto_id, seller_id: $seller_id}) {\r\n      id\r\n    }\r\n  }\r\n  `\r\nconst INSERT_PAPERWORK = gql`\r\nmutation MyMutation($amount_paid: bigint!, $amount_pending: bigint!, $payable_amount: bigint!, $rto_id: Int!, $seller_id: Int!,$timestamp:date!) {\r\n    insert_paperwork_one(object: {amount_paid: $amount_paid, amount_pending: $amount_pending, payable_amount: $payable_amount, rto_id: $rto_id, seller_id: $seller_id,timestamp:$timestamp}) {\r\n      id\r\n    }\r\n}  \r\n  `\r\nconst DELETE_VEHICLE = gql`\r\nmutation MyMutation($id: Int = 10) {\r\n    delete_paperwork_by_pk(id: $id) {\r\n      id\r\n    }\r\n  }\r\n  \r\n  `\r\n\r\nfunction RTO_Agent() {\r\n    var today = new Date();\r\n    var dd = String(today.getDate()).padStart(2, '0');\r\n    var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n    var yyyy = today.getFullYear();\r\n    today = yyyy + '/' + mm + '/' + dd;\r\n    const [showModal, setShow] = useState(false);\r\n    const [id, setId] = useState();\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    const [paperwork, setPaperwork] = useState({\r\n        amount_paid: '',\r\n        amount_pending: '',\r\n        payable_amount: '',\r\n        rto_id: '',\r\n        seller_id: '',\r\n    })\r\n    const [updatedPaperwork, setUpdatedPaperwork] = useState({\r\n        id: 0,\r\n        amount_paid: '',\r\n        amount_pending: '',\r\n        payable_amount: '',\r\n        rto_id: '',\r\n        seller_id: '',\r\n    })\r\n    const onInputChange = (e) => {\r\n        setPaperwork({ ...paperwork, [e.target.name]: e.target.value })\r\n    }\r\n    const onModalInputChange = (e) => {\r\n        setUpdatedPaperwork({ ...updatedPaperwork, [e.target.name]: e.target.value })\r\n        console.log(updatedPaperwork)\r\n    }\r\n    const onFormSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(paperwork);\r\n        insertVehicleData({\r\n            variables: {\r\n                amount_paid: paperwork.amount_paid,\r\n                amount_pending: paperwork.amount_pending,\r\n                payable_amount: paperwork.payable_amount,\r\n                rto_id: paperwork.rto_id,\r\n                seller_id: paperwork.seller_id,\r\n                timestamp:today\r\n            }\r\n        });\r\n    }\r\n    const deleteVehicle = (id) => {\r\n        console.log(id);\r\n        deleteVehicleData({ variables: { id: id } })\r\n    }\r\n    const onModalFormSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(id);\r\n        updatePaperwork({\r\n            variables: {\r\n                id: id,\r\n                amount_paid: updatedPaperwork.amount_paid,\r\n                amount_pending: updatedPaperwork.amount_pending,\r\n                payable_amount: updatedPaperwork.payable_amount,\r\n                rto_id: updatedPaperwork.rto_id,\r\n                seller_id: updatedPaperwork.seller_id,\r\n            }\r\n        });\r\n        handleClose();\r\n    }\r\n    const editVehicle = (row) => {\r\n        console.log(row.id);\r\n        setId(parseInt(row.id));\r\n        setUpdatedPaperwork({\r\n            id: parseInt(row.id),\r\n            amount_paid: row.amount_paid,\r\n            amount_pending: row.amount_pending,\r\n            payable_amount: row.payable_amount,\r\n            rto_id: row.rto_id,\r\n            seller_id: row.seller_id,\r\n        });\r\n        handleShow();\r\n        //loadVehicle({ variables: { id:id } });\r\n        //console.log(data3);\r\n    }\r\n    const [updatePaperwork] = useMutation(UPDATE_PAPERWORK);\r\n    const [insertVehicleData] = useMutation(INSERT_PAPERWORK);\r\n    const [deleteVehicleData] = useMutation(DELETE_VEHICLE);\r\n\r\n    const { loading, error, data } = useSubscription(PaperWorkQuery);\r\n    // // const [loadVehicle,{loading3,data3}] = useLazyQuery(VehicleMasterByPK,{\r\n    // //   fetchPolicy: 'network-only',\r\n    // // });\r\n\r\n\r\n    if (loading) return <div style={{ width: \"100%\", marginTop: '25%', textAlign: 'center' }}><CircularProgress /></div>;\r\n    if (error) return `Error! ${error.message}`;\r\n\r\n    //console.log(data3)\r\n    // amount_paid\r\n    // amount_pending\r\n    // payable_amount\r\n    // rto_id\r\n    // seller_id\r\n    const columns = [\r\n        {\r\n            field: 'id',\r\n            headerName: 'ID',\r\n            width: 100,\r\n            hide: false,\r\n        },\r\n        {\r\n            field: 'amount_paid',\r\n            headerName: 'Amount Paid',\r\n            width: 190,\r\n            hide: false,\r\n        },\r\n        {\r\n            field: 'amount_pending',\r\n            headerName: 'Amount Pending',\r\n            width: 190,\r\n            editable: false,\r\n        },\r\n        {\r\n            field: 'payable_amount',\r\n            headerName: 'Payable Amount',\r\n            width: 190,\r\n            editable: false,\r\n        },\r\n\r\n        {\r\n            field: 'rto_id',\r\n            headerName: 'RTO Agent ID',\r\n            width: 130,\r\n            editable: false,\r\n        },\r\n        {\r\n            field: 'seller_id',\r\n            headerName: 'Seller Id',\r\n            width: 150,\r\n            editable: false,\r\n        },\r\n        {\r\n            field: 'action',\r\n            headerName: 'Action',\r\n            width: 150,\r\n            renderCell: (params) => {\r\n                return (\r\n                    <div className=\"\" style={{ width: \"100%\", textAlign: 'center', margin: '0 40px' }}>\r\n                        <button type=\"button\" className=\"btn btn-warning\" onClick={() => { editVehicle(params.row) }} ><i className=\"fa fa-pencil\"></i></button>\r\n                        <button style={{ marginLeft: '20%' }} className=\"btn btn-danger\" onClick={() => { deleteVehicle(params.row.id) }}><i className=\"fa fa-trash\"></i></button>\r\n\r\n                    </div>\r\n                );\r\n            }\r\n        },\r\n    ];\r\n    const rows = data.paperwork;\r\n    //console.log(data3);\r\n    // const rows = data.vehicle_master;\r\n\r\n    // pdf generation function\r\n    const printPdf = (e) => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <Modal show={showModal} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Modal heading</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"col-md-4\">\r\n                        <form className=\"form-group\" onSubmit={(e) => { onModalFormSubmit(e) }}>\r\n                            <div className=\"field\">\r\n                                <label>Amount Paid</label>\r\n                                <input defaultValue={updatedPaperwork.amount_paid} onChange={(e) => { onModalInputChange(e) }} className=\"form-control\" name=\"amount_paid\" type=\"text\" />\r\n                            </div>\r\n                            <div className=\"field\">\r\n                                <label>Amount Pending</label>\r\n                                <input defaultValue={updatedPaperwork.amount_pending} onChange={(e) => { onModalInputChange(e) }} className=\"form-control\" name=\"amount_pending\" type=\"text\" />\r\n                            </div>\r\n                            <div className=\"field\">\r\n                                <label>Payable Amount</label>\r\n                                <input defaultValue={updatedPaperwork.payable_amount} onChange={(e) => { onModalInputChange(e) }} className=\"form-control\" name=\"payable_amount\" type=\"text\" />\r\n                            </div>\r\n                            <div className=\"field\">\r\n                                <label>RTO Agent ID</label>\r\n                                <input defaultValue={updatedPaperwork.rto_id} onChange={(e) => { onModalInputChange(e) }} className=\"form-control\" name=\"rto_id\" type=\"text\" />\r\n                            </div>\r\n                            <div className=\"field\">\r\n                                <label>Seller ID</label>\r\n                                <input defaultValue={updatedPaperwork.seller_id} onChange={(e) => { onModalInputChange(e) }} className=\"form-control\" name=\"seller_id\" type=\"text\" />\r\n                            </div>\r\n\r\n                            <div className=\"field\">\r\n                                <button className=\"btn btn-primary\">Save</button>\r\n\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Close\r\n                    </Button>\r\n\r\n                </Modal.Footer>\r\n            </Modal>\r\n            <div className=\"col-md-12\">\r\n            <form  onSubmit={(e)=>{onFormSubmit(e)}} className=\"form-group\">\r\n                  <div className=\"row\">\r\n                      <div className=\"field col-md-6\">\r\n                          <label>Seller</label>\r\n                          <input onChange={e=>onInputChange(e)} className=\"form-control\" name=\"seller_id\" type=\"text\" />\r\n                      </div>\r\n                      <div className=\"field col-md-6\">\r\n                          <label>Amount Pending</label>\r\n                          <input onChange={e=>onInputChange(e)} className=\"form-control\" name=\"amount_pending\" type=\"text\" />\r\n                      </div>\r\n                  </div>\r\n                  <div className=\"row\">\r\n                      <div className=\"field col-md-6\">\r\n                          <label>Payable Amount</label>\r\n                          <input onChange={e=>onInputChange(e)} className=\"form-control\" name=\"payable_amount\" type=\"text\" />\r\n                      </div>\r\n                      <div className=\"field col-md-6\">\r\n                          <label>Amount Paid</label>\r\n                          <input onChange={e=>onInputChange(e)} className=\"form-control\" name=\"amount_paid\" type=\"text\" />\r\n                      </div>\r\n                  </div>\r\n                  <div className=\"row\">\r\n                      <div className=\"field col-md-6\">\r\n                          <label>RTO</label>\r\n                          <input onChange={e=>onInputChange(e)} className=\"form-control\" name=\"rto_id\" type=\"text\" />\r\n                      </div>\r\n                      \r\n                  </div>\r\n                    <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '20px' }}>\r\n                        <button className=\"btn btn-primary\" type='submit' style={{ marginRight: '50px' }}>Save</button>\r\n                        <button className=\"btn btn-primary\" type='reset'>Reset</button>\r\n                    </div>\r\n                </form>\r\n            </div><br />\r\n            <div style={{ height: 500, width: '100%' }}>\r\n                <DataGrid\r\n                    rows={rows}\r\n                    columns={columns}\r\n                    pageSize={10}\r\n                    rowsPerPageOptions={[10]}\r\n                    checkboxSelection={false}\r\n                    \r\n                    disableSelectionOnClick\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RTO_Agent;\r\n","D:\\Mitharis\\my-app\\src\\Components\\NavItems\\Data_Entry\\Stolen.js",["147","148","149","150","151","152","153","154"],"import React,{useState} from 'react';\r\nimport {\r\n    useQuery,\r\n    gql,\r\n    useMutation,\r\n    useSubscription,\r\n    useLazyQuery\r\n  } from \"@apollo/client\";\r\nimport { Switch, Route, Link } from \"react-router-dom\";\r\nimport { DataGrid } from '@material-ui/data-grid';\r\n//import { IconName } from \"react-icons/bs\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst INSERT_STOLEN=gql`\r\nmutation MyMutation($seller: Int!, $fine: Boolean!, $criminal_record: Boolean!, $vehicle_no: String!) {\r\n    insert_stolen_one(object: {criminal_record: $criminal_record, fine: $fine, seller: $seller, vehicle_no: $vehicle_no}) {\r\n      id\r\n    }\r\n  }  \r\n`\r\nconst UPDATE_STOLEN=gql`\r\nmutation MyMutation2($id:Int!,$seller:Int!,$vehicle_no:String!,$fine:Boolean!,$criminal_record:Boolean!){\r\n    update_stolen_by_pk(pk_columns: {id: $id}, _set: {seller:$seller,vehicle_no:$vehicle_no,fine:$fine,criminal_record:$criminal_record}) {\r\n      id\r\n    }\r\n  }\r\n`\r\nconst DELETE_STOLEN=gql`\r\nmutation MyMutation($id:Int!){\r\n    delete_stolen_by_pk(id:$id) {\r\n        id\r\n    }\r\n}\r\n`\r\n\r\nconst StolenQuery=gql`\r\nsubscription MySubscription {\r\n    stolen {\r\n      criminal_record\r\n      fine\r\n      id\r\n      seller\r\n      vehicle_no\r\n    }\r\n  } \r\n`\r\n\r\nfunction Stolen()\r\n{\r\n    const [showModal, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    const [modalId,setModalId]=useState(\"\");\r\n    const [modalSeller,setModalSeller]=useState(\"\");\r\n    const [modalVehicle_no,setModalVehicle_no]=useState(\"\");\r\n    const [modalFine,setModalFine]=useState(false);\r\n    const [modalCriminal_record,setModalCriminal_record]=useState(false);\r\n    const [seller,setSeller]=useState(\"\");\r\n    const [vehicle_no,setVehicle_no]=useState(\"\");\r\n    const [fine,setFine]=useState(false);\r\n    const [criminal_record,setCriminal_record]=useState(false);\r\n    const onSellerChange=(e)=>{\r\n        setSeller(e.target.value)\r\n    }\r\n    const onVehicle_noChange=(e)=>{\r\n        setVehicle_no(e.target.value)\r\n    }\r\n    const onFineChange=(e)=>{\r\n        setFine(e.target.checked)\r\n    }\r\n    const onCriminal_recordChange=(e)=>{\r\n        setCriminal_record(e.target.checked)\r\n    }\r\n    const onFormSubmit=(e)=>{\r\n        e.preventDefault();\r\n        insertStolen({variables:{seller:seller,vehicle_no:vehicle_no,fine:fine,criminal_record:criminal_record}});\r\n    }\r\n    const [insertStolen,{stolenData}]=useMutation(INSERT_STOLEN);\r\n    const [updateStolen,{updatedData}]=useMutation(UPDATE_STOLEN);\r\n    const [deleteStolen,{deleteData}]=useMutation(DELETE_STOLEN);\r\n    const { loading, error, data } = useSubscription(StolenQuery);\r\n    // const [loadVehicle,{loading3,data3}] = useLazyQuery(VehicleMasterByPK,{\r\n    //   fetchPolicy: 'network-only',\r\n    // });\r\n    const editStolen=(stolen_data)=>{\r\n        setModalId(stolen_data.id)\r\n        setModalSeller(stolen_data.seller)\r\n        setModalVehicle_no(stolen_data.vehicle_no)\r\n        setModalFine(stolen_data.fine)\r\n        setModalCriminal_record(stolen_data.criminal_record)\r\n        handleShow();\r\n        //console.log(criminal_record)\r\n    }\r\n    const onModalFormSubmit=(e)=>{\r\n        e.preventDefault();\r\n        updateStolen({variables:{id:e.target[0].value,seller:e.target[1].value,vehicle_no:e.target[2].value,fine:e.target[3].checked,criminal_record:e.target[4].checked}});\r\n        handleClose();\r\n    }\r\n    const deleteStolenData=(id)=>{\r\n        deleteStolen({variables:{id:id}})\r\n    }\r\n\r\n    if (loading) return <div style={{width:\"100%\",marginTop:'25%', textAlign:'center'}}><CircularProgress /></div>;\r\n    if (error) return `Error! ${error.message}`;\r\n\r\n\r\n    console.log(data);\r\n    const rows=data.stolen;\r\n    const columns = [\r\n      { \r\n          field: 'id', \r\n          headerName: 'ID', \r\n          width: 150,\r\n          hide:false, \r\n        },\r\n      {\r\n        field: 'seller',\r\n        headerName: 'Seller',\r\n        width: 150,\r\n        editable: false,\r\n      },\r\n      {\r\n        field: 'vehicle_no',\r\n        headerName: 'Vehicle No',\r\n        width: 150,\r\n        editable: false,\r\n      },\r\n      {\r\n        field: 'fine',\r\n        headerName: 'Fine',\r\n        width: 150,\r\n        editable: false,\r\n      },\r\n      {\r\n        field: 'criminal_record',\r\n        headerName: 'Criminal Record',\r\n        width: 150,\r\n        editable: false,\r\n      },\r\n      {\r\n        field: 'action',\r\n        headerName: 'Action',\r\n        width: 300,\r\n        renderCell: (params) => {\r\n          return (\r\n            <div className=\"\">\r\n            <button data-toggle=\"tooltip\" title=\"Edit\" onClick={(e)=>{editStolen(params.row)}} type=\"button\" className=\"btn btn-warning\"><i className=\"fa fa-pencil\"></i></button>\r\n            <button data-toggle=\"tooltip\" title=\"Delete\" onClick={(e)=>{deleteStolenData(params.row.id)}} style={{marginLeft:'20%'}} className=\"btn btn-danger\"><i className=\"fa fa-trash\"></i></button>\r\n            \r\n            </div>\r\n          );\r\n       }\r\n      },\r\n    ];\r\n    //console.log(data3);\r\n    //const rows=data.vehicle_master;\r\n    return(\r\n      <div className=\"container\">\r\n        <Modal show={showModal} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Modal heading</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n            <div className=\"col-md-4\">\r\n                <form className=\"form-group\" onSubmit={(e)=>onModalFormSubmit(e)}>\r\n                    <div className=\"field\">\r\n                        <label>Stolen Id</label>\r\n                        <input defaultValue={modalId} className=\"form-control\" name=\"id\" type=\"text\" />\r\n                    </div>\r\n                    <div className=\"field\">\r\n                        <label>Seller</label>\r\n                        <input defaultValue={modalSeller} className=\"form-control\" name=\"seller\" type=\"text\" />\r\n                    </div>\r\n                    <div className=\"field\">\r\n                        <label>Vehicle No</label>\r\n                        <input defaultValue={modalVehicle_no} className=\"form-control\" name=\"vehicle_no\" type=\"text\" />\r\n                    </div>\r\n                    <div className=\"field\">\r\n                        <label>Fine</label>\r\n                        <input defaultChecked={modalFine} className=\"form-check-input\" name=\"fine\" type=\"checkbox\" />\r\n                    </div>\r\n                    <div className=\"field\">\r\n                        <label>Criminal Record</label>\r\n                        <input defaultChecked={modalCriminal_record} className=\"form-check-input\" name=\"criminal_record\" type=\"checkbox\" />\r\n                    </div>\r\n                    <div className=\"field\">\r\n                        <button className=\"btn btn-primary\">Save</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          \r\n        </Modal.Footer>\r\n      </Modal>\r\n          <div className=\"col-md-12\">\r\n              <form onSubmit={(e)=>{onFormSubmit(e)}} className=\"form-group\">\r\n                  <div className=\"row\">\r\n                      <div className=\"field col-md-6\">\r\n                          <label>Seller</label>\r\n                          <input onChange={e=>onSellerChange(e)} className=\"form-control\" name=\"seller\" type=\"text\" />\r\n                      </div>\r\n\r\n                      <div className=\"field col-md-6\">\r\n                          <label>Vehicle No</label>\r\n                          <input onChange={e=>onVehicle_noChange(e)} className=\"form-control\" name=\"vehicle_no\" type=\"text\" />\r\n                      </div>\r\n                      <div className=\"field col-md-6\">\r\n                      <div className=\"form-check\">\r\n                          <label>Fine</label>\r\n                          <input onChange={e=>onFineChange(e)} className=\"form-check-input\" name=\"fine\" type=\"checkbox\" />\r\n                      </div>\r\n                      <div className=\"form-check\">\r\n                          <label>Criminal Record</label>\r\n                          <input onChange={e=>onCriminal_recordChange(e)} className=\"form-check-input\" name=\"criminal_record\" type=\"checkbox\" />\r\n                      </div>\r\n                      </div>\r\n                  </div>\r\n                  <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '20px' }}>\r\n                        <button className=\"btn btn-primary\" type='submit' style={{ marginRight: '50px' }}>Save</button>\r\n                        <button className=\"btn btn-primary\" type='reset'>Reset</button>\r\n                    </div>\r\n              </form>\r\n          </div><br />\r\n    <div style={{ height: 500, width: '100%' }}>\r\n      <DataGrid\r\n        rows={rows}\r\n        columns={columns}\r\n        pageSize={10}\r\n        rowsPerPageOptions={[10]}\r\n        checkboxSelection={false}\r\n        disableSelectionOnClick\r\n      />\r\n    </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Stolen;\r\n\r\n\r\n","D:\\Mitharis\\my-app\\src\\Components\\NavItems\\Reporting\\Sales_Report.js",["155","156","157","158","159","160"],"import React,{useState} from 'react';\r\nimport {\r\n    useQuery,\r\n    gql,\r\n    useSubscription,\r\n    useMutation,\r\n    useLazyQuery\r\n  } from \"@apollo/client\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport { DataGrid,GridToolbar } from '@material-ui/data-grid';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';  \r\nimport { Divider } from '@material-ui/core'; \r\nimport jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\n\r\nconst StockQuery=gql`\r\nquery MyQuery {\r\n  stock {\r\n    accidental\r\n    average\r\n    bank\r\n    bank_loan\r\n    vehicle_no\r\n    id\r\n  }\r\n}\r\n`\r\n\r\nconst SellerQuery=gql`\r\nquery MyQuery {\r\n  seller {\r\n    address\r\n    adhaar\r\n    email\r\n    id\r\n    licence\r\n    mobile_no\r\n    name\r\n    occupation\r\n    pan\r\n    photo\r\n    vehicle_master\r\n  }\r\n}\r\n`\r\nconst BuyerQuery=gql`\r\nquery MyQuery {\r\n  buyer {\r\n    customer_type\r\n    email\r\n    id\r\n    mobile_no\r\n    name\r\n  }\r\n}\r\n`\r\n\r\nconst TransactionQuery=gql`\r\nquery MyQuery($_lte: date!, $_gte: date!) {\r\n  transaction(where: {transaction_date: {_gte: $_gte,_lte:$_lte}}) {\r\n    advance_amount\r\n    amount_paid\r\n    buyer\r\n    buyer_commission\r\n    id\r\n    pending_amount\r\n    reg_date\r\n    rto_commission\r\n    seller\r\n    seller_commission\r\n    vehicle\r\n    transaction_date\r\n    sellerBySeller {\r\n      name\r\n    }\r\n    buyerByBuyer {\r\n      name\r\n    }\r\n    stock {\r\n      vehicle_no\r\n    }\r\n  }\r\n} \r\n`\r\n\r\nfunction Transaction()\r\n{   \r\n  var rows=[];\r\n  const [date,setDate]=useState({\r\n      from:\"\",\r\n      to:\"\"\r\n    });\r\n    const onInputChange=(e)=>{  \r\n      setDate({...date,[e.target.name]:e.target.value})\r\n    }\r\n    const onFormSubmit=(e)=>\r\n    {\r\n      e.preventDefault();\r\n      \r\n      getData({ variables: { _lte:date.to,_gte:date.from } })\r\n      //console.assert();\r\n    }\r\n    const stock = useQuery(StockQuery);\r\n    const seller = useQuery(SellerQuery);\r\n    const buyer = useQuery(BuyerQuery);\r\n    const [getData,{ loading, error, data }] = useLazyQuery(TransactionQuery);\r\n    if (loading || stock.loading) return <div style={{width:\"100%\",marginTop:'25%', textAlign:'center'}}><CircularProgress /></div>;\r\n    if (error) return `Error! ${error.message}`;\r\n    if (stock.error) return `Error1! ${stock.error.message}`;\r\n    \r\n    const columns = [\r\n        { \r\n            field: 'id', \r\n            headerName: 'ID', \r\n            width: 150,\r\n            hide:false, \r\n        },\r\n        {\r\n          field: \"seller\",\r\n          headerName: \"Seller Name\",\r\n          width: 160,\r\n          valueGetter: (params) => {\r\n            //console.log({ params });\r\n            let result = [];\r\n            if (params.row.sellerBySeller) {\r\n              if (params.row.sellerBySeller) {\r\n                result.push(params.row.sellerBySeller.name);\r\n              }\r\n              \r\n            } else {\r\n              result = [\"Unknown\"];\r\n            }\r\n            return result.join(\", \");\r\n          }\r\n        }\r\n        ,\r\n        {\r\n          field: \"buyer\",\r\n          headerName: \"Buyer Name\",\r\n          width: 160,\r\n          valueGetter: (params) => {\r\n            //console.log({ params });\r\n            let result = [];\r\n            if (params.row.buyerByBuyer) {\r\n              if (params.row.buyerByBuyer) {\r\n                result.push(params.row.buyerByBuyer.name);\r\n              }\r\n              \r\n            } else {\r\n              result = [\"Unknown\"];\r\n            }\r\n            return result.join(\", \");\r\n          }\r\n        },\r\n          {\r\n            field: 'advance_amount',\r\n            headerName: 'Advance Amount',\r\n            width: 150,\r\n            editable: false,\r\n          },\r\n          {\r\n            field: 'amount_paid',\r\n            headerName: 'Amount Paid',\r\n            width: 150,\r\n            editable: false,\r\n          },\r\n          {\r\n            field: 'pending_amount',\r\n            headerName: 'Pending Amount',\r\n            width: 150,\r\n            editable: false,\r\n          },\r\n        \r\n          {\r\n            field: 'rto_commission',\r\n            headerName: 'RTO Commission',\r\n            width: 150,\r\n            editable: false,\r\n          },\r\n          {\r\n            field: 'transaction_date',\r\n            headerName: 'Transaction Date',\r\n            width: 150,\r\n            editable: false,\r\n          },\r\n          {\r\n            field: 'reg_date',\r\n            headerName: 'Registered Date',\r\n            width: 150,\r\n            editable: false,\r\n          },\r\n          {\r\n            field: \"vehicle\",\r\n            headerName: \"Vehicle No\",\r\n            width: 160,\r\n            valueGetter: (params) => {\r\n              //console.log({ params });\r\n              let result = [];\r\n              if (params.row.stock) {\r\n                if (params.row.stock) {\r\n                  result.push(params.row.stock.vehicle_no);\r\n                }\r\n                \r\n              } else {\r\n                result = [\"Unknown\"];\r\n              }\r\n              return result.join(\", \");\r\n            }\r\n          },\r\n      ];\r\n      //console.log(stock.data.stock);\r\n      //const rows=data.transaction;\r\n      if(data)\r\n      {\r\n        console.log(data.transaction);\r\n        rows=data.transaction;\r\n      }\r\n      const exportPDF = () => {\r\n        const unit = \"pt\";\r\n        const size = \"A4\"; // Use A1, A2, A3 or A4\r\n        const orientation = \"portrait\"; // portrait or landscape\r\n    \r\n        const marginLeft = 40;\r\n        const doc = new jsPDF(orientation, unit, size);\r\n    \r\n        doc.setFontSize(15);\r\n    \r\n        const title = \"Sales Report\";\r\n        const headers = [[\"ID\",\"SELLER\",\"BUYER\",\"VEHICLE\",\"ADVANCE AMOUNT\",\"AMOUNT PAID\",\"PENDING AMOUNT\"]];\r\n    \r\n        const comm_data = data.transaction.map(comm=> [comm.id,comm.seller,comm.buyer,comm.advance_amount,comm.vehicle,comm.amount_paid,comm.pending_amount]);\r\n    \r\n        let content = {\r\n          startY: 50,\r\n          head: headers,\r\n          body: comm_data  \r\n        };\r\n    \r\n        doc.text(title, marginLeft, 40);\r\n        doc.autoTable(content);\r\n        doc.save(\"report.pdf\")\r\n      }\r\nreturn (\r\n    <div className=\"container\">  <div className=\"col-md-12\">\r\n    <h1 style={{ width: '100%', textAlign: 'center' }}>Sales Report</h1>\r\n    <Divider />\r\n\r\n    <div className=\"field\" style={{ display: 'flex' }}>\r\n        <div style={{ marginRight: '70%', marginTop: '30px' }}>\r\n            <button onClick={() =>exportPDF()} class=\"btn btn-primary\" type='button'>Print PDF</button>\r\n        </div>\r\n        <div>\r\n            <label>Search</label>\r\n            <input className=\"form-control\" name=\"brand\" type=\"text\" />\r\n        </div>\r\n    </div>\r\n    <form className=\"form-group\" onSubmit={e=>onFormSubmit(e)} style={{ marginTop: '50px' }}>\r\n        <div className=\"row\">\r\n            <div className=\"field col-md-6\">\r\n                <label>From</label>\r\n                <input className=\"form-control\" onChange={e=>{onInputChange(e)}} name=\"from\" type=\"date\" />\r\n            </div>\r\n\r\n            <div className=\"field col-md-6\">\r\n                <label>To</label>\r\n                <input className=\"form-control\" onChange={e=>{onInputChange(e)}} name=\"to\" type=\"date\" />\r\n            </div>\r\n        </div>\r\n        <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '20px' }}>\r\n            <button className=\"btn btn-primary\" type='submit' style={{ marginRight: '50px' }}>Save</button>\r\n            <button className=\"btn btn-primary\" type='reset'>Reset</button>\r\n        </div>\r\n    </form>\r\n</div><br />\r\n        <div style={{ height: 500, width: '100%' }}>\r\n            <DataGrid\r\n                rows={rows}\r\n                columns={columns}\r\n                pageSize={10}\r\n                rowsPerPageOptions={[10]}\r\n                checkboxSelection={false}\r\n                components={{\r\n                    Toolbar: GridToolbar,\r\n                  }}\r\n                disableSelectionOnClick\r\n            />\r\n        </div>\r\n    </div>\r\n)\r\n}\r\n\r\nexport default Transaction;\r\n\r\n\r\n\r\n","D:\\Mitharis\\my-app\\src\\Components\\NavItems\\Reporting\\Commision_Report.js",["161","162","163","164","165","166","167","168","169"],"import React,{useState} from 'react';\r\nimport {\r\n    useLazyQuery,\r\n    gql,\r\n    useQuery,\r\n    useSubscription,\r\n    useMutation\r\n  } from \"@apollo/client\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport { DataGrid,GridToolbar } from '@material-ui/data-grid';\r\nimport CircularProgress from '@material-ui/core/CircularProgress'; \r\nimport { Divider } from '@material-ui/core';  \r\nimport jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\n\r\nconst StockQuery=gql`\r\nquery MyQuery {\r\n  stock {\r\n    accidental\r\n    average\r\n    bank\r\n    bank_loan\r\n    vehicle_no\r\n    id\r\n  }\r\n}\r\n`\r\n\r\nconst SellerQuery=gql`\r\nquery MyQuery {\r\n  seller {\r\n    address\r\n    adhaar\r\n    email\r\n    id\r\n    licence\r\n    mobile_no\r\n    name\r\n    occupation\r\n    pan\r\n    photo\r\n    vehicle_master\r\n  }\r\n}\r\n`\r\nconst BuyerQuery=gql`\r\nquery MyQuery {\r\n  buyer {\r\n    customer_type\r\n    email\r\n    id\r\n    mobile_no\r\n    name\r\n  }\r\n}\r\n`\r\n\r\nconst TransactionQuery=gql`\r\nquery MyQuery($_lte: date!, $_gte: date!) {\r\n  transaction(where: {transaction_date: {_gte: $_gte,_lte:$_lte}}) {\r\n    advance_amount\r\n    amount_paid\r\n    buyer\r\n    buyer_commission\r\n    id\r\n    pending_amount\r\n    reg_date\r\n    rto_commission\r\n    seller\r\n    seller_commission\r\n    vehicle\r\n    transaction_date\r\n    sellerBySeller {\r\n      name\r\n    }\r\n    buyerByBuyer {\r\n      name\r\n    }\r\n    stock {\r\n      vehicle_no\r\n    }\r\n  }\r\n} \r\n`\r\n\r\nfunction Commission_Report()\r\n{   \r\n    var rows=[];\r\n    var counter=0;\r\n    const [date,setDate]=useState({\r\n      from:\"\",\r\n      to:\"\"\r\n    });\r\n    const comm_data=useState([])\r\n    const onInputChange=(e)=>{  \r\n      setDate({...date,[e.target.name]:e.target.value})\r\n    }\r\n    const onFormSubmit=(e)=>\r\n    {\r\n      e.preventDefault();\r\n      \r\n      getData({ variables: { _lte:date.to,_gte:date.from } })\r\n      //console.assert();\r\n    }\r\n    const stock = useQuery(StockQuery);\r\n    const seller = useQuery(SellerQuery);\r\n    const buyer = useQuery(BuyerQuery);\r\n  \r\n    const [getData,{ loading, error, data }] = useLazyQuery(TransactionQuery);\r\n    if (loading) return <div style={{width:\"100%\",marginTop:'25%', textAlign:'center'}}><CircularProgress /></div>;\r\n    if (error) return `Error! ${error.message}`;\r\n    \r\n    console.log(data);\r\n    \r\n    const columns = [\r\n        { \r\n            field: 'id', \r\n            headerName: 'ID', \r\n            width: 150,\r\n            hide:false, \r\n        },\r\n        {\r\n          field: \"seller\",\r\n          headerName: \"Seller Name\",\r\n          width: 160,\r\n          valueGetter: (params) => {\r\n            //console.log({ params });\r\n            let result = [];\r\n            if (params.row.sellerBySeller) {\r\n              if (params.row.sellerBySeller) {\r\n                result.push(params.row.sellerBySeller.name);\r\n              }\r\n              \r\n            } else {\r\n              result = [\"Unknown\"];\r\n            }\r\n            return result.join(\", \");\r\n          }\r\n        }\r\n        ,\r\n        {\r\n          field: \"buyer\",\r\n          headerName: \"Buyer Name\",\r\n          width: 160,\r\n          valueGetter: (params) => {\r\n            //console.log({ params });\r\n            let result = [];\r\n            if (params.row.buyerByBuyer) {\r\n              if (params.row.buyerByBuyer) {\r\n                result.push(params.row.buyerByBuyer.name);\r\n              }\r\n              \r\n            } else {\r\n              result = [\"Unknown\"];\r\n            }\r\n            return result.join(\", \");\r\n          }\r\n        },\r\n        {\r\n            field: 'seller_commission',\r\n            headerName: 'Seller Commission',\r\n            width: 150,\r\n            editable: false,\r\n          },\r\n          {\r\n            field: 'buyer_commission',\r\n            headerName: 'Buyer Commission',\r\n            width: 150,\r\n            editable: false,\r\n          },\r\n          {\r\n            field: 'rto_commission',\r\n            headerName: 'RTO Commission',\r\n            width: 150,\r\n            editable: false,\r\n          },\r\n          {\r\n            field: \"vehicle\",\r\n            headerName: \"Vehicle No\",\r\n            width: 160,\r\n            valueGetter: (params) => {\r\n              //console.log({ params });\r\n              let result = [];\r\n              if (params.row.stock) {\r\n                if (params.row.stock) {\r\n                  result.push(params.row.stock.vehicle_no);\r\n                }\r\n                \r\n              } else {\r\n                result = [\"Unknown\"];\r\n              }\r\n              return result.join(\", \");\r\n            }\r\n          },\r\n      ];\r\n      //console.log(data.transaction);\r\n      if(data)\r\n      {\r\n        console.log(data.transaction);\r\n        rows=data.transaction;\r\n      }\r\n      const exportPDF = () => {\r\n        const unit = \"pt\";\r\n        const size = \"A4\"; // Use A1, A2, A3 or A4\r\n        const orientation = \"portrait\"; // portrait or landscape\r\n    \r\n        const marginLeft = 40;\r\n        const doc = new jsPDF(orientation, unit, size);\r\n    \r\n        doc.setFontSize(15);\r\n    \r\n        const title = \"Commission Report\";\r\n        const headers = [[\"ID\",\"SELLER\",\"BUYER\",\"SELLER COMMISSION\",\"BUYER_COMMISSION\",\"RTO COMMISSION\",\"VEHICLE\"]];\r\n    \r\n        const comm_data = data.transaction.map(comm=> [comm.id,comm.seller,comm.buyer,comm.seller_commission,comm.buyer_commission,comm.rto_commission,comm.vehicle]);\r\n    \r\n        let content = {\r\n          startY: 50,\r\n          head: headers,\r\n          body: comm_data  \r\n        };\r\n    \r\n        doc.text(title, marginLeft, 40);\r\n        doc.autoTable(content);\r\n        doc.save(\"report.pdf\")\r\n      }\r\nreturn (\r\n    <div className=\"container\">  \r\n    <div className=\"col-md-12\">\r\n      <h1 style={{ width: '100%', textAlign: 'center' }}>Commission Report</h1>\r\n    <Divider />\r\n\r\n    <div className=\"field\" style={{ display: 'flex' }}>\r\n        <div style={{ marginRight: '70%', marginTop: '30px' }}>\r\n            <button onClick={() =>exportPDF()} class=\"btn btn-primary\" type='button'>Print PDF</button>\r\n        </div>\r\n        <div>\r\n            <label>Search</label>\r\n            <input className=\"form-control\" name=\"brand\" type=\"text\" />\r\n        </div>\r\n    </div>\r\n    <form className=\"form-group\" onSubmit={e=>onFormSubmit(e)} style={{ marginTop: '50px' }}>\r\n        <div className=\"row\">\r\n            <div className=\"field col-md-6\">\r\n                <label>From</label>\r\n                <input className=\"form-control\" onChange={e=>{onInputChange(e)}} name=\"from\" type=\"date\" />\r\n            </div>\r\n\r\n            <div className=\"field col-md-6\">\r\n                <label>To</label>\r\n                <input className=\"form-control\" onChange={e=>{onInputChange(e)}} name=\"to\" type=\"date\" />\r\n            </div>\r\n        </div>\r\n        <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '20px' }}>\r\n            <button className=\"btn btn-primary\" type='submit' style={{ marginRight: '50px' }}>Save</button>\r\n            <button className=\"btn btn-primary\" type='reset'>Reset</button>\r\n        </div>\r\n    </form>\r\n</div><br />\r\n        <div style={{ height: 500, width: '100%' }}>\r\n            <DataGrid\r\n                rows={rows}\r\n                columns={columns}\r\n                pageSize={10}\r\n                rowsPerPageOptions={[10]}\r\n                checkboxSelection={false}\r\n                components={{\r\n                    Toolbar: GridToolbar,\r\n                  }}\r\n                disableSelectionOnClick\r\n            />\r\n        </div>\r\n    </div>\r\n)\r\n}\r\n\r\nexport default Commission_Report;\r\n\r\n\r\n\r\n","D:\\Mitharis\\my-app\\src\\Components\\NavItems\\Reporting\\Insurance_Report.js",["170","171","172","173","174","175","176","177"],"import React,{useState} from 'react';\r\nimport {\r\n    useQuery,\r\n    gql,\r\n    useMutation,\r\n    useSubscription,\r\n    useLazyQuery\r\n  } from \"@apollo/client\";\r\nimport { Switch, Route, Link } from \"react-router-dom\";\r\nimport { DataGrid,GridToolbar } from '@material-ui/data-grid';\r\n//import { IconName } from \"react-icons/bs\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { Divider } from '@material-ui/core';\r\nimport jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\n\r\nconst InsuranceQuery=gql`\r\nquery MyQuery($_lte: date!, $_gte: date!) {\r\n  insurance(where: {timestamp: {_gte: $_gte, _lte: $_lte}}) {\r\n    customer\r\n    from_date\r\n    id\r\n    insurance_amount\r\n    insurance_type\r\n    to_date\r\n    vehicle_no\r\n  }\r\n}\r\n`\r\nfunction Insurance_Report()\r\n{\r\n  var rows=[];\r\n  const [date,setDate]=useState({\r\n      from:\"\",\r\n      to:\"\"\r\n    });\r\n    const onInputChange=(e)=>{  \r\n      setDate({...date,[e.target.name]:e.target.value})\r\n    }\r\n    const onFormSubmit=(e)=>\r\n    {\r\n      e.preventDefault();\r\n      \r\n      getData({ variables: { _lte:date.to,_gte:date.from } })\r\n      //console.assert();\r\n    }\r\n  const [getData,{ loading, error, data }] = useLazyQuery(InsuranceQuery);\r\n    // const [loadVehicle,{loading3,data3}] = useLazyQuery(VehicleMasterByPK,{\r\n    //   fetchPolicy: 'network-only',\r\n    // });\r\n    \r\n    \r\n    if (loading) return <div style={{width:\"100%\",marginTop:'25%', textAlign:'center'}}><CircularProgress /></div>;\r\n    if (error) return `Error! ${error.message}`;\r\n    //console.log(data);\r\n    //const rows=data.stolen;\r\n    const columns = [\r\n      { \r\n          field: 'id', \r\n          headerName: 'ID', \r\n          width: 150,\r\n          hide:false, \r\n      },\r\n      {\r\n        field: 'customer',\r\n        headerName: 'Customer',\r\n        width: 150,\r\n        editable: false,\r\n      },\r\n      {\r\n        field: 'vehicle_no',\r\n        headerName: 'Vehicle No',\r\n        width: 150,\r\n        editable: false,\r\n      },\r\n      {\r\n        field: 'from_date',\r\n        headerName: 'From date',\r\n        width: 150,\r\n        editable: false,\r\n      },\r\n      {\r\n        field: 'to_date',\r\n        headerName: 'To Date',\r\n        width: 150,\r\n        editable: false,\r\n      },\r\n      {\r\n        field: 'insurance_amount',\r\n        headerName: 'Insurance Amount',\r\n        width: 150,\r\n        editable: false,\r\n      },\r\n      {\r\n        field: 'insurance_type',\r\n        headerName: 'Insurance Type',\r\n        width: 150,\r\n        editable: false,\r\n      }\r\n    ];\r\n    //console.log(data);\r\n    //const rows=data.insurance;\r\n    if(data)\r\n      {\r\n        console.log(data.insurance);\r\n        rows=data.insurance;\r\n      }\r\n      const exportPDF = () => {\r\n        const unit = \"pt\";\r\n        const size = \"A4\"; // Use A1, A2, A3 or A4\r\n        const orientation = \"portrait\"; // portrait or landscape\r\n    \r\n        const marginLeft = 40;\r\n        const doc = new jsPDF(orientation, unit, size);\r\n    \r\n        doc.setFontSize(15);\r\n    \r\n        const title = \"Insurance Report\";\r\n        const headers = [[\"ID\",\"CUSTOMER\",\"VEHICLE\",\"FROM\", \"TO\",\"INSURANCE_AMOUNT\",\"INSURANCE_TYPE\"]];\r\n    \r\n        const comm_data = data.insurance.map(comm=> [comm.id,comm.customer,comm.vehicle_no,comm.from_date,comm.to_date,comm.insurance_amount,comm.insurance_type]);\r\n    \r\n        let content = {\r\n          startY: 50,\r\n          head: headers,\r\n          body: comm_data  \r\n        };\r\n    \r\n        doc.text(title, marginLeft, 40);\r\n        doc.autoTable(content);\r\n        doc.save(\"report.pdf\")\r\n      }\r\n    return(\r\n      <div className=\"container\">\r\n        \r\n          <div className=\"col-md-12\">\r\n          <h1 style={{ width: '100%', textAlign: 'center' }}>Insurance Report</h1>\r\n    <Divider />\r\n\r\n    <div className=\"field\" style={{ display: 'flex' }}>\r\n        <div style={{ marginRight: '70%', marginTop: '30px' }}>\r\n            <button onClick={() =>exportPDF()} class=\"btn btn-primary\" type='button'>Print PDF</button>\r\n        </div>\r\n        <div>\r\n            <label>Search</label>\r\n            <input className=\"form-control\" name=\"brand\" type=\"text\" />\r\n        </div>\r\n    </div>\r\n    <form className=\"form-group\" onSubmit={e=>onFormSubmit(e)} style={{ marginTop: '50px' }}>\r\n        <div className=\"row\">\r\n            <div className=\"field col-md-6\">\r\n                <label>From</label>\r\n                <input className=\"form-control\" onChange={e=>{onInputChange(e)}} name=\"from\" type=\"date\" />\r\n            </div>\r\n\r\n            <div className=\"field col-md-6\">\r\n                <label>To</label>\r\n                <input className=\"form-control\" onChange={e=>{onInputChange(e)}} name=\"to\" type=\"date\" />\r\n            </div>\r\n        </div>\r\n        <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '20px' }}>\r\n            <button className=\"btn btn-primary\" type='submit' style={{ marginRight: '50px' }}>Save</button>\r\n            <button className=\"btn btn-primary\" type='reset'>Reset</button>\r\n        </div>\r\n    </form>\r\n</div><br />\r\n    <div style={{ height: 500, width: '100%' }}>\r\n      <DataGrid\r\n        rows={rows}\r\n        columns={columns}\r\n        pageSize={10}\r\n        rowsPerPageOptions={[10]}\r\n        checkboxSelection={false}\r\n        components={{\r\n            Toolbar: GridToolbar,\r\n          }}\r\n        disableSelectionOnClick\r\n      />\r\n    </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Insurance_Report;\r\n\r\n\r\n","D:\\Mitharis\\my-app\\src\\Components\\NavItems\\Reporting\\Vehicle_History.js",[],"D:\\Mitharis\\my-app\\src\\Components\\NavItems\\Reporting\\PaperWork.js",["178","179","180","181","182","183"],"import React, { useState } from 'react';\r\nimport {\r\n    gql,\r\n    useMutation,\r\n    useLazyQuery,\r\n    useSubscription,\r\n} from \"@apollo/client\";\r\nimport { DataGrid, GridToolbar } from '@material-ui/data-grid';\r\n//import { IconName } from \"react-icons/bs\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\n//import 'bootstrap/dist/css/bootstrap.css';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { Divider } from '@material-ui/core';\r\nimport jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\n\r\nconst PaperWorkQuery = gql`\r\nquery MyQuery($_lte: date!, $_gte: date!) {\r\n  paperwork(where: {timestamp: {_gte: $_gte,_lte:$_lte}}){\r\n    amount_paid\r\n    amount_pending\r\n    id\r\n    payable_amount\r\n    rto_id\r\n    seller_id\r\n    timestamp\r\n  }\r\n}\r\n`\r\n\r\n\r\nfunction PaperWork() {\r\n    var rows=[];\r\n    var counter=0;\r\n    const [date,setDate]=useState({\r\n      from:\"\",\r\n      to:\"\"\r\n    });\r\n    const onInputChange=(e)=>{  \r\n        setDate({...date,[e.target.name]:e.target.value})\r\n      }\r\n      const onFormSubmit=(e)=>\r\n      {\r\n        e.preventDefault();\r\n        \r\n        getData({ variables: { _lte:date.to,_gte:date.from } })\r\n        //console.assert();\r\n      }\r\n    const [getData,{ loading, error, data }] = useLazyQuery(PaperWorkQuery);\r\n    // // const [loadVehicle,{loading3,data3}] = useLazyQuery(VehicleMasterByPK,{\r\n    // //   fetchPolicy: 'network-only',\r\n    // // });\r\n\r\n\r\n    if (loading) return <div style={{ width: \"100%\", marginTop: '25%', textAlign: 'center' }}><CircularProgress /></div>;\r\n    if (error) return `Error! ${error.message}`;\r\n\r\n    //console.log(data3)\r\n    // amount_paid\r\n    // amount_pending\r\n    // payable_amount\r\n    // rto_id\r\n    // seller_id\r\n    const columns = [\r\n        {\r\n            field: 'id',\r\n            headerName: 'ID',\r\n            width: 100,\r\n            hide: false,\r\n        },\r\n        {\r\n            field: 'amount_paid',\r\n            headerName: 'Amount Paid',\r\n            width: 190,\r\n            hide: false,\r\n        },\r\n        {\r\n            field: 'amount_pending',\r\n            headerName: 'Amount Pending',\r\n            width: 190,\r\n            editable: false,\r\n        },\r\n        {\r\n            field: 'payable_amount',\r\n            headerName: 'Payable Amount',\r\n            width: 190,\r\n            editable: false,\r\n        },\r\n\r\n        {\r\n            field: 'rto_id',\r\n            headerName: 'RTO Agent ID',\r\n            width: 130,\r\n            editable: false,\r\n        },\r\n        {\r\n            field: 'seller_id',\r\n            headerName: 'Seller Id',\r\n            width: 150,\r\n            editable: false,\r\n        },\r\n    ];\r\n    //const rows = data.paperwork;\r\n    //console.log(data3);\r\n    // const rows = data.vehicle_master;\r\n    if(data)\r\n    {\r\n      console.log(data.paperwork);\r\n      rows=data.paperwork;\r\n    }\r\n    const exportPDF = () => {\r\n        const unit = \"pt\";\r\n        const size = \"A4\"; // Use A1, A2, A3 or A4\r\n        const orientation = \"portrait\"; // portrait or landscape\r\n    \r\n        const marginLeft = 40;\r\n        const doc = new jsPDF(orientation, unit, size);\r\n    \r\n        doc.setFontSize(15);\r\n    \r\n        const title = \"Paperwork Report\";\r\n        const headers = [[\"ID\",\"SELLER\",\"AMOUNT PENDING\",\"AMOUNT PAID\", \"AMOUNT PAYABLE\",\"RTO\"]];\r\n    \r\n        const comm_data = data.paperwork.map(comm=> [comm.id,comm.seller_id,comm.amount_pending,comm.amount_paid,comm.payable_amount,comm.rto_id]);\r\n    \r\n        let content = {\r\n          startY: 50,\r\n          head: headers,\r\n          body: comm_data  \r\n        };\r\n    \r\n        doc.text(title, marginLeft, 40);\r\n        doc.autoTable(content);\r\n        doc.save(\"report.pdf\")\r\n      }\r\n    // pdf generation function\r\n    const printPdf = (e) => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"col-md-12\">\r\n                <h1 style={{ width: '100%', textAlign: 'center' }}>Paper Work</h1>\r\n                <Divider />\r\n\r\n                <div className=\"field\" style={{ display: 'flex' }}>\r\n                    <div style={{ marginRight: '70%', marginTop: '30px' }}>\r\n                        <button class=\"btn btn-primary\" type='button'  onClick={() =>exportPDF()}>Print PDF</button>\r\n                    </div>\r\n                    <div>\r\n                        <label>Search</label>\r\n                        <input className=\"form-control\" name=\"brand\" type=\"text\" />\r\n                    </div>\r\n                </div>\r\n                <form className=\"form-group\" onSubmit={e=>onFormSubmit(e)} style={{ marginTop: '50px' }}>\r\n                    <div className=\"row\">\r\n                        <div className=\"field col-md-6\">\r\n                            <label>From</label>\r\n                            <input className=\"form-control\" onChange={e=>{onInputChange(e)}} name=\"from\" type=\"date\" />\r\n                        </div>\r\n\r\n                        <div className=\"field col-md-6\">\r\n                            <label>To</label>\r\n                            <input className=\"form-control\" onChange={e=>{onInputChange(e)}} name=\"to\" type=\"date\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '20px' }}>\r\n                        <button className=\"btn btn-primary\" type='submit' style={{ marginRight: '50px' }}>Save</button>\r\n                        <button className=\"btn btn-primary\" type='reset'>Reset</button>\r\n                    </div>\r\n                </form>\r\n            </div><br />\r\n            <div style={{ height: 500, width: '100%' }}>\r\n                <DataGrid\r\n                    rows={rows}\r\n                    columns={columns}\r\n                    pageSize={10}\r\n                    rowsPerPageOptions={[10]}\r\n                    checkboxSelection={false}\r\n                    components={{\r\n                      Toolbar: GridToolbar,\r\n                    }}\r\n                    disableSelectionOnClick\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PaperWork;\r\n","D:\\Mitharis\\my-app\\src\\Components\\NavItems\\Utilities\\Customer.js",["184","185","186","187","188","189","190","191","192"],"import React,{useState} from 'react';\r\nimport {\r\n    useQuery,\r\n    gql,\r\n    useMutation,\r\n    useSubscription,\r\n    useLazyQuery\r\n  } from \"@apollo/client\";\r\nimport { Switch, Route, Link } from \"react-router-dom\";\r\nimport { DataGrid } from '@material-ui/data-grid';\r\n//import { IconName } from \"react-icons/bs\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst BUYER=gql`\r\nquery MyQuery {\r\n    buyer {\r\n      id\r\n      name\r\n      mobile_no\r\n      email\r\n      customer_type\r\n      adhaar\r\n      address\r\n    }\r\n  }\r\n`\r\n\r\nconst SELLER=gql`\r\nquery MyQuery {\r\n    seller {\r\n      id\r\n      name\r\n      mobile_no\r\n      adhaar\r\n      address\r\n    }\r\n  }\r\n`\r\n\r\nfunction Customer()\r\n{\r\n    const { loading, error, data } = useQuery(BUYER);\r\n    const seller_data = useQuery(SELLER);\r\n    if (loading) return <div style={{width:\"100%\",marginTop:'25%', textAlign:'center'}}><CircularProgress /></div>;\r\n    if (error) return `Error! ${error.message}`;\r\n    const columns = [\r\n      { \r\n        field: 'id', \r\n        headerName: 'ID', \r\n        width: 150,\r\n        hide:false, \r\n      },\r\n      {\r\n        field: 'name',\r\n        headerName: 'Buyer Name',\r\n        width: 150,\r\n        editable: false,\r\n      },\r\n      {\r\n        field: 'mobile_no',\r\n        headerName: 'Buyer Mobile',\r\n        width: 150,\r\n        editable: false,\r\n      },\r\n      {\r\n        field: 'email',\r\n        headerName: 'Buyer Email',\r\n        width: 150,\r\n        editable: false,\r\n      },\r\n      {\r\n        field: 'customer_type',\r\n        headerName: 'Customer Type',\r\n        width: 150,\r\n        editable: false,\r\n      },\r\n      {\r\n        field: 'adhaar',\r\n        headerName: 'Adhaar',\r\n        width: 150,\r\n        editable: false,\r\n      },\r\n      {\r\n        field: 'address',\r\n        headerName: 'Address',\r\n        width: 150,\r\n        editable: false,\r\n      },\r\n    ];\r\n    const columns1 = [\r\n      { \r\n        field: 'id', \r\n        headerName: 'ID', \r\n        width: 150,\r\n        hide:false, \r\n      },\r\n      {\r\n        field: 'name',\r\n        headerName: 'Seller Name',\r\n        width: 150,\r\n        editable: false,\r\n      },\r\n      {\r\n        field: 'mobile_no',\r\n        headerName: 'Seller Mobile',\r\n        width: 150,\r\n        editable: false,\r\n      },\r\n      {\r\n        field: 'adhaar',\r\n        headerName: 'Adhaar',\r\n        width: 150,\r\n        editable: false,\r\n      },\r\n      {\r\n        field: 'address',\r\n        headerName: 'Address',\r\n        width: 150,\r\n        editable: false,\r\n      },\r\n    ];\r\n    console.log(seller_data.data.seller);\r\n    const rows=data.buyer;\r\n    const rows1=seller_data.data.seller;\r\n    return(\r\n    <div className=\"container\">\r\n        <h2>Buyer</h2>\r\n        <div style={{ height: 500, width: '100%' }}>\r\n        <DataGrid\r\n            rows={rows}\r\n            columns={columns}\r\n            pageSize={10}\r\n            rowsPerPageOptions={[10]}\r\n            checkboxSelection={false}\r\n            disableSelectionOnClick\r\n        />\r\n        </div>\r\n        <br />\r\n        <h2>Seller</h2>\r\n        <div style={{ height: 500, width: '100%' }}>\r\n        <DataGrid\r\n            rows={rows1}\r\n            columns={columns1}\r\n            pageSize={10}\r\n            rowsPerPageOptions={[10]}\r\n            checkboxSelection={false}\r\n            disableSelectionOnClick\r\n        />\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Customer;\r\n\r\n\r\n","D:\\Mitharis\\my-app\\src\\Components\\NavItems\\Utilities\\RTO_Agent_Numbers.js",["193","194","195","196","197","198","199","200"],"import React,{useState} from 'react';\r\nimport {\r\n    useQuery,\r\n    gql,\r\n    useMutation,\r\n    useSubscription,\r\n    useLazyQuery\r\n  } from \"@apollo/client\";\r\nimport { Switch, Route, Link } from \"react-router-dom\";\r\nimport { DataGrid } from '@material-ui/data-grid';\r\n//import { IconName } from \"react-icons/bs\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst INSERT_RTO=gql`\r\nmutation MyMutation($rto_mobile: String!, $rto_name: String!) {\r\n    insert_rto_agent_master_one(object: {rto_mobile: $rto_mobile, rto_name: $rto_name}) {\r\n      id\r\n      rto_mobile\r\n      rto_name\r\n    }\r\n}  \r\n`\r\nconst UPDATE_RTO=gql`\r\nmutation MyMutation($id: Int!,$rto_name:String!,$rto_mobile:String!) {\r\n    update_rto_agent_master_by_pk(pk_columns: {id: $id}, _set: {rto_name:$rto_name, rto_mobile:$rto_mobile}) {\r\n      id\r\n    }\r\n  } \r\n`\r\nconst DELETE_RTO=gql`\r\nmutation MyMutation2($id: Int!) {\r\n    delete_rto_agent_master_by_pk(id: $id) {\r\n      rto_name\r\n      rto_mobile\r\n      id\r\n    }\r\n  }\r\n  \r\n`\r\n\r\nconst RtoQuery=gql`\r\nsubscription MySubscription {\r\n    rto_agent_master {\r\n      id\r\n      rto_mobile\r\n      rto_name\r\n    }\r\n  }\r\n  \r\n`\r\n\r\nfunction RTO_Agent_Numbers()\r\n{\r\n    const [showModal, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    const [rto_agent,setRto_agent]=useState({\r\n        rto_name:\"\",\r\n        rto_mobile:\"\"\r\n    });\r\n    const [modal_rto_agent,setModalRto_agent]=useState({\r\n        id:\"\",\r\n        rto_name:\"\",\r\n        rto_mobile:\"\"\r\n    });\r\n    const onInputChange=(e)=>{\r\n        setRto_agent({...rto_agent,[e.target.name]:e.target.value})\r\n    }\r\n    const onFormSubmit=(e)=>{\r\n        e.preventDefault();\r\n        insertRTO_agentData({variables:{rto_name:rto_agent.rto_name,rto_mobile:rto_agent.rto_mobile}})\r\n    }\r\n    const onModalInputChange=(e)=>{\r\n        setModalRto_agent({...modal_rto_agent,[e.target.name]:e.target.value})\r\n    }\r\n    const onModalFormSubmit=(e)=>{\r\n        e.preventDefault();\r\n        console.log(modal_rto_agent.id);\r\n        updateRTO_agentData({variables:{id:modal_rto_agent.id,rto_name:modal_rto_agent.rto_name,rto_mobile:modal_rto_agent.rto_mobile}})\r\n        handleClose();\r\n    }\r\n    const editRto=(rto_data)=>{\r\n        setModalRto_agent({\r\n            id:rto_data.id,\r\n            rto_name:rto_data.rto_name,\r\n            rto_mobile:rto_data.rto_mobile\r\n        })\r\n        handleShow();\r\n    }\r\n    const deleteRto=(id)=>{\r\n        deleteRTO_agentData({variables:{id:id}})\r\n    }\r\n    const [deleteRTO_agentData,{deleteData}]=useMutation(DELETE_RTO);\r\n    const [updateRTO_agentData,{updateData}]=useMutation(UPDATE_RTO);\r\n    const [insertRTO_agentData,{insertData}]=useMutation(INSERT_RTO);\r\n    const { loading, error, data } = useSubscription(RtoQuery);\r\n    if (loading) return <div style={{width:\"100%\",marginTop:'25%', textAlign:'center'}}><CircularProgress /></div>;\r\n    if (error) return `Error! ${error.message}`;\r\n    const columns = [\r\n      { \r\n          field: 'id', \r\n          headerName: 'ID', \r\n          width: 150,\r\n          hide:false, \r\n      },\r\n      {\r\n        field: 'rto_name',\r\n        headerName: 'RTO Name',\r\n        width: 150,\r\n        editable: false,\r\n      },\r\n      {\r\n        field: 'rto_mobile',\r\n        headerName: 'RTO Mobile',\r\n        width: 150,\r\n        editable: false,\r\n      },\r\n      {\r\n        field: 'action',\r\n        headerName: 'Action',\r\n        width: 300,\r\n        renderCell: (params) => {\r\n          return (\r\n            <div className=\"\">\r\n            <button data-toggle=\"tooltip\" title=\"Edit\" type=\"button\" onClick={(e)=>editRto(params.row)} className=\"btn btn-warning\"><i className=\"fa fa-pencil\"></i></button>\r\n            <button data-toggle=\"tooltip\" title=\"Delete\" onClick={(e)=>deleteRto(params.row.id)} style={{marginLeft:'20%'}} className=\"btn btn-danger\"><i className=\"fa fa-trash\"></i></button>\r\n            \r\n            </div>\r\n          );\r\n       }\r\n      },\r\n    ];\r\n    //console.log(data);\r\n    const rows=data.rto_agent_master;\r\n    return(\r\n      <div className=\"container\">\r\n          <Modal show={showModal} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Modal heading</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n            <div className=\"col-md-4\">\r\n                <form className=\"form-group\" onSubmit={e=>{onModalFormSubmit(e)}}>\r\n                    <div className=\"field\">\r\n                        <label>Id</label>\r\n                        <input defaultValue={modal_rto_agent.id} onChange={e=>onModalInputChange(e)} className=\"form-control\" name=\"id\" type=\"text\" />\r\n                    </div>\r\n                    <div className=\"field\">\r\n                        <label>RTO Name</label>\r\n                        <input defaultValue={modal_rto_agent.rto_name} onChange={e=>onModalInputChange(e)} className=\"form-control\" name=\"rto_name\" type=\"text\" />\r\n                    </div>\r\n                    <div className=\"field\">\r\n                        <label>RTO Mobile</label>\r\n                        <input defaultValue={modal_rto_agent.rto_mobile} onChange={e=>onModalInputChange(e)} className=\"form-control\" name=\"rto_mobile\" type=\"text\" />\r\n                    </div>\r\n                    <div className=\"field\">\r\n                        <button className=\"btn btn-primary\">Save</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          \r\n        </Modal.Footer>\r\n      </Modal>\r\n          <div className=\"col-md-12\">\r\n              <form className=\"form-group\" onSubmit={e=>onFormSubmit(e)}>\r\n                  <div className=\"row\">\r\n                      <div className=\"field col-md-6\">\r\n                          <label>RTO Name</label>\r\n                          <input onChange={e=>onInputChange(e)} className=\"form-control\" name=\"rto_name\" type=\"text\" />\r\n                      </div>\r\n                      <div className=\"field col-md-6\">\r\n                          <label>RTO Mobile</label>\r\n                          <input onChange={e=>onInputChange(e)} className=\"form-control\" name=\"rto_mobile\" type=\"text\" />\r\n                      </div>\r\n                  </div>\r\n                  <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '20px' }}>\r\n                        <button className=\"btn btn-primary\" type='submit' style={{ marginRight: '50px' }}>Save</button>\r\n                        <button className=\"btn btn-primary\" type='reset'>Reset</button>\r\n                    </div>\r\n              </form>\r\n          </div><br />\r\n    <div style={{ height: 500, width: '100%' }}>\r\n      <DataGrid\r\n        rows={rows}\r\n        columns={columns}\r\n        pageSize={10}\r\n        rowsPerPageOptions={[10]}\r\n        checkboxSelection={false}\r\n        disableSelectionOnClick\r\n      />\r\n    </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default RTO_Agent_Numbers;\r\n\r\n\r\n","D:\\Mitharis\\my-app\\src\\Components\\NavItems\\Utilities\\Third_Party_Agent.js",["201","202","203","204","205","206","207"],"import React,{useState} from 'react';\r\nimport {\r\n    useQuery,\r\n    gql,\r\n    useMutation,\r\n    useSubscription,\r\n    useLazyQuery\r\n  } from \"@apollo/client\";\r\nimport { Switch, Route, Link } from \"react-router-dom\";\r\nimport { DataGrid } from '@material-ui/data-grid';\r\n//import { IconName } from \"react-icons/bs\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst INSERT_AGENT=gql`\r\nmutation MyMutation2($mobile: String!, $name: String!) {\r\n    insert_third_party_agent_one(object: {mobile: $mobile, name: $name}) {\r\n      id\r\n      mobile\r\n      name\r\n    }\r\n  }\r\n`\r\nconst UPDATE_AGENT=gql`\r\nmutation MyMutation($id: Int!, $mobile: String!, $name: String!) {\r\n    update_third_party_agent_by_pk(pk_columns: {id: $id}, _set: {name: $name, mobile: $mobile}) {\r\n      id\r\n      mobile\r\n      name\r\n    }\r\n  }\r\n  \r\n`\r\nconst DELETE_AGENT=gql`\r\nmutation MyMutation($id: Int!) {\r\n    delete_third_party_agent_by_pk(id: $id) {\r\n      id\r\n      mobile\r\n      name\r\n    }\r\n  }\r\n`\r\n\r\nconst AgentQuery=gql`\r\nsubscription MySubscription {\r\n    third_party_agent {\r\n      id\r\n      mobile\r\n      name\r\n    }\r\n  }\r\n`\r\n\r\nfunction Third_Party_Agent()\r\n{\r\n    const [showModal, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    const [agent,setAgent]=useState({\r\n        name:\"\",\r\n        mobile:\"\"\r\n    });\r\n    const [modalAgent,setModalAgent]=useState({\r\n        id:\"\",\r\n        name:\"\",\r\n        mobile:\"\"\r\n    });\r\n    const onInputChange=(e)=>{\r\n        setAgent({...agent,[e.target.name]:e.target.value})\r\n    }\r\n    const onFormSubmit=(e)=>{\r\n        e.preventDefault();\r\n        insertAgentData({variables:{name:agent.name,mobile:agent.mobile}})\r\n    }\r\n    const editAgent=(agent_data)=>{\r\n        setModalAgent({\r\n            id:agent_data.id,\r\n            name:agent_data.name,\r\n            mobile:agent_data.mobile\r\n        })\r\n        handleShow();\r\n    }\r\n    const onModalInputChange=(e)=>{\r\n        setModalAgent({...modalAgent,[e.target.name]:e.target.value})\r\n    }\r\n    const onModalFormSubmit=(e)=>{\r\n        e.preventDefault();\r\n        console.log(modalAgent)\r\n        updateAgentData({variables:{id:modalAgent.id,name:modalAgent.name,mobile:modalAgent.mobile}})\r\n        handleClose();\r\n        console.log(updateData);\r\n    }\r\n    const deleteAgent=(id)=>{\r\n        deleteAgentData({variables:{id:id}})\r\n    }\r\n    const [deleteAgentData,{deleteData}]=useMutation(DELETE_AGENT);\r\n    const [updateAgentData,{updateData}]=useMutation(UPDATE_AGENT);\r\n    const [insertAgentData,{insertData}]=useMutation(INSERT_AGENT);\r\n    const { loading, error, data } = useSubscription(AgentQuery);\r\n    if (loading) return <div style={{width:\"100%\",marginTop:'25%', textAlign:'center'}}><CircularProgress /></div>;\r\n    if (error) return `Error! ${error.message}`;\r\n    const columns = [\r\n      { \r\n        field: 'id', \r\n        headerName: 'ID', \r\n        width: 150,\r\n        hide:false, \r\n      },\r\n      {\r\n        field: 'name',\r\n        headerName: 'Agent Name',\r\n        width: 150,\r\n        editable: false,\r\n      },\r\n      {\r\n        field: 'mobile',\r\n        headerName: 'Agent Mobile',\r\n        width: 150,\r\n        editable: false,\r\n      },\r\n      {\r\n        field: 'action',\r\n        headerName: 'Action',\r\n        width: 300,\r\n        renderCell: (params) => {\r\n          return (\r\n            <div className=\"\">\r\n            <button data-toggle=\"tooltip\" title=\"Edit\" type=\"button\" onClick={(e)=>editAgent(params.row)} className=\"btn btn-warning\"><i className=\"fa fa-pencil\"></i></button>\r\n            <button data-toggle=\"tooltip\" title=\"Delete\" onClick={(e)=>deleteAgent(params.row.id)} className=\"btn btn-danger\" style={{marginLeft:'20%'}}><i className=\"fa fa-trash\"></i></button>\r\n            \r\n            </div>\r\n          );\r\n       }\r\n      },\r\n    ];\r\n    //console.log(data);\r\n    const rows=data.third_party_agent;\r\n    return(\r\n      <div className=\"container\">\r\n          <Modal show={showModal} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Modal heading</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n            <div className=\"col-md-4\">\r\n                <form className=\"form-group\" onSubmit={e=>onModalFormSubmit(e)}>\r\n                    <div className=\"field\">\r\n                        <label>Id</label>\r\n                        <input defaultValue={modalAgent.id} onChange={e=>onModalInputChange(e)} className=\"form-control\" name=\"id\" type=\"text\" />\r\n                    </div>\r\n                    <div className=\"field\">\r\n                        <label>Name</label>\r\n                        <input defaultValue={modalAgent.name} onChange={e=>onModalInputChange(e)} className=\"form-control\" name=\"name\" type=\"text\" />\r\n                    </div>\r\n                    <div className=\"field\">\r\n                        <label>Mobile</label>\r\n                        <input defaultValue={modalAgent.mobile} onChange={e=>onModalInputChange(e)} className=\"form-control\" name=\"mobile\" type=\"text\" />\r\n                    </div>\r\n                    <div className=\"field\">\r\n                        <button className=\"btn btn-primary\">Save</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          \r\n        </Modal.Footer>\r\n      </Modal>\r\n          <div className=\"col-md-12\">\r\n              <form className=\"form-group\" onSubmit={e=>onFormSubmit(e)}>\r\n                  <div className=\"row\">\r\n                      <div className=\"field col-md-6\">\r\n                          <label>Agent Name</label>\r\n                          <input onChange={e=>onInputChange(e)} className=\"form-control\" name=\"name\" type=\"text\" />\r\n                      </div>\r\n                      <div className=\"field col-md-6\">\r\n                          <label>Agent Mobile</label>\r\n                          <input onChange={e=>onInputChange(e)} className=\"form-control\" name=\"mobile\" type=\"text\" />\r\n                      </div>\r\n                  </div>\r\n                  <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '20px' }}>\r\n                        <button className=\"btn btn-primary\" type='submit' style={{ marginRight: '50px' }}>Save</button>\r\n                        <button className=\"btn btn-primary\" type='reset'>Reset</button>\r\n                    </div>\r\n              </form>\r\n          </div><br />\r\n    <div style={{ height: 500, width: '100%' }}>\r\n      <DataGrid\r\n        rows={rows}\r\n        columns={columns}\r\n        pageSize={10}\r\n        rowsPerPageOptions={[10]}\r\n        checkboxSelection={false}\r\n        disableSelectionOnClick\r\n      />\r\n    </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Third_Party_Agent;\r\n\r\n\r\n","D:\\Mitharis\\my-app\\src\\Components\\NavItems\\Data_Entry\\Vehicle_Master.js",["208","209","210","211","212","213","214","215"],"import React,{useState} from 'react';\r\nimport {\r\n    useQuery,\r\n    gql,\r\n    useMutation,\r\n    useSubscription,\r\n    useLazyQuery\r\n  } from \"@apollo/client\";\r\nimport { Switch, Route, Link } from \"react-router-dom\";\r\nimport { DataGrid } from '@material-ui/data-grid';\r\n//import { IconName } from \"react-icons/bs\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst VehicleMasterQuery=gql`\r\nsubscription MySubscription {\r\n    vehicle_master {\r\n      model\r\n      id\r\n      brand\r\n    }\r\n  }\r\n  `\r\n  // const VehicleMasterByPK=gql`\r\n  // query MyQuery2($id:Int!){\r\n  //   vehicle_master_by_pk(id:$id){\r\n\r\n  //     model\r\n  //     id\r\n  //     brand\r\n  //   }\r\n  // }\r\n  // `\r\n  const UPDATE_VEHICLE=gql`\r\n  mutation MyMutation2($id:Int!,$brand:String!,$model:String!){\r\n    update_vehicle_master_by_pk(pk_columns: {id: $id}, _set: {model: $model, brand: $brand}) {\r\n      brand\r\n      id\r\n      model\r\n    }\r\n  }`\r\n  const INSERT_VEHICLE=gql`\r\n  mutation MyMutation($model:String!,$brand:String!) {\r\n    insert_vehicle_master_one(object: {model: $model, brand: $brand}) {\r\n      model\r\n      id\r\n      brand\r\n    }\r\n  }\r\n  `\r\n  const DELETE_VEHICLE=gql`\r\n  mutation delete_mutation($id:Int!){\r\n    delete_vehicle_master_by_pk(id: $id) {\r\n        brand\r\n        id\r\n        model\r\n      }\r\n  }\r\n  `\r\n\r\nfunction Vehicle_Master()\r\n{\r\n    const [showModal, setShow] = useState(false);\r\n    const [vehicleId, setVehicleId] = useState();\r\n    const [vehicleBrand, setVehicleBrand] = useState();\r\n    const [vehicleModel, setVehicleModel] = useState();\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    const [cars,setCars] = useState({\r\n        brand:\"\",\r\n        model:\"\"\r\n    })\r\n    const [modalcars,setModalCars] = useState({\r\n        brand:\"\",\r\n        model:\"\"\r\n    })\r\n    const onInputChange=(e)=>{\r\n        setCars({...cars,[e.target.name]:e.target.value})\r\n    }\r\n    const onModalInputChange=(e)=>{\r\n        setModalCars({...modalcars,[e.target.name]:e.target.value})\r\n        console.log(modalcars)\r\n    }\r\n    const onFormSubmit=(e)=>{\r\n        e.preventDefault();\r\n        insertVehicleData({variables:{model:cars.model,brand:cars.brand}});\r\n    }\r\n    const deleteVehicle=(id)=>{\r\n        console.log(id);\r\n        deleteVehicleData({variables:{id:id}})\r\n    }\r\n    const onModalFormSubmit=(e)=>{\r\n      e.preventDefault();\r\n      console.log(e.target[0].value);\r\n      updateVehicleData({variables:{id:e.target[0].value,brand:e.target[1].value,model:e.target[2].value}});\r\n      handleClose();\r\n    }\r\n    const editVehicle=(id,brand,model)=>{\r\n        console.log(id);\r\n        console.log(model);\r\n        console.log(brand);\r\n        setVehicleId(id);\r\n        setVehicleBrand(brand);\r\n        setVehicleModel(model);\r\n        handleShow();\r\n        //loadVehicle({ variables: { id:id } });\r\n        //console.log(data3);\r\n    }\r\n    const [updateVehicleData,{updatedData}]=useMutation(UPDATE_VEHICLE);\r\n    const [insertVehicleData,{carsData}]=useMutation(INSERT_VEHICLE);\r\n    const [deleteVehicleData,{deletedData}]=useMutation(DELETE_VEHICLE);\r\n    \r\n    const { loading, error, data } = useSubscription(VehicleMasterQuery);\r\n    // const [loadVehicle,{loading3,data3}] = useLazyQuery(VehicleMasterByPK,{\r\n    //   fetchPolicy: 'network-only',\r\n    // });\r\n    \r\n    \r\n    if (loading) return <div style={{width:\"100%\",marginTop:'25%', textAlign:'center'}}><CircularProgress /></div>;\r\n    if (error) return `Error! ${error.message}`;\r\n    \r\n    //console.log(data3)\r\n    const columns = [\r\n      { \r\n          field: 'id', \r\n          headerName: 'ID', \r\n          width: 150,\r\n          hide:false, \r\n        },\r\n      {\r\n        field: 'brand',\r\n        headerName: 'Brand',\r\n        width: 150,\r\n        editable: false,\r\n      },\r\n      {\r\n        field: 'model',\r\n        headerName: 'Model',\r\n        width: 150,\r\n        editable: false,\r\n      },\r\n      {\r\n        field: 'action',\r\n        headerName: 'Action',\r\n        width: 300,\r\n        renderCell: (params) => {\r\n          return (\r\n            <div className=\"\">\r\n            <button data-toggle=\"tooltip\" title=\"Edit\" type=\"button\" className=\"btn btn-warning\" onClick={()=>{editVehicle(params.row.id,params.row.brand,params.row.model)}} ><i className=\"fa fa-pencil\"></i></button>\r\n            <button data-toggle=\"tooltip\" title=\"Delete\" style={{marginLeft:'20%'}} className=\"btn btn-danger\" onClick={()=>{deleteVehicle(params.row.id)}}><i className=\"fa fa-trash\"></i></button>\r\n            \r\n            </div>\r\n          );\r\n       }\r\n      },\r\n    ];\r\n    //console.log(data3);\r\n    const rows=data.vehicle_master;\r\n    return(\r\n      <div className=\"container\">\r\n        <Modal show={showModal} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Modal heading</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n            <div className=\"col-md-4\">\r\n                <form className=\"form-group\" onSubmit={(e)=>{onModalFormSubmit(e)}}>\r\n                    <div className=\"field\">\r\n                        <label>Car Id</label>\r\n                        <input defaultValue={vehicleId} onChange={(e)=>{onModalInputChange(e)}} className=\"form-control\" name=\"brand\" type=\"text\" />\r\n                    </div>\r\n                    <div className=\"field\">\r\n                        <label>Car Brand</label>\r\n                        <input defaultValue={vehicleBrand} onChange={(e)=>{onModalInputChange(e)}} className=\"form-control\" name=\"brand\" type=\"text\" />\r\n                    </div>\r\n                    <div className=\"field\">\r\n                        <label>Model</label>\r\n                        <input defaultValue={vehicleModel} onChange={(e)=>{onModalInputChange(e)}} className=\"form-control\" name=\"model\" type=\"text\" />\r\n                    </div>\r\n                    <div className=\"field\">\r\n                        <button className=\"btn btn-primary\">Save</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          \r\n        </Modal.Footer>\r\n      </Modal>\r\n          <div className=\"col-md-12\">\r\n              <form onSubmit={(e)=>{onFormSubmit(e)}} className=\"form-group\">\r\n                  <div className=\"row\">\r\n                      <div className=\"field col-md-6\">\r\n                          <label>Car Brand</label>\r\n                          <input onChange={e=>onInputChange(e)} className=\"form-control\" name=\"brand\" type=\"text\" />\r\n                      </div>\r\n\r\n                      <div className=\"field col-md-6\">\r\n                          <label>Model</label>\r\n                          <input onChange={e=>onInputChange(e)} className=\"form-control\" name=\"model\" type=\"text\" />\r\n                      </div>\r\n                  </div>\r\n                  <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '20px' }}>\r\n                        <button className=\"btn btn-primary\" type='submit' style={{ marginRight: '50px' }}>Save</button>\r\n                        <button className=\"btn btn-primary\" type='reset'>Reset</button>\r\n                    </div>\r\n              </form>\r\n          </div><br />\r\n    <div style={{ height: 500, width: '100%' }}>\r\n      <DataGrid\r\n        rows={rows}\r\n        columns={columns}\r\n        pageSize={10}\r\n        rowsPerPageOptions={[10]}\r\n        checkboxSelection={false}\r\n        disableSelectionOnClick\r\n      />\r\n    </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Vehicle_Master;\r\n\r\n\r\n","D:\\Mitharis\\my-app\\src\\Components\\NavItems\\Data_Entry\\Vehicle_Form.js",["216","217","218"],"import React, { useState } from 'react';\r\nimport {\r\n  gql,\r\n  useMutation,\r\n  useSubscription,\r\n} from \"@apollo/client\";\r\nimport { DataGrid, GridToolbar } from '@material-ui/data-grid';\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { Divider } from '@material-ui/core';\r\nimport { Switch, Route, Link } from \"react-router-dom\";\r\n\r\nconst VehicleQuery = gql`\r\nsubscription MySubscription {\r\n  vehicle(distinct_on: id) {\r\n    body_type\r\n    chess_number\r\n    color\r\n    engine_displacement\r\n    engine_number\r\n    fuel_type\r\n    id\r\n    kms_driven\r\n    make_model\r\n    number_of_owners\r\n    passing_year\r\n    varient\r\n    transmission\r\n    vehicle_number\r\n  }\r\n}\r\n\r\n  `\r\n\r\nconst UPDATE_VEHICLE = gql`\r\nmutation MyMutation($id: Int = 10, $body_type: String = \"\", $chess_number: String = \"\", $color: String = \"\", $engine_displacement: String = \"\", $engine_number: String = \"\", $fuel_type: String = \"\", $kms_driven: String = \"\", $make_model: String = \"\", $number_of_owners: Int = 10, $passing_year: String = \"\", $transmission: String = \"\", $varient: String = \"\", $vehicle_number: String = \"\") {\r\n  update_vehicle_by_pk(pk_columns: {id: $id}, _set: {body_type: $body_type, chess_number: $chess_number, color: $color, engine_displacement: $engine_displacement, engine_number: $engine_number, fuel_type: $fuel_type, kms_driven: $kms_driven, make_model: $make_model, number_of_owners: $number_of_owners, passing_year: $passing_year, transmission: $transmission, varient: $varient, vehicle_number: $vehicle_number}) {\r\n    id\r\n  }\r\n}\r\n`\r\nconst INSERT_VEHICLE = gql`\r\n  mutation MyMutation($body_type: String = \"\", $chess_number: String = \"\", $color: String = \"\", $engine_displacement: String = \"\", $engine_number: String = \"\", $fuel_type: String = \"\", $kms_driven: String = \"\", $make_model: String = \"\", $number_of_owners: Int = 10, $passing_year: String = \"\", $transmission: String = \"\", $varient: String = \"\", $vehicle_number: String = \"\") {\r\n    insert_vehicle(objects: {body_type: $body_type, chess_number: $chess_number, color: $color, engine_displacement: $engine_displacement, engine_number: $engine_number, fuel_type: $fuel_type, kms_driven: $kms_driven, vehicle_number: $vehicle_number, varient: $varient, transmission: $transmission, passing_year: $passing_year, number_of_owners: $number_of_owners, make_model: $make_model}) {\r\n      affected_rows\r\n    }\r\n  }\r\n\r\n  `\r\nconst DELETE_VEHICLE = gql`\r\nmutation MyMutation($id: Int = 10) {\r\n  delete_vehicle_by_pk(id: $id) {\r\n    id\r\n  }\r\n}\r\n  `\r\n\r\nfunction Vehicle_Registration() {\r\n  const [showModal, setShow] = useState(false);\r\n  const [id, setId] = useState();\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  const [vehicle, setVehicle] = useState({\r\n    body_type: \"\",\r\n    chess_number: '',\r\n    color: '',\r\n    engine_displacement: '',\r\n    engine_number: '',\r\n    fuel_type: '',\r\n    kms_driven: '',\r\n    vehicle_number: '',\r\n    varient: '',\r\n    transmission: '',\r\n    passing_year: '',\r\n    number_of_owners: '',\r\n    make_model: '',\r\n  })\r\n  const [updateVehicledata, setUpdateVehicleData] = useState({\r\n    body_type: \"\",\r\n    chess_number: '',\r\n    color: '',\r\n    engine_displacement: '',\r\n    engine_number: '',\r\n    fuel_type: '',\r\n    kms_driven: '',\r\n    vehicle_number: '',\r\n    varient: '',\r\n    transmission: '',\r\n    passing_year: '',\r\n    number_of_owners: '',\r\n    make_model: '',\r\n  })\r\n  const onInputChange = (e) => {\r\n    setVehicle({ ...vehicle, [e.target.name]: e.target.value })\r\n  }\r\n\r\n  const onModalInputChange = (e) => {\r\n    setUpdateVehicleData({ ...updateVehicledata, [e.target.name]: e.target.value })\r\n\r\n  }\r\n  const onFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    insertVehicleData({ variables: { body_type: vehicle.body_type, chess_number: vehicle.chess_number, color: vehicle.color, engine_displacement: vehicle.engine_displacement, engine_number: vehicle.engine_number, fuel_type: vehicle.fuel_type, kms_driven: vehicle.kms_driven, vehicle_number: vehicle.vehicle_number, varient: vehicle.varient, transmission: vehicle.transmission, passing_year: vehicle.passing_year, number_of_owners: vehicle.number_of_owners, make_model: vehicle.make_model } });\r\n  }\r\n  const deleteVehicle = (id) => {\r\n    console.log(id);\r\n    deleteVehicleData({ variables: { id: id } })\r\n  }\r\n  const onModalFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(e.target[0].value);\r\n    updateVehicleData({ variables: { id: id,  body_type: updateVehicledata.body_type, chess_number: updateVehicledata.chess_number, color: updateVehicledata.color, engine_displacement: updateVehicledata.engine_displacement, engine_number: updateVehicledata.engine_number, fuel_type: updateVehicledata.fuel_type, kms_driven: updateVehicledata.kms_driven, vehicle_number: updateVehicledata.vehicle_number, varient: updateVehicledata.varient, transmission: updateVehicledata.transmission, passing_year: updateVehicledata.passing_year, number_of_owners: updateVehicledata.number_of_owners, make_model: updateVehicledata.make_model } });\r\n    handleClose();\r\n  }\r\n  const editVehicle = (row) => {\r\n    console.log(row.id);\r\n    setId(row.id);\r\n    setUpdateVehicleData({\r\n      body_type: row.body_type, chess_number: row.chess_number, color: row.color, engine_displacement: row.engine_displacement, engine_number: row.engine_number, fuel_type: row.fuel_type, kms_driven: row.kms_driven, vehicle_number: row.vehicle_number, varient: row.varient, transmission: row.transmission, passing_year: row.passing_year, number_of_owners: row.number_of_owners, make_model: row.make_model \r\n    })\r\n    handleShow();\r\n    //loadVehicle({ variables: { id:id } });\r\n    //console.log(data3);\r\n  }\r\n  const [updateVehicleData] = useMutation(UPDATE_VEHICLE);\r\n  const [insertVehicleData] = useMutation(INSERT_VEHICLE);\r\n  const [deleteVehicleData] = useMutation(DELETE_VEHICLE);\r\n\r\n  const { loading, error, data } = useSubscription(VehicleQuery);\r\n  // const [loadVehicle,{loading3,data3}] = useLazyQuery(VehicleMasterByPK,{\r\n  //   fetchPolicy: 'network-only',\r\n  // });\r\n\r\n\r\n  if (loading) return <div style={{ width: \"100%\", marginTop: '25%', textAlign: 'center' }}><CircularProgress /></div>;\r\n  if (error) return `Error! ${error.message}`;\r\n\r\n  //console.log(data3)\r\n\r\n  // body_type: \"\", \r\n  //   chess_number: '', \r\n  //   color: '', \r\n  //   engine_displacement: '', \r\n  //   engine_number: '', \r\n  //   fuel_type: '', \r\n  //   kms_driven: '', \r\n  //   vehicle_number: '', \r\n  //   varient: '', \r\n  //   transmission: '', \r\n  //   passing_year: '', \r\n  //   number_of_owners: '', \r\n  //   make_model: '',\r\n  const columns = [\r\n    {\r\n      field: 'id',\r\n      headerName: 'ID',\r\n      width: 150,\r\n      hide: false,\r\n    },\r\n    {\r\n      field: 'body_type',\r\n      headerName: 'Body Type',\r\n      width: 150,\r\n      hide: false,\r\n    },\r\n    {\r\n      field: 'chess_number',\r\n      headerName: 'Chess Number',\r\n      width: 150,\r\n      editable: false,\r\n    },\r\n    {\r\n      field: 'color',\r\n      headerName: 'Color',\r\n      width: 150,\r\n      editable: false,\r\n    },\r\n\r\n    {\r\n      field: 'engine_displacement',\r\n      headerName: 'Engine Displacement',\r\n      width: 250,\r\n      editable: false,\r\n    },\r\n\r\n    {\r\n      field: 'engine_number',\r\n      headerName: 'Engine Number',\r\n      width: 150,\r\n      editable: false,\r\n    },\r\n\r\n    {\r\n      field: 'fuel_type',\r\n      headerName: 'Fuel Type',\r\n      width: 150,\r\n      editable: false,\r\n    },\r\n\r\n    {\r\n      field: 'kms_driven',\r\n      headerName: 'KMS Driven',\r\n      width: 150,\r\n      editable: false,\r\n    },\r\n\r\n    {\r\n      field: 'vehicle_number',\r\n      headerName: 'Vehicle Number',\r\n      width: 150,\r\n      editable: false,\r\n    },\r\n\r\n\r\n    {\r\n      field: 'varient',\r\n      headerName: 'Varient',\r\n      width: 150,\r\n      editable: false,\r\n    },\r\n\r\n    {\r\n      field: 'transmission',\r\n      headerName: 'Transmission',\r\n      width: 150,\r\n      editable: false,\r\n    },\r\n\r\n    {\r\n      field: 'passing_year',\r\n      headerName: 'Passing Year',\r\n      width: 150,\r\n      editable: false,\r\n    },\r\n\r\n    {\r\n      field: 'number_of_owners',\r\n      headerName: 'Number of Owners',\r\n      width: 150,\r\n      editable: false,\r\n    },\r\n\r\n    {\r\n      field: 'make_model',\r\n      headerName: 'Make Model',\r\n      width: 150,\r\n      editable: false,\r\n    },\r\n\r\n    {\r\n      field: 'action',\r\n      headerName: 'Action',\r\n      width: 200,\r\n      renderCell: (params) => {\r\n        return (\r\n          <div className=\"\" style={{ width: \"100%\", textAlign: 'center', margin: '0 40px' }}>\r\n            <button type=\"button\" className=\"btn btn-warning\" data-toggle=\"tooltip\" title=\"Edit\" onClick={() => { editVehicle(params.row) }} ><i className=\"fa fa-pencil\"></i></button>\r\n            <button style={{ marginLeft: '20%' }} className=\"btn btn-danger\" data-toggle=\"tooltip\" title=\"Delete\" onClick={() => { deleteVehicle(params.row.id) }}><i className=\"fa fa-trash\"></i></button>\r\n\r\n          </div>\r\n        );\r\n      }\r\n    },\r\n  ];\r\n  //console.log(data3);\r\n  const rows = data.vehicle;\r\n\r\n  const passing_year=[2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021];\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Modal show={showModal} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Modal heading</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"col-md-12\">\r\n            <form className=\"form-group\" onSubmit={(e) => { onModalFormSubmit(e) }}>\r\n            <div className=\"row\">\r\n            <div className=\"field col-md-6\">\r\n              <label>Vehicle Number</label>\r\n              <input defaultValue={updateVehicledata.vehicle_number} onChange={e => onModalInputChange(e)} className=\"form-control\" name=\"vehicle_number\" type=\"text\" placeholder='Enter Your Vehicle Number' required />\r\n            </div>\r\n\r\n            <div className=\"field col-md-6\">\r\n              <label>Color</label>\r\n              <input defaultValue={updateVehicledata.color} onChange={e => onModalInputChange(e)} className=\"form-control\" name=\"color\" type=\"text\" placeholder='Enter Your Color' required />\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"field col-md-6\">\r\n              <label>Make Model</label>\r\n              <div style={{ display: 'flex' }}>\r\n                <input defaultValue={updateVehicledata.make_model} onChange={e => onModalInputChange(e)} className=\"form-control\" name=\"make_model\" type=\"text\" placeholder='Enter Your Make Model' required />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"field col-md-6\">\r\n              <label>Varient</label>\r\n              <input defaultValue={updateVehicledata.varient} onChange={e => onModalInputChange(e)} className=\"form-control\" name=\"varient\" type=\"text\" placeholder='Enter Your Varient' required />\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"field col-md-6\">\r\n              <label>Fuel Type</label>\r\n              {/* <input onChange={e => onInputChange(e)} className=\"form-control\" name=\"fuel_type\" type=\"text\" placeholder='Enter Your Fuel Type' required/> */}\r\n              <select defaultValue={updateVehicledata.fuel_type} className=\"form-control\" onChange={onModalInputChange} name=\"fuel_type\">\r\n                <option>Select Fuel Type</option>\r\n                <option value='Petrol'>Petrol</option>\r\n                <option value='Disel'>Disel</option>\r\n                <option value='Electric'>Electric</option>\r\n              </select>\r\n\r\n\r\n            </div>\r\n\r\n            <div className=\"field col-md-6\">\r\n              <label>KMS Driven</label>\r\n              <input defaultValue={updateVehicledata.kms_driven} onChange={e => onModalInputChange(e)} className=\"form-control\" name=\"kms_driven\" type=\"text\" placeholder='Enter Your KMS Driven' required />\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"field col-md-6\">\r\n              <label>Engine Displacement</label>\r\n              <input defaultValue={updateVehicledata.engine_displacement} onChange={e => onModalInputChange(e)} className=\"form-control\" name=\"engine_displacement\" type=\"text\" placeholder='Enter Your Engine Displacement' required />\r\n            </div>\r\n\r\n            <div className=\"field col-md-6\">\r\n              <label>Body Type</label>\r\n              {/* <input onChange={e => onInputChange(e)} className=\"form-control\" name=\"body_type\" type=\"text\" placeholder='Enter Your Body Type' required /> */}\r\n              <select defaultValue={updateVehicledata.body_type} className=\"form-control\" onChange={onModalInputChange} name=\"body_type\" required>\r\n                <option>Select Body Type</option>\r\n                <option value='SUV'>SUV</option>\r\n                <option value='SEDAW'>SEDAW</option>\r\n                <option value='MUV'>MUV</option>\r\n                <option value='HATCHBCK'>HATCHBCK</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"field col-md-6\">\r\n              <label>Number Of Owners</label>\r\n              <input defaultValue={updateVehicledata.number_of_owners} onChange={e => onModalInputChange(e)} className=\"form-control\" name=\"number_of_owners\" type=\"text\" placeholder='Enter Your Number Of Owners' required />\r\n            </div>\r\n            <div className=\"field col-md-6\">\r\n              <label>Passing Year</label>\r\n              {/* <input onChange={e => onInputChange(e)} className=\"form-control\" name=\"passing_year\" type=\"text\" placeholder='Enter Your Passing Year' required /> */}\r\n              <select defaultValue={updateVehicledata.passing_year} className=\"form-control\" onChange={onModalInputChange} name=\"passing_year\" required>\r\n                <option>Select Passing Year</option>\r\n                {passing_year.map(year=>(\r\n                  <option key={year} value={year}>{year}</option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"field col-md-6\">\r\n              <label>Engine Number</label>\r\n              <input defaultValue={updateVehicledata.engine_number} onChange={e => onModalInputChange(e)} className=\"form-control\" name=\"engine_number\" type=\"text\" placeholder='Enter Your Engine Number' required />\r\n            </div>\r\n            <div className=\"field col-md-6\">\r\n              <label>Transmission</label>\r\n              <input defaultValue={updateVehicledata.transmission} onChange={e => onModalInputChange(e)} className=\"form-control\" name=\"transmission\" type=\"text\" placeholder='Enter Your Transmission' required />\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"field col-md-6\">\r\n              <label>Chess Number</label>\r\n              <input defaultValue={updateVehicledata.chess_number} onChange={e => onModalInputChange(e)} className=\"form-control\" name=\"chess_number\" type=\"text\" placeholder='Enter Your Chess Number' required />\r\n            </div>\r\n          </div>\r\n              <div className=\"field\">\r\n                <button className=\"btn btn-primary\">Save</button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n\r\n        </Modal.Footer>\r\n      </Modal>\r\n      <div className=\"col-md-12\">\r\n        <h1 style={{ width: '100%', textAlign: 'center' }}>Vehicle Registration</h1>\r\n        <Divider style={{ marginBottom: '10px', }} />\r\n        <form onSubmit={(e) => { onFormSubmit(e) }} className=\"form-group\">\r\n          <div className=\"row\">\r\n            <div className=\"field col-md-6\">\r\n              <label>Vehicle Number</label>\r\n              <input onChange={e => onInputChange(e)} className=\"form-control\" name=\"vehicle_number\" type=\"text\" placeholder='Enter Your Vehicle Number' required />\r\n            </div>\r\n\r\n            <div className=\"field col-md-6\">\r\n              <label>Color</label>\r\n              <input onChange={e => onInputChange(e)} className=\"form-control\" name=\"color\" type=\"text\" placeholder='Enter Your Color' required />\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"field col-md-6\">\r\n              <label>Make Model</label>\r\n              <div style={{ display: 'flex' }}>\r\n                <input onChange={e => onInputChange(e)} className=\"form-control\" name=\"make_model\" type=\"text\" placeholder='Enter Your Make Model' required />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"field col-md-6\">\r\n              <label>Varient</label>\r\n              <input onChange={e => onInputChange(e)} className=\"form-control\" name=\"varient\" type=\"text\" placeholder='Enter Your Varient' required />\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"field col-md-6\">\r\n              <label>Fuel Type</label>\r\n              {/* <input onChange={e => onInputChange(e)} className=\"form-control\" name=\"fuel_type\" type=\"text\" placeholder='Enter Your Fuel Type' required/> */}\r\n              <select className=\"form-control\" onChange={onInputChange} name=\"fuel_type\" required>\r\n                <option>Select Fuel Type</option>\r\n                <option value='Petrol'>Petrol</option>\r\n                <option value='Disel'>Disel</option>\r\n                <option value='Electric'>Electric</option>\r\n              </select>\r\n\r\n\r\n            </div>\r\n\r\n            <div className=\"field col-md-6\">\r\n              <label>KMS Driven</label>\r\n              <input onChange={e => onInputChange(e)} className=\"form-control\" name=\"kms_driven\" type=\"text\" placeholder='Enter Your KMS Driven' required />\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"field col-md-6\">\r\n              <label>Engine Displacement</label>\r\n              <input onChange={e => onInputChange(e)} className=\"form-control\" name=\"engine_displacement\" type=\"text\" placeholder='Enter Your Engine Displacement' required />\r\n            </div>\r\n\r\n            <div className=\"field col-md-6\">\r\n              <label>Body Type</label>\r\n              {/* <input onChange={e => onInputChange(e)} className=\"form-control\" name=\"body_type\" type=\"text\" placeholder='Enter Your Body Type' required /> */}\r\n              <select className=\"form-control\" onChange={onInputChange} name=\"body_type\">\r\n                <option>Select Body Type</option>\r\n                <option value='SUV'>SUV</option>\r\n                <option value='SEDAW'>SEDAW</option>\r\n                <option value='MUV'>MUV</option>\r\n                <option value='HATCHBCK'>HATCHBCK</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"field col-md-6\">\r\n              <label>Number Of Owners</label>\r\n              <input onChange={e => onInputChange(e)} className=\"form-control\" name=\"number_of_owners\" type=\"text\" placeholder='Enter Your Number Of Owners' required />\r\n            </div>\r\n            <div className=\"field col-md-6\">\r\n              <label>Passing Year</label>\r\n              {/* <input onChange={e => onInputChange(e)} className=\"form-control\" name=\"passing_year\" type=\"text\" placeholder='Enter Your Passing Year' required /> */}\r\n              <select className=\"form-control\" onChange={onInputChange} name=\"passing_year\">\r\n                <option>Select Passing Year</option>\r\n                {passing_year.map(year=>(\r\n                  <option key={year} value={year}>{year}</option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"field col-md-6\">\r\n              <label>Engine Number</label>\r\n              <input onChange={e => onInputChange(e)} className=\"form-control\" name=\"engine_number\" type=\"text\" placeholder='Enter Your Engine Number' required />\r\n            </div>\r\n            <div className=\"field col-md-6\">\r\n              <label>Transmission</label>\r\n              <input onChange={e => onInputChange(e)} className=\"form-control\" name=\"transmission\" type=\"text\" placeholder='Enter Your Transmission' required />\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"field col-md-6\">\r\n              <label>Chess Number</label>\r\n              <input onChange={e => onInputChange(e)} className=\"form-control\" name=\"chess_number\" type=\"text\" placeholder='Enter Your Chess Number' required />\r\n            </div>\r\n          </div>\r\n          <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '20px' }}>\r\n            <button className=\"btn btn-primary\" type='submit' style={{ marginRight: '50px' }}>Save</button>\r\n            <button className=\"btn btn-primary\" type='reset'>Reset</button>\r\n          </div>\r\n        </form>\r\n      </div><br />\r\n      <div style={{ height: 500, width: '100%' }}>\r\n        <DataGrid\r\n          rows={rows}\r\n          columns={columns}\r\n          pageSize={10}\r\n          rowsPerPageOptions={[10]}\r\n          checkboxSelection={false}\r\n          // components={{\r\n          //   Toolbar: GridToolbar,\r\n          // }}\r\n          disableSelectionOnClick\r\n        />\r\n        <Link to={`/Data_Entry/Vehicle_Registration`} className=\"btn btn-success\">\r\n          Previous\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Vehicle_Registration;\r\n\r\n\r\n","D:\\Mitharis\\my-app\\src\\Components\\NavItems\\Data_Entry\\Delivery_Note.js",[],"D:\\Mitharis\\my-app\\src\\Components\\NavItems\\Data_Entry\\EnqGen.js",["219","220"],"D:\\Mitharis\\my-app\\src\\Components\\NavItems\\Data_Entry\\VehicleCrud.js",["221","222","223","224","225"],{"ruleId":"226","replacedBy":"227"},{"ruleId":"228","replacedBy":"229"},{"ruleId":"230","severity":1,"message":"231","line":3,"column":5,"nodeType":"232","messageId":"233","endLine":3,"endColumn":13},{"ruleId":"230","severity":1,"message":"234","line":7,"column":5,"nodeType":"232","messageId":"233","endLine":7,"endColumn":17},{"ruleId":"230","severity":1,"message":"235","line":9,"column":10,"nodeType":"232","messageId":"233","endLine":9,"endColumn":16},{"ruleId":"230","severity":1,"message":"236","line":9,"column":18,"nodeType":"232","messageId":"233","endLine":9,"endColumn":23},{"ruleId":"230","severity":1,"message":"237","line":9,"column":25,"nodeType":"232","messageId":"233","endLine":9,"endColumn":29},{"ruleId":"230","severity":1,"message":"238","line":113,"column":31,"nodeType":"232","messageId":"233","endLine":113,"endColumn":44},{"ruleId":"230","severity":1,"message":"239","line":114,"column":31,"nodeType":"232","messageId":"233","endLine":114,"endColumn":42},{"ruleId":"230","severity":1,"message":"240","line":115,"column":31,"nodeType":"232","messageId":"233","endLine":115,"endColumn":41},{"ruleId":"230","severity":1,"message":"235","line":6,"column":10,"nodeType":"232","messageId":"233","endLine":6,"endColumn":16},{"ruleId":"230","severity":1,"message":"236","line":6,"column":18,"nodeType":"232","messageId":"233","endLine":6,"endColumn":23},{"ruleId":"230","severity":1,"message":"241","line":1,"column":17,"nodeType":"232","messageId":"233","endLine":1,"endColumn":25},{"ruleId":"230","severity":1,"message":"242","line":4,"column":3,"nodeType":"232","messageId":"233","endLine":4,"endColumn":14},{"ruleId":"230","severity":1,"message":"243","line":7,"column":20,"nodeType":"232","messageId":"233","endLine":7,"endColumn":31},{"ruleId":"230","severity":1,"message":"244","line":8,"column":10,"nodeType":"232","messageId":"233","endLine":8,"endColumn":15},{"ruleId":"230","severity":1,"message":"245","line":8,"column":17,"nodeType":"232","messageId":"233","endLine":8,"endColumn":23},{"ruleId":"230","severity":1,"message":"246","line":10,"column":10,"nodeType":"232","messageId":"233","endLine":10,"endColumn":17},{"ruleId":"230","severity":1,"message":"235","line":11,"column":10,"nodeType":"232","messageId":"233","endLine":11,"endColumn":16},{"ruleId":"230","severity":1,"message":"236","line":11,"column":18,"nodeType":"232","messageId":"233","endLine":11,"endColumn":23},{"ruleId":"230","severity":1,"message":"237","line":11,"column":25,"nodeType":"232","messageId":"233","endLine":11,"endColumn":29},{"ruleId":"230","severity":1,"message":"247","line":177,"column":35,"nodeType":"232","messageId":"233","endLine":177,"endColumn":46},{"ruleId":"230","severity":1,"message":"239","line":178,"column":35,"nodeType":"232","messageId":"233","endLine":178,"endColumn":46},{"ruleId":"230","severity":1,"message":"248","line":179,"column":35,"nodeType":"232","messageId":"233","endLine":179,"endColumn":50},{"ruleId":"230","severity":1,"message":"243","line":7,"column":20,"nodeType":"232","messageId":"233","endLine":7,"endColumn":31},{"ruleId":"230","severity":1,"message":"235","line":11,"column":10,"nodeType":"232","messageId":"233","endLine":11,"endColumn":16},{"ruleId":"230","severity":1,"message":"236","line":11,"column":18,"nodeType":"232","messageId":"233","endLine":11,"endColumn":23},{"ruleId":"230","severity":1,"message":"243","line":7,"column":20,"nodeType":"232","messageId":"233","endLine":7,"endColumn":31},{"ruleId":"230","severity":1,"message":"246","line":12,"column":10,"nodeType":"232","messageId":"233","endLine":12,"endColumn":17},{"ruleId":"230","severity":1,"message":"249","line":217,"column":11,"nodeType":"232","messageId":"233","endLine":217,"endColumn":19},{"ruleId":"230","severity":1,"message":"231","line":3,"column":5,"nodeType":"232","messageId":"233","endLine":3,"endColumn":13},{"ruleId":"230","severity":1,"message":"234","line":7,"column":5,"nodeType":"232","messageId":"233","endLine":7,"endColumn":17},{"ruleId":"230","severity":1,"message":"235","line":9,"column":10,"nodeType":"232","messageId":"233","endLine":9,"endColumn":16},{"ruleId":"230","severity":1,"message":"236","line":9,"column":18,"nodeType":"232","messageId":"233","endLine":9,"endColumn":23},{"ruleId":"230","severity":1,"message":"237","line":9,"column":25,"nodeType":"232","messageId":"233","endLine":9,"endColumn":29},{"ruleId":"230","severity":1,"message":"250","line":79,"column":26,"nodeType":"232","messageId":"233","endLine":79,"endColumn":36},{"ruleId":"230","severity":1,"message":"239","line":80,"column":26,"nodeType":"232","messageId":"233","endLine":80,"endColumn":37},{"ruleId":"230","severity":1,"message":"240","line":81,"column":26,"nodeType":"232","messageId":"233","endLine":81,"endColumn":36},{"ruleId":"230","severity":1,"message":"251","line":5,"column":5,"nodeType":"232","messageId":"233","endLine":5,"endColumn":20},{"ruleId":"230","severity":1,"message":"242","line":6,"column":5,"nodeType":"232","messageId":"233","endLine":6,"endColumn":16},{"ruleId":"230","severity":1,"message":"244","line":9,"column":10,"nodeType":"232","messageId":"233","endLine":9,"endColumn":15},{"ruleId":"230","severity":1,"message":"245","line":9,"column":17,"nodeType":"232","messageId":"233","endLine":9,"endColumn":23},{"ruleId":"230","severity":1,"message":"252","line":104,"column":11,"nodeType":"232","messageId":"233","endLine":104,"endColumn":17},{"ruleId":"230","severity":1,"message":"253","line":105,"column":11,"nodeType":"232","messageId":"233","endLine":105,"endColumn":16},{"ruleId":"230","severity":1,"message":"251","line":6,"column":5,"nodeType":"232","messageId":"233","endLine":6,"endColumn":20},{"ruleId":"230","severity":1,"message":"242","line":7,"column":5,"nodeType":"232","messageId":"233","endLine":7,"endColumn":16},{"ruleId":"230","severity":1,"message":"244","line":9,"column":10,"nodeType":"232","messageId":"233","endLine":9,"endColumn":15},{"ruleId":"230","severity":1,"message":"245","line":9,"column":17,"nodeType":"232","messageId":"233","endLine":9,"endColumn":23},{"ruleId":"230","severity":1,"message":"254","line":89,"column":9,"nodeType":"232","messageId":"233","endLine":89,"endColumn":16},{"ruleId":"230","severity":1,"message":"255","line":94,"column":11,"nodeType":"232","messageId":"233","endLine":94,"endColumn":20},{"ruleId":"230","severity":1,"message":"256","line":105,"column":11,"nodeType":"232","messageId":"233","endLine":105,"endColumn":16},{"ruleId":"230","severity":1,"message":"252","line":106,"column":11,"nodeType":"232","messageId":"233","endLine":106,"endColumn":17},{"ruleId":"230","severity":1,"message":"253","line":107,"column":11,"nodeType":"232","messageId":"233","endLine":107,"endColumn":16},{"ruleId":"230","severity":1,"message":"231","line":3,"column":5,"nodeType":"232","messageId":"233","endLine":3,"endColumn":13},{"ruleId":"230","severity":1,"message":"242","line":5,"column":5,"nodeType":"232","messageId":"233","endLine":5,"endColumn":16},{"ruleId":"230","severity":1,"message":"251","line":6,"column":5,"nodeType":"232","messageId":"233","endLine":6,"endColumn":20},{"ruleId":"230","severity":1,"message":"235","line":9,"column":10,"nodeType":"232","messageId":"233","endLine":9,"endColumn":16},{"ruleId":"230","severity":1,"message":"236","line":9,"column":18,"nodeType":"232","messageId":"233","endLine":9,"endColumn":23},{"ruleId":"230","severity":1,"message":"237","line":9,"column":25,"nodeType":"232","messageId":"233","endLine":9,"endColumn":29},{"ruleId":"230","severity":1,"message":"244","line":12,"column":10,"nodeType":"232","messageId":"233","endLine":12,"endColumn":15},{"ruleId":"230","severity":1,"message":"245","line":12,"column":17,"nodeType":"232","messageId":"233","endLine":12,"endColumn":23},{"ruleId":"230","severity":1,"message":"242","line":4,"column":5,"nodeType":"232","messageId":"233","endLine":4,"endColumn":16},{"ruleId":"230","severity":1,"message":"251","line":6,"column":5,"nodeType":"232","messageId":"233","endLine":6,"endColumn":20},{"ruleId":"230","severity":1,"message":"244","line":10,"column":10,"nodeType":"232","messageId":"233","endLine":10,"endColumn":15},{"ruleId":"230","severity":1,"message":"245","line":10,"column":17,"nodeType":"232","messageId":"233","endLine":10,"endColumn":23},{"ruleId":"230","severity":1,"message":"254","line":34,"column":9,"nodeType":"232","messageId":"233","endLine":34,"endColumn":16},{"ruleId":"230","severity":1,"message":"249","line":137,"column":11,"nodeType":"232","messageId":"233","endLine":137,"endColumn":19},{"ruleId":"230","severity":1,"message":"241","line":1,"column":15,"nodeType":"232","messageId":"233","endLine":1,"endColumn":23},{"ruleId":"230","severity":1,"message":"242","line":5,"column":5,"nodeType":"232","messageId":"233","endLine":5,"endColumn":16},{"ruleId":"230","severity":1,"message":"251","line":6,"column":5,"nodeType":"232","messageId":"233","endLine":6,"endColumn":20},{"ruleId":"230","severity":1,"message":"234","line":7,"column":5,"nodeType":"232","messageId":"233","endLine":7,"endColumn":17},{"ruleId":"230","severity":1,"message":"235","line":9,"column":10,"nodeType":"232","messageId":"233","endLine":9,"endColumn":16},{"ruleId":"230","severity":1,"message":"236","line":9,"column":18,"nodeType":"232","messageId":"233","endLine":9,"endColumn":23},{"ruleId":"230","severity":1,"message":"237","line":9,"column":25,"nodeType":"232","messageId":"233","endLine":9,"endColumn":29},{"ruleId":"230","severity":1,"message":"244","line":12,"column":10,"nodeType":"232","messageId":"233","endLine":12,"endColumn":15},{"ruleId":"230","severity":1,"message":"245","line":12,"column":17,"nodeType":"232","messageId":"233","endLine":12,"endColumn":23},{"ruleId":"230","severity":1,"message":"231","line":3,"column":5,"nodeType":"232","messageId":"233","endLine":3,"endColumn":13},{"ruleId":"230","severity":1,"message":"234","line":7,"column":5,"nodeType":"232","messageId":"233","endLine":7,"endColumn":17},{"ruleId":"230","severity":1,"message":"235","line":9,"column":10,"nodeType":"232","messageId":"233","endLine":9,"endColumn":16},{"ruleId":"230","severity":1,"message":"236","line":9,"column":18,"nodeType":"232","messageId":"233","endLine":9,"endColumn":23},{"ruleId":"230","severity":1,"message":"237","line":9,"column":25,"nodeType":"232","messageId":"233","endLine":9,"endColumn":29},{"ruleId":"230","severity":1,"message":"240","line":94,"column":33,"nodeType":"232","messageId":"233","endLine":94,"endColumn":43},{"ruleId":"230","severity":1,"message":"257","line":95,"column":33,"nodeType":"232","messageId":"233","endLine":95,"endColumn":43},{"ruleId":"230","severity":1,"message":"258","line":96,"column":33,"nodeType":"232","messageId":"233","endLine":96,"endColumn":43},{"ruleId":"230","severity":1,"message":"231","line":3,"column":5,"nodeType":"232","messageId":"233","endLine":3,"endColumn":13},{"ruleId":"230","severity":1,"message":"234","line":7,"column":5,"nodeType":"232","messageId":"233","endLine":7,"endColumn":17},{"ruleId":"230","severity":1,"message":"235","line":9,"column":10,"nodeType":"232","messageId":"233","endLine":9,"endColumn":16},{"ruleId":"230","severity":1,"message":"236","line":9,"column":18,"nodeType":"232","messageId":"233","endLine":9,"endColumn":23},{"ruleId":"230","severity":1,"message":"237","line":9,"column":25,"nodeType":"232","messageId":"233","endLine":9,"endColumn":29},{"ruleId":"230","severity":1,"message":"240","line":96,"column":29,"nodeType":"232","messageId":"233","endLine":96,"endColumn":39},{"ruleId":"230","severity":1,"message":"258","line":98,"column":29,"nodeType":"232","messageId":"233","endLine":98,"endColumn":39},{"ruleId":"230","severity":1,"message":"231","line":3,"column":5,"nodeType":"232","messageId":"233","endLine":3,"endColumn":13},{"ruleId":"230","severity":1,"message":"234","line":7,"column":5,"nodeType":"232","messageId":"233","endLine":7,"endColumn":17},{"ruleId":"230","severity":1,"message":"235","line":9,"column":10,"nodeType":"232","messageId":"233","endLine":9,"endColumn":16},{"ruleId":"230","severity":1,"message":"236","line":9,"column":18,"nodeType":"232","messageId":"233","endLine":9,"endColumn":23},{"ruleId":"230","severity":1,"message":"237","line":9,"column":25,"nodeType":"232","messageId":"233","endLine":9,"endColumn":29},{"ruleId":"230","severity":1,"message":"239","line":109,"column":31,"nodeType":"232","messageId":"233","endLine":109,"endColumn":42},{"ruleId":"230","severity":1,"message":"259","line":110,"column":31,"nodeType":"232","messageId":"233","endLine":110,"endColumn":39},{"ruleId":"230","severity":1,"message":"247","line":111,"column":31,"nodeType":"232","messageId":"233","endLine":111,"endColumn":42},{"ruleId":"230","severity":1,"message":"243","line":7,"column":20,"nodeType":"232","messageId":"233","endLine":7,"endColumn":31},{"ruleId":"230","severity":1,"message":"235","line":11,"column":10,"nodeType":"232","messageId":"233","endLine":11,"endColumn":16},{"ruleId":"230","severity":1,"message":"236","line":11,"column":18,"nodeType":"232","messageId":"233","endLine":11,"endColumn":23},{"ruleId":"230","severity":1,"message":"235","line":6,"column":10,"nodeType":"232","messageId":"233","endLine":6,"endColumn":16},{"ruleId":"230","severity":1,"message":"236","line":6,"column":18,"nodeType":"232","messageId":"233","endLine":6,"endColumn":23},{"ruleId":"230","severity":1,"message":"243","line":7,"column":20,"nodeType":"232","messageId":"233","endLine":7,"endColumn":31},{"ruleId":"230","severity":1,"message":"235","line":11,"column":10,"nodeType":"232","messageId":"233","endLine":11,"endColumn":16},{"ruleId":"230","severity":1,"message":"236","line":11,"column":18,"nodeType":"232","messageId":"233","endLine":11,"endColumn":23},{"ruleId":"230","severity":1,"message":"258","line":265,"column":29,"nodeType":"232","messageId":"233","endLine":265,"endColumn":39},{"ruleId":"230","severity":1,"message":"257","line":266,"column":28,"nodeType":"232","messageId":"233","endLine":266,"endColumn":38},"no-native-reassign",["260"],"no-negated-in-lhs",["261"],"no-unused-vars","'useQuery' is defined but never used.","Identifier","unusedVar","'useLazyQuery' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'insuranceData' is assigned a value but never used.","'updatedData' is assigned a value but never used.","'deleteData' is assigned a value but never used.","'useState' is defined but never used.","'useMutation' is defined but never used.","'GridToolbar' is defined but never used.","'Modal' is defined but never used.","'Button' is defined but never used.","'Divider' is defined but never used.","'deletedData' is assigned a value but never used.","'transactionData' is assigned a value but never used.","'printPdf' is assigned a value but never used.","'stolenData' is assigned a value but never used.","'useSubscription' is defined but never used.","'seller' is assigned a value but never used.","'buyer' is assigned a value but never used.","'counter' is assigned a value but never used.","'comm_data' is assigned a value but never used.","'stock' is assigned a value but never used.","'updateData' is assigned a value but never used.","'insertData' is assigned a value but never used.","'carsData' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]