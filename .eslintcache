[{"D:\\Mitharis\\my-app\\src\\index.js":"1","D:\\Mitharis\\my-app\\src\\reportWebVitals.js":"2","D:\\Mitharis\\my-app\\src\\App.js":"3","D:\\Mitharis\\my-app\\src\\Components\\Body.js":"4","D:\\Mitharis\\my-app\\src\\Components\\Navbar.js":"5","D:\\Mitharis\\my-app\\src\\Components\\NavItems\\Data_Entry\\Insurance_Registration.js":"6","D:\\Mitharis\\my-app\\src\\Components\\NavItems\\Data_Entry\\Enquiry_Generation.js":"7","D:\\Mitharis\\my-app\\src\\Components\\NavItems\\Dashboard.js":"8","D:\\Mitharis\\my-app\\src\\Components\\NavItems\\Data_Entry\\Transaction.js":"9","D:\\Mitharis\\my-app\\src\\Components\\NavItems\\Data_Entry\\Vehicle_Registration.js":"10","D:\\Mitharis\\my-app\\src\\Components\\NavItems\\Data_Entry\\RTO_Agent.js":"11","D:\\Mitharis\\my-app\\src\\Components\\NavItems\\Data_Entry\\Stolen.js":"12","D:\\Mitharis\\my-app\\src\\Components\\NavItems\\Reporting\\Sales_Report.js":"13","D:\\Mitharis\\my-app\\src\\Components\\NavItems\\Reporting\\Commision_Report.js":"14","D:\\Mitharis\\my-app\\src\\Components\\NavItems\\Reporting\\Insurance_Report.js":"15","D:\\Mitharis\\my-app\\src\\Components\\NavItems\\Reporting\\Vehicle_History.js":"16","D:\\Mitharis\\my-app\\src\\Components\\NavItems\\Reporting\\PaperWork.js":"17","D:\\Mitharis\\my-app\\src\\Components\\NavItems\\Utilities\\Customer.js":"18","D:\\Mitharis\\my-app\\src\\Components\\NavItems\\Utilities\\RTO_Agent_Numbers.js":"19","D:\\Mitharis\\my-app\\src\\Components\\NavItems\\Utilities\\Third_Party_Agent.js":"20","D:\\Mitharis\\my-app\\src\\Components\\NavItems\\Data_Entry\\Vehicle_Master.js":"21","D:\\Mitharis\\my-app\\src\\Components\\NavItems\\Data_Entry\\Vehicle_Form.js":"22","D:\\Mitharis\\my-app\\src\\Components\\NavItems\\Data_Entry\\Delivery_Note.js":"23","D:\\Mitharis\\my-app\\src\\Components\\NavItems\\Data_Entry\\EnqGen.js":"24","D:\\Mitharis\\my-app\\src\\Components\\NavItems\\Data_Entry\\VehicleCrud.js":"25","D:\\Mitharis\\my-app\\src\\Components\\NavItems\\Data_Entry\\EnquiryCrud.js":"26"},{"size":505,"mtime":1631711264408,"results":"27","hashOfConfig":"28"},{"size":362,"mtime":1631123112000,"results":"29","hashOfConfig":"28"},{"size":1317,"mtime":1631171219513,"results":"30","hashOfConfig":"28"},{"size":4934,"mtime":1632211046685,"results":"31","hashOfConfig":"28"},{"size":11860,"mtime":1632211052713,"results":"32","hashOfConfig":"28"},{"size":12174,"mtime":1631877116119,"results":"33","hashOfConfig":"28"},{"size":19760,"mtime":1632140729654,"results":"34","hashOfConfig":"28"},{"size":7369,"mtime":1632211782881,"results":"35","hashOfConfig":"28"},{"size":19484,"mtime":1632135654121,"results":"36","hashOfConfig":"28"},{"size":14387,"mtime":1631963641623,"results":"37","hashOfConfig":"28"},{"size":15224,"mtime":1631881630846,"results":"38","hashOfConfig":"28"},{"size":9553,"mtime":1631882507891,"results":"39","hashOfConfig":"28"},{"size":7897,"mtime":1632208390022,"results":"40","hashOfConfig":"28"},{"size":7433,"mtime":1632208630808,"results":"41","hashOfConfig":"28"},{"size":5467,"mtime":1632209792171,"results":"42","hashOfConfig":"28"},{"size":143,"mtime":1631124964000,"results":"43","hashOfConfig":"28"},{"size":6108,"mtime":1632210166231,"results":"44","hashOfConfig":"28"},{"size":3471,"mtime":1631710096326,"results":"45","hashOfConfig":"28"},{"size":6956,"mtime":1631867647437,"results":"46","hashOfConfig":"28"},{"size":7176,"mtime":1631867663857,"results":"47","hashOfConfig":"28"},{"size":7907,"mtime":1631867318157,"results":"48","hashOfConfig":"28"},{"size":21788,"mtime":1631710823121,"results":"49","hashOfConfig":"28"},{"size":12361,"mtime":1631963871655,"results":"50","hashOfConfig":"28"},{"size":26337,"mtime":1632216574862,"results":"51","hashOfConfig":"28"},{"size":43453,"mtime":1631963797533,"results":"52","hashOfConfig":"28"},{"size":11174,"mtime":1631866683233,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"l2uyve",{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"56"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"56"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"56"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"56"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"56"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"56"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"56"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"56"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"56"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"56"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"56"},"D:\\Mitharis\\my-app\\src\\index.js",[],["126","127"],"D:\\Mitharis\\my-app\\src\\reportWebVitals.js",[],"D:\\Mitharis\\my-app\\src\\App.js",[],"D:\\Mitharis\\my-app\\src\\Components\\Body.js",[],"D:\\Mitharis\\my-app\\src\\Components\\Navbar.js",[],"D:\\Mitharis\\my-app\\src\\Components\\NavItems\\Data_Entry\\Insurance_Registration.js",["128","129","130","131","132","133","134"],"import React, { useState } from 'react';\r\nimport {\r\n  useQuery,\r\n  gql,\r\n  useMutation,\r\n  useSubscription,\r\n  useLazyQuery\r\n} from \"@apollo/client\";\r\nimport { Switch, Route, Link } from \"react-router-dom\";\r\nimport { DataGrid } from '@material-ui/data-grid';\r\n//import { IconName } from \"react-icons/bs\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { Divider } from '@material-ui/core';\r\n\r\nconst BuyerQuery = gql`\r\nquery MyQuery {\r\n  buyer {\r\n    customer_type\r\n    email\r\n    id\r\n    mobile_no\r\n    name\r\n  }\r\n}\r\n`\r\n\r\nconst InsuranceQuery = gql`\r\nsubscription MySubscription {\r\n  insurance {\r\n    buyer {\r\n      id\r\n      name\r\n    }\r\n    customer\r\n    from_date\r\n    id\r\n    insurance_amount\r\n    insurance_type\r\n    to_date\r\n    vehicle_no\r\n  }\r\n}\r\n`\r\nconst DELETE_INSURANCE = gql`\r\nmutation MyMutation($id: Int!) {\r\n  delete_insurance_by_pk(id: $id) {\r\n    id\r\n  }\r\n}\r\n`\r\n\r\nconst INSERT_INSURANCE = gql`\r\nmutation MyMutation($customer: Int!, $from_date: date!, $insurance_amount: bigint!, $insurance_type: String!, $to_date: date!, $vehicle_no: String!,$timestamp:date!) {\r\n  insert_insurance_one(object: {customer: $customer, from_date: $from_date, insurance_amount: $insurance_amount, insurance_type: $insurance_type, to_date: $to_date, vehicle_no: $vehicle_no,timestamp:$timestamp}) {\r\n    id\r\n  }\r\n}\r\n`\r\n\r\nconst UPDATE_INSURANCE = gql`\r\nmutation MyMutation($id:Int!,$customer: Int!, $from_date: date!, $insurance_amount: bigint!, $insurance_type: String!, $to_date: date!, $vehicle_no: String!) {\r\n  update_insurance_by_pk(pk_columns: {id: $id}, _set: {customer: $customer, from_date: $from_date, insurance_amount: $insurance_amount, insurance_type: $insurance_type, to_date: $to_date, vehicle_no: $vehicle_no}) {\r\n    id\r\n  }\r\n}\r\n\r\n`\r\nfunction Insurance_Registration() {\r\n  var today = new Date();\r\n  var dd = String(today.getDate()).padStart(2, '0');\r\n  var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n  var yyyy = today.getFullYear();\r\n  today = yyyy + '/' + mm + '/' + dd;\r\n  const [showModal, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  const [insurance, setInsurance] = useState({\r\n    customer: \"\",\r\n    insurance_type: \"\",\r\n    from_date: \"\",\r\n    to_date: \"\",\r\n    insurance_amount: \"\",\r\n    vehicle_no: \"\"\r\n  })\r\n  const [modalInsurance, setModalInsurance] = useState({\r\n    id: \"\",\r\n    customer: \"\",\r\n    insurance_type: \"\",\r\n    from_date: \"\",\r\n    to_date: \"\",\r\n    insurance_amount: \"\",\r\n    vehicle_no: \"\"\r\n  })\r\n  const onInputChange = (e) => {\r\n    setInsurance({ ...insurance, [e.target.name]: e.target.value })\r\n    console.log(insurance)\r\n  }\r\n  const onFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(e.target);\r\n    insertInsuranceData({ variables: { customer: insurance.customer, insurance_type: insurance.insurance_type, from_date: insurance.from_date, to_date: insurance.to_date, insurance_amount: insurance.insurance_amount, vehicle_no: insurance.vehicle_no, timestamp: today } });\r\n  }\r\n  const editInsurance = (insurance_data) => {\r\n    setModalInsurance({\r\n      id: insurance_data.id,\r\n      vehicle_no: insurance_data.vehicle_no,\r\n      from_date: insurance_data.from_date,\r\n      to_date: insurance_data.to_date,\r\n      customer: insurance_data.customer,\r\n      insurance_amount: insurance_data.insurance_amount,\r\n      insurance_type: insurance_data.insurance_type\r\n    })\r\n    handleShow();\r\n  }\r\n  const onModalInputChange = (e) => {\r\n    setModalInsurance({ ...modalInsurance, [e.target.name]: e.target.value })\r\n    console.log(modalInsurance)\r\n  }\r\n  const onModalFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    updateInsuranceData({ variables: { id: modalInsurance.id, customer: modalInsurance.customer, insurance_type: modalInsurance.insurance_type, from_date: modalInsurance.from_date, to_date: modalInsurance.to_date, insurance_amount: modalInsurance.insurance_amount, vehicle_no: modalInsurance.vehicle_no } });\r\n    handleClose();\r\n  }\r\n  const deleteInsurance = (id) => {\r\n    console.log(id);\r\n    deleteInsuranceData({ variables: { id: id } })\r\n  }\r\n  const buyer = useQuery(BuyerQuery);\r\n  const [insertInsuranceData, { insuranceData }] = useMutation(INSERT_INSURANCE);\r\n  const [updateInsuranceData, { updatedData }] = useMutation(UPDATE_INSURANCE);\r\n  const [deleteInsuranceData, { deleteData }] = useMutation(DELETE_INSURANCE);\r\n  const { loading, error, data } = useSubscription(InsuranceQuery);\r\n  // const [loadVehicle,{loading3,data3}] = useLazyQuery(VehicleMasterByPK,{\r\n  //   fetchPolicy: 'network-only',\r\n  // });\r\n\r\n\r\n  if (loading || buyer.loading) return <div style={{ width: \"100%\", marginTop: '25%', textAlign: 'center' }}><CircularProgress /></div>;\r\n  if (error) return `Error! ${error.message}`;\r\n  //console.log(data);\r\n  //const rows=data.stolen;\r\n  const columns = [\r\n    {\r\n      field: 'id',\r\n      headerName: 'ID',\r\n      width: 150,\r\n      hide: false,\r\n    },\r\n    {\r\n      field: \"buyer\",\r\n      headerName: \"Buyer Name\",\r\n      width: 160,\r\n      valueGetter: (params) => {\r\n        return params.row.buyer.name;\r\n      }\r\n    },\r\n    {\r\n      field: 'vehicle_no',\r\n      headerName: 'Vehicle No',\r\n      width: 150,\r\n      editable: false,\r\n    },\r\n    {\r\n      field: 'from_date',\r\n      headerName: 'From date',\r\n      width: 150,\r\n      editable: false,\r\n    },\r\n    {\r\n      field: 'to_date',\r\n      headerName: 'To Date',\r\n      width: 150,\r\n      editable: false,\r\n    },\r\n    {\r\n      field: 'insurance_amount',\r\n      headerName: 'Insurance Amount',\r\n      width: 150,\r\n      editable: false,\r\n    },\r\n    {\r\n      field: 'insurance_type',\r\n      headerName: 'Insurance Type',\r\n      width: 150,\r\n      editable: false,\r\n    },\r\n    {\r\n      field: 'action',\r\n      headerName: 'Action',\r\n      width: 300,\r\n      renderCell: (params) => {\r\n        return (\r\n          <div className=\"\">\r\n            <button data-toggle=\"tooltip\" title=\"Edit\" type=\"button\" onClick={(e) => editInsurance(params.row)} className=\"btn btn-warning\"><i className=\"fa fa-pencil\"></i></button>\r\n            <button data-toggle=\"tooltip\" onClick={() => { deleteInsurance(params.row.id) }} title=\"Delete\" style={{ marginLeft: '20%' }} className=\"btn btn-danger\"><i className=\"fa fa-trash\"></i></button>\r\n\r\n          </div>\r\n        );\r\n      }\r\n    },\r\n  ];\r\n  console.log(data);\r\n  const rows = data.insurance;\r\n  return (\r\n    <div className=\"container\">\r\n      <Modal show={showModal} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Modal heading</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"col-md-4\">\r\n            <form className=\"form-group\" onSubmit={e => onModalFormSubmit(e)}>\r\n              <div className=\"field\">\r\n                <label>Id</label>\r\n                <input onChange={(e) => { onModalInputChange(e) }} defaultValue={modalInsurance.id} className=\"form-control\" name=\"id\" type=\"text\" />\r\n              </div>\r\n              <div className=\"field\">\r\n                <label>Customer</label>\r\n                {/* <input onChange={(e) => { onModalInputChange(e) }} defaultValue={modalInsurance.customer} className=\"form-control\" name=\"customer\" type=\"text\" /> */}\r\n                <select defaultValue={modalInsurance.customer} onChange={(e) => onModalInputChange(e)} className=\"form-control\" name=\"customer\">\r\n                <option>Select Customer</option>\r\n                {buyer.data.buyer.map(buyerdata => (\r\n                  <option key={buyerdata.id} value={buyerdata.id}>{buyerdata.name}</option>\r\n                ))}  \r\n              </select>\r\n              </div>\r\n              <div className=\"field\">\r\n                <label>Vehicle No</label>\r\n                <input onChange={(e) => { onModalInputChange(e) }} defaultValue={modalInsurance.vehicle_no} className=\"form-control\" name=\"vehicle_no\" type=\"text\" />\r\n              </div>\r\n              <div className=\"field\">\r\n                <label>From Date</label>\r\n                <input onChange={(e) => { onModalInputChange(e) }} defaultValue={modalInsurance.from_date} className=\"form-control\" name=\"from_date\" type=\"date\" />\r\n              </div>\r\n              <div className=\"field\">\r\n                <label>To Date</label>\r\n                <input onChange={(e) => { onModalInputChange(e) }} defaultValue={modalInsurance.to_date} className=\"form-control\" name=\"to_date\" type=\"date\" />\r\n              </div>\r\n              <div className=\"field\">\r\n                <label>Insurance Amount</label>\r\n                <input onChange={(e) => { onModalInputChange(e) }} defaultValue={modalInsurance.insurance_amount} className=\"form-control\" name=\"insurance_amount\" type=\"text\" />\r\n              </div>\r\n              <div className=\"field\">\r\n                <label>Insurance Type</label>\r\n                <input onChange={(e) => { onModalInputChange(e) }} defaultValue={modalInsurance.insurance_type} className=\"form-control\" name=\"insurance_type\" type=\"text\" />\r\n              </div>\r\n              <div className=\"field\">\r\n                <button className=\"btn btn-primary\">Save</button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n\r\n        </Modal.Footer>\r\n      </Modal>\r\n      <div className=\"col-md-12\">\r\n        <form className=\"form-group\" onSubmit={e => onFormSubmit(e)}>\r\n          <div className=\"row\">\r\n\r\n            <h1 style={{ width: '100%', textAlign: 'center' }}>Insurance Registration</h1>\r\n            <Divider style={{ marginBottom: '10px', }} />\r\n            <div className=\"field col-md-6\">\r\n              <label>Customer</label>\r\n              {/* <input onChange={(e) => onInputChange(e)} className=\"form-control\" name=\"customer\" type=\"text\" /> */}\r\n              <select onChange={(e) => onInputChange(e)} className=\"form-control\" name=\"customer\">\r\n                <option>Select Customer</option>\r\n                {buyer.data.buyer.map(buyerdata => (\r\n                  <option key={buyerdata.id} value={buyerdata.id}>{buyerdata.name}</option>\r\n                ))}  \r\n              </select>\r\n            </div>\r\n            <div className=\"field col-md-6\">\r\n              <label>Vehicle No</label>\r\n              <input onChange={(e) => onInputChange(e)} className=\"form-control\" name=\"vehicle_no\" type=\"text\" />\r\n            </div>\r\n            <div className=\"field col-md-6\">\r\n              <label>From Date</label>\r\n              <input onChange={(e) => onInputChange(e)} className=\"form-control\" name=\"from_date\" type=\"date\" />\r\n            </div>\r\n            <div className=\"field col-md-6\">\r\n              <label>To Date</label>\r\n              <input onChange={(e) => onInputChange(e)} className=\"form-control\" name=\"to_date\" type=\"date\" />\r\n            </div>\r\n            <div className=\"field col-md-6\">\r\n              <label>Insurance Amount</label>\r\n              <input onChange={(e) => onInputChange(e)} className=\"form-control\" name=\"insurance_amount\" type=\"text\" />\r\n            </div>\r\n            <div className=\"field col-md-6\">\r\n              <label>Insurance Type</label>\r\n              <input onChange={(e) => onInputChange(e)} className=\"form-control\" name=\"insurance_type\" type=\"text\" />\r\n            </div>\r\n          </div>\r\n          <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '20px' }}>\r\n            <button className=\"btn btn-primary\" type='submit' style={{ marginRight: '50px' }}>Save</button>\r\n            <button className=\"btn btn-primary\" type='reset'>Reset</button>\r\n          </div>\r\n        </form>\r\n      </div><br />\r\n      <div style={{ height: 500, width: '100%' }}>\r\n        <DataGrid\r\n          rows={rows}\r\n          columns={columns}\r\n          pageSize={10}\r\n          rowsPerPageOptions={[10]}\r\n          checkboxSelection={false}\r\n          disableSelectionOnClick\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Insurance_Registration;\r\n\r\n\r\n","D:\\Mitharis\\my-app\\src\\Components\\NavItems\\Data_Entry\\Enquiry_Generation.js",["135","136"],"import React, { useState } from 'react'\r\nimport { CircularProgress, Divider } from '@material-ui/core';\r\nimport { gql, useMutation, useSubscription } from '@apollo/client';\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport { Switch, Route, Link } from \"react-router-dom\";\r\n\r\nconst VehicleQuery = gql`\r\nsubscription MySubscription {\r\n    buyer(distinct_on: id) {\r\n      address\r\n      adhaar\r\n      customer_type\r\n      email\r\n      id\r\n      mobile_no\r\n      license_number\r\n      name\r\n      occupation\r\n      pan\r\n    }\r\n}  \r\n  `\r\n\r\nconst UPDATE_VEHICLE = gql`\r\nmutation MyMutation($id: Int = 10, $address: String = \"\", $adhaar: String = \"\", $customer_type: String = \"\", $email: String = \"\", $license_number: String = \"\", $mobile_no: String = \"\", $name: String = \"\", $occupation: String = \"\", $pan: String = \"\") {\r\n    update_buyer_by_pk(pk_columns: {id: $id}, _set: {address: $address, adhaar: $adhaar, customer_type: $customer_type, email: $email, license_number: $license_number, mobile_no: $mobile_no, name: $name, occupation: $occupation, pan: $pan}) {\r\n      id\r\n    }\r\n  }  \r\n`\r\nconst INSERT_VEHICLE = gql`\r\nmutation MyMutation($address: String = \"\", $adhaar: String = \"\", $customer_type: String = \"\", $email: String = \"\", $id: Int = 10, $license_number: String = \"\", $mobile_no: String = \"\", $name: String = \"\", $occupation: String = \"\", $pan: String = \"\") {\r\n    insert_buyer(objects: {address: $address, adhaar: $adhaar, customer_type: $customer_type, email: $email, license_number: $license_number, mobile_no: $mobile_no, name: $name, occupation: $occupation, pan: $pan}) {\r\n      affected_rows\r\n    }\r\n  }  \r\n  `\r\nconst DELETE_VEHICLE = gql`\r\nmutation MyMutation($id: Int = 10) {\r\n    delete_buyer_by_pk(id: $id) {\r\n      id\r\n    }\r\n  }  \r\n  `\r\n\r\nexport default function Enquiry_Generation() {\r\n    const [showModal, setShow] = useState(false);\r\n    const [id, setId] = useState();\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    const [buyer, setBuyer] = useState({\r\n        name: \"\",\r\n        mobile_no: '',\r\n        email: '',\r\n        customer_type: '',\r\n        occupation: '',\r\n        license_number: '',\r\n        pan: '',\r\n        adhaar: '',\r\n        address: '',\r\n    })\r\n    const [updateBuyerdata, setUpdateBuyerData] = useState({\r\n        id: id,\r\n        name: \"\",\r\n        mobile_no: '',\r\n        email: '',\r\n        customer_type: '',\r\n        occupation: '',\r\n        license_number: '',\r\n        pan: '',\r\n        adhaar: '',\r\n        address: '',\r\n    })\r\n    const onInputChange = (e) => {\r\n        setBuyer({ ...buyer, [e.target.name]: e.target.value })\r\n    }\r\n\r\n    const onModalInputChange = (e) => {\r\n        setUpdateBuyerData({ ...updateBuyerdata, [e.target.name]: e.target.value })\r\n\r\n    }\r\n    const onFormSubmit = (e) => {\r\n        e.preventDefault();\r\n        insertVehicleData({\r\n            variables: {\r\n                name: buyer.name,\r\n                mobile_no: buyer.mobile_no,\r\n                email: buyer.email,\r\n                customer_type: buyer.customer_type,\r\n                occupation: buyer.occupation,\r\n                license_number: buyer.license_number,\r\n                pan: buyer.pan,\r\n                adhaar: buyer.adhaar,\r\n                address: buyer.address,\r\n            }\r\n        });\r\n    }\r\n    const deleteVehicle = (id) => {\r\n        console.log(id);\r\n        deleteVehicleData({ variables: { id: id } })\r\n    }\r\n    const onModalFormSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(e.target[0].value);\r\n        updateVehicleData({\r\n            variables: {\r\n                id: id,\r\n                name: updateBuyerdata.name,\r\n                mobile_no: updateBuyerdata.mobile_no,\r\n                email: updateBuyerdata.email,\r\n                customer_type: updateBuyerdata.customer_type,\r\n                occupation: updateBuyerdata.occupation,\r\n                license_number: updateBuyerdata.license_number,\r\n                pan: updateBuyerdata.pan,\r\n                adhaar: updateBuyerdata.adhaar,\r\n                address: updateBuyerdata.address,\r\n            }\r\n        });\r\n        handleClose();\r\n    }\r\n    const editVehicle = (row) => {\r\n        console.log(row.id);\r\n        setId(row.id);\r\n        setUpdateBuyerData({\r\n            name: row.name,\r\n            mobile_no: row.mobile_no,\r\n            email: row.email,\r\n            customer_type: row.customer_type,\r\n            occupation: row.occupation,\r\n            license_number: row.license_number,\r\n            pan: row.pan,\r\n            adhaar: row.adhaar,\r\n            address: row.address,\r\n        })\r\n        handleShow();\r\n        //loadVehicle({ variables: { id:id } });\r\n        //console.log(data3);\r\n    }\r\n    const [updateVehicleData] = useMutation(UPDATE_VEHICLE);\r\n    const [insertVehicleData] = useMutation(INSERT_VEHICLE);\r\n    const [deleteVehicleData] = useMutation(DELETE_VEHICLE);\r\n\r\n    const { loading, error, data } = useSubscription(VehicleQuery);\r\n\r\n\r\n    if (loading) return <div style={{ width: \"100%\", marginTop: '25%', textAlign: 'center' }}><CircularProgress /></div>;\r\n    if (error) return `Error! ${error.message}`;\r\n\r\n    const columns = [\r\n        {\r\n            field: 'id',\r\n            headerName: 'ID',\r\n            width: 100,\r\n            hide: false,\r\n        },\r\n        {\r\n            field: 'name',\r\n            headerName: 'Name',\r\n            width: 150,\r\n            hide: false,\r\n        },\r\n        {\r\n            field: 'mobile_no',\r\n            headerName: 'Mobile Number',\r\n            width: 150,\r\n            editable: false,\r\n        },\r\n        {\r\n            field: 'email',\r\n            headerName: 'Email',\r\n            width: 250,\r\n            editable: false,\r\n        },\r\n\r\n        {\r\n            field: 'customer_type',\r\n            headerName: 'Customer Type',\r\n            width: 200,\r\n            editable: false,\r\n        },\r\n\r\n        {\r\n            field: 'occupation',\r\n            headerName: 'Occupation',\r\n            width: 150,\r\n            editable: false,\r\n        },\r\n\r\n        {\r\n            field: 'license_number',\r\n            headerName: 'License Number',\r\n            width: 200,\r\n            editable: false,\r\n        },\r\n\r\n        {\r\n            field: 'pan',\r\n            headerName: 'Pan Number',\r\n            width: 200,\r\n            editable: false,\r\n        },\r\n\r\n        {\r\n            field: 'adhaar',\r\n            headerName: 'Adhaar Card Number',\r\n            width: 250,\r\n            editable: false,\r\n        },\r\n\r\n\r\n        {\r\n            field: 'address',\r\n            headerName: 'Address',\r\n            width: 250,\r\n            editable: false,\r\n        },\r\n\r\n        {\r\n            field: 'action',\r\n            headerName: 'Action',\r\n            width: 200,\r\n            renderCell: (params) => {\r\n                return (\r\n                    <div className=\"\" style={{ width: \"100%\", textAlign: 'center', margin: '0 40px' }}>\r\n                        <button type=\"button\" className=\"btn btn-warning\" data-toggle=\"tooltip\" title=\"Edit\" onClick={() => { editVehicle(params.row) }} ><i className=\"fa fa-pencil\"></i></button>\r\n                        <button style={{ marginLeft: '20%' }} className=\"btn btn-danger\" data-toggle=\"tooltip\" title=\"Delete\" onClick={() => { deleteVehicle(params.row.id) }}><i className=\"fa fa-trash\"></i></button>\r\n\r\n                    </div>\r\n                );\r\n            }\r\n        },\r\n    ];\r\n    //console.log(data3);\r\n    const rows = data.buyer;\r\n\r\n    return (\r\n        <div className='container'>\r\n            <Modal show={showModal} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Modal heading</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"col-md-12\">\r\n                        <form className=\"form-group\" onSubmit={(e) => { onModalFormSubmit(e) }}>\r\n                            <div className=\"row\">\r\n                                <h1 style={{ width: '100%', textAlign: 'center' }}>Buyer's   Registration</h1>\r\n                                <Divider style={{ marginBottom: '10px', }} />\r\n                                <div className=\"col-sm-6\">\r\n                                    <div className=\"form-group\">\r\n                                        <span className=\"form-label\">Purchase Name</span>\r\n                                        <input defaultValue={updateBuyerdata.name} className=\"form-control\" onChange={e => onModalInputChange(e)} name=\"name\" type=\"text\" placeholder=\"Enter name\" />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-sm-6\">\r\n                                    <div className=\"form-group\">\r\n                                        <span className=\"form-label\">Email</span>\r\n                                        <input defaultValue={updateBuyerdata.email} className=\"form-control\" onChange={e => onModalInputChange(e)} name=\"email\" type=\"email\" placeholder=\"Enter your email\" />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-sm-6\">\r\n                                    <div className=\"form-group\">\r\n                                        <span className=\"form-label\">Contact Details</span>\r\n                                        <input defaultValue={updateBuyerdata.mobile_no} className=\"form-control\" onChange={e => onModalInputChange(e)} name=\"mobile_no\" type=\"text\" placeholder=\"Enter your contact number\" />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-sm-6\">\r\n                                    <div className=\"form-group\">\r\n                                        <span className=\"form-label\">Occupation</span>\r\n                                        <input defaultValue={updateBuyerdata.occupation} className=\"form-control\" onChange={e => onModalInputChange(e)} name=\"occupation\" type=\"text\" placeholder=\"Enter your occupation\" />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-sm-6\">\r\n                                    <div className=\"form-group\">\r\n                                        <span className=\"form-label\">License number</span>\r\n                                        <input defaultValue={updateBuyerdata.license_number} className=\"form-control\" onChange={e => onModalInputChange(e)} name=\"license_number\" type=\"text\" placeholder=\"Enter your license number\" />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-sm-6\">\r\n                                    <div className=\"form-group\">\r\n                                        <span className=\"form-label\">Pan Card Number</span>\r\n                                        <input defaultValue={updateBuyerdata.pan} className=\"form-control\" onChange={e => onModalInputChange(e)} name=\"pan\" type=\"text\" placeholder=\"Enter your Pan Card Number\" />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-sm-6\">\r\n                                    <div className=\"form-group\">\r\n                                        <span className=\"form-label\">Adhaar card number</span>\r\n                                        <input defaultValue={updateBuyerdata.adhaar} className=\"form-control\" onChange={e => onModalInputChange(e)} name=\"adhaar\" type=\"text\" placeholder=\"Enter your adhar card number\" />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-sm-6\">\r\n                                    <div className=\"form-group\">\r\n                                        <span className=\"form-label\">Address</span>\r\n                                        <input defaultValue={updateBuyerdata.address} className=\"form-control\" onChange={e => onModalInputChange(e)} name=\"address\" type=\"text\" placeholder=\"Enter your address\" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                            <div className=\"row\">\r\n                                <div className=\"col-sm-6\">\r\n                                    <div className=\"form-group\" style={{ width: '100%' }}>\r\n                                        <p className=\"form-label\">Customer Type</p>\r\n                                        <div style={{ width: '100%', textAlign: 'center' }}>\r\n                                            <select defaultValue={updateBuyerdata.customer_type} className=\"form-control\" onChange={onModalInputChange} name=\"customer_type\" >\r\n                                                <option>Select Fuel Type</option>\r\n                                                <option value=\"Hot\">Hot</option>\r\n                                                <option value=\"Warm\">Warm</option>\r\n                                                <option value=\"Cold\">Cold</option>\r\n                                            </select>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"field\">\r\n                                    <button className=\"btn btn-primary\">Save</button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Close\r\n                    </Button>\r\n\r\n                </Modal.Footer>\r\n            </Modal>\r\n            <div className=\"col-md-12\">\r\n                <form onSubmit={(e) => { onFormSubmit(e) }} className=\"form-group\">\r\n                    <div className=\"row\">\r\n                        <h1 style={{ width: '100%', textAlign: 'center' }}>Buyer's   Registration</h1>\r\n                        <Divider style={{ marginBottom: '10px', }} />\r\n                        <div className=\"col-sm-6\">\r\n                            <div className=\"form-group\">\r\n                                <span className=\"form-label\">Purchase Name</span>\r\n                                <input className=\"form-control\" onChange={e => onInputChange(e)} name=\"name\" type=\"text\" placeholder=\"Enter name\" />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-sm-6\">\r\n                            <div className=\"form-group\">\r\n                                <span className=\"form-label\">Email</span>\r\n                                <input className=\"form-control\" onChange={e => onInputChange(e)} name=\"email\" type=\"email\" placeholder=\"Enter your email\" />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-sm-6\">\r\n                            <div className=\"form-group\">\r\n                                <span className=\"form-label\">Contact Details</span>\r\n                                <input className=\"form-control\" onChange={e => onInputChange(e)} name=\"mobile_no\" type=\"text\" placeholder=\"Enter your contact number\" />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-sm-6\">\r\n                            <div className=\"form-group\">\r\n                                <span className=\"form-label\">Occupation</span>\r\n                                <input className=\"form-control\" onChange={e => onInputChange(e)} name=\"occupation\" type=\"text\" placeholder=\"Enter your occupation\" />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-sm-6\">\r\n                            <div className=\"form-group\">\r\n                                <span className=\"form-label\">License number</span>\r\n                                <input className=\"form-control\" onChange={e => onInputChange(e)} name=\"license_number\" type=\"text\" placeholder=\"Enter your license number\" />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-sm-6\">\r\n                            <div className=\"form-group\">\r\n                                <span className=\"form-label\">Pan Card Number</span>\r\n                                <input className=\"form-control\" onChange={e => onInputChange(e)} name=\"pan\" type=\"text\" placeholder=\"Enter your Pan Card Number\" />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-sm-6\">\r\n                            <div className=\"form-group\">\r\n                                <span className=\"form-label\">Adhaar card number</span>\r\n                                <input className=\"form-control\" onChange={e => onInputChange(e)} name=\"adhaar\" type=\"text\" placeholder=\"Enter your adhar card number\" />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-sm-6\">\r\n                            <div className=\"form-group\">\r\n                                <span className=\"form-label\">Address</span>\r\n                                <input className=\"form-control\" onChange={e => onInputChange(e)} name=\"address\" type=\"text\" placeholder=\"Enter your address\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-6\">\r\n                            <div className=\"form-group\" style={{ width: '100%' }}>\r\n                                <p className=\"form-label\">Customer Type</p>\r\n                                <div style={{ width: '100%', textAlign: 'center' }}>\r\n                                    <select className=\"form-control\" onChange={onInputChange} name=\"customer_type\" >7\r\n                                        <option>Select Customer Type</option>\r\n                                        <option value=\"Hot\">Hot</option>\r\n                                        <option value=\"Warm\">Warm</option>\r\n                                        <option value=\"Cold\">Cold</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n\r\n                    <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '20px' }}>\r\n                        <button className=\"btn btn-primary\" type='submit' style={{ marginRight: '50px' }}>Save</button>\r\n                        <Link to={`/Data_Entry/Enquiry_Generation1`} className=\"btn btn-success\" style={{ marginRight: '50px' }}>\r\n                            Next\r\n                        </Link>\r\n                        <button className=\"btn btn-primary\" type='reset'>Reset</button>\r\n                    </div>\r\n                </form>\r\n            </div><br />\r\n            <div style={{ height: 500, width: '100%' }}>\r\n                <DataGrid\r\n                    rows={rows}\r\n                    columns={columns}\r\n                    pageSize={10}\r\n                    rowsPerPageOptions={[10]}\r\n                    checkboxSelection={false}\r\n                    disableSelectionOnClick\r\n                />\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","D:\\Mitharis\\my-app\\src\\Components\\NavItems\\Dashboard.js",[],"D:\\Mitharis\\my-app\\src\\Components\\NavItems\\Data_Entry\\Transaction.js",["137","138","139","140"],"import React, { useState } from 'react';\r\nimport {\r\n  useQuery,\r\n  gql,\r\n  useSubscription,\r\n  useMutation\r\n} from \"@apollo/client\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { Divider } from '@material-ui/core';\r\n\r\nconst StockQuery = gql`\r\nquery MyQuery {\r\n  stock(where: {is_sold: {_eq: false}}){\r\n    accidental\r\n    average\r\n    bank\r\n    bank_loan\r\n    vehicle_no\r\n    id\r\n  }\r\n}\r\n`\r\n\r\nconst SellerQuery = gql`\r\nquery MyQuery {\r\n  seller {\r\n    address\r\n    adhaar\r\n    email\r\n    id\r\n    licence\r\n    mobile_no\r\n    name\r\n    occupation\r\n    pan\r\n    photo\r\n    vehicle_master\r\n  }\r\n}\r\n`\r\nconst BuyerQuery = gql`\r\nquery MyQuery {\r\n  buyer {\r\n    customer_type\r\n    email\r\n    id\r\n    mobile_no\r\n    name\r\n  }\r\n}\r\n`\r\n\r\nconst TransactionQuery = gql`\r\nsubscription MySubscription {\r\n  transaction {\r\n    advance_amount\r\n    amount_paid\r\n    buyer\r\n    buyer_commission\r\n    id\r\n    pending_amount\r\n    reg_date\r\n    rto_commission\r\n    seller\r\n    seller_commission\r\n    vehicle\r\n    transaction_date\r\n    sellerBySeller {\r\n      name\r\n    }\r\n    buyerByBuyer {\r\n      name\r\n    }\r\n    stock {\r\n      vehicle_no\r\n    }\r\n  }\r\n} \r\n`\r\n\r\nconst UPDATE_TRANSACTION = gql`\r\n  mutation MyMutation2($id:Int!,$advance_amount:bigint!,$amount_paid:bigint!,$buyer:Int!,$buyer_commission:bigint!,$pending_amount:bigint!,$reg_date:date!,$rto_commission:bigint!,$seller:Int!,$seller_commission:bigint!,$transaction_date:date!,$vehicle:Int!){\r\n    update_transaction_by_pk(pk_columns: {id: $id}, _set: {advance_amount: $advance_amount, amount_paid: $amount_paid, buyer: $buyer, buyer_commission: $buyer_commission, pending_amount: $pending_amount, vehicle: $vehicle, transaction_date: $transaction_date, seller_commission: $seller_commission, seller: $seller, rto_commission: $rto_commission, reg_date: $reg_date}) {\r\n      id\r\n    }\r\n  }`\r\n\r\nconst INSERT_TRANSACTION = gql`\r\nmutation MyMutation($advance_amount:bigint!,$amount_paid:bigint!,$buyer:Int!,$buyer_commission:bigint!,$pending_amount:bigint!,$reg_date:date!,$rto_commission:bigint!,$seller:Int!,$seller_commission:bigint!,$transaction_date:date!,$vehicle:Int!){\r\n  insert_transaction_one(object: {advance_amount: $advance_amount, amount_paid: $amount_paid, buyer: $buyer, buyer_commission: $buyer_commission, pending_amount: $pending_amount, reg_date: $reg_date, rto_commission: $rto_commission, seller: $seller, seller_commission: $seller_commission, transaction_date: $transaction_date, vehicle: $vehicle}) {\r\n    id\r\n  }\r\n}\r\n`\r\nconst DELETE_TRANSACTION = gql`\r\nmutation MyMutation($id: Int!) {\r\n  delete_transaction_by_pk(id: $id) {\r\n    id\r\n  }\r\n}\r\n  `\r\n\r\nconst UPDATE_STOCK=gql`\r\nmutation MyMutation($id: Int!, $selling_price: bigint!, $buyer: Int!, $is_sold: Boolean) {\r\n  update_stock_by_pk(pk_columns: {id: $id}, _set: {selling_price: $selling_price, buyer: $buyer, is_sold: $is_sold}) {\r\n    id\r\n  }\r\n}\r\n\r\n`\r\n\r\n\r\nfunction Transaction() {\r\n  const [showModal, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  const [transaction, setTransaction] = useState({\r\n    seller: \"\",\r\n    buyer: \"\",\r\n    seller_commission: \"\",\r\n    buyer_commission: \"\",\r\n    advance_amount: \"\",\r\n    amount_paid: \"\",\r\n    pending_amount: \"\",\r\n    rto_commission: \"\",\r\n    reg_date: \"\",\r\n    transaction_date: \"\",\r\n    vehicle: \"\"\r\n  })\r\n  const [modalTransaction, setModalTransaction] = useState({\r\n    id: \"\",\r\n    seller: \"\",\r\n    buyer: \"\",\r\n    seller_commission: \"\",\r\n    buyer_commission: \"\",\r\n    advance_amount: \"\",\r\n    amount_paid: \"\",\r\n    pending_amount: \"\",\r\n    rto_commission: \"\",\r\n    reg_date: \"\",\r\n    transaction_date: \"\",\r\n    vehicle: \"\"\r\n  })\r\n\r\n  const onInputChange = (e) => {\r\n    setTransaction({ ...transaction, [e.target.name]: e.target.value })\r\n  }\r\n  const onModalInputChange = (e) => {\r\n    setModalTransaction({ ...modalTransaction, [e.target.name]: e.target.value })\r\n    console.log(modalTransaction)\r\n  }\r\n\r\n  const onFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(modalTransaction)\r\n    insertTransactionData({ variables: { seller: transaction.seller, buyer: transaction.buyer, seller_commission: transaction.seller_commission, buyer_commission: transaction.buyer_commission, advance_amount: transaction.advance_amount, amount_paid: transaction.amount_paid, pending_amount: transaction.pending_amount, rto_commission: transaction.rto_commission, reg_date: transaction.reg_date, transaction_date: transaction.transaction_date, vehicle: transaction.vehicle } });\r\n    updateStock({variables:{id:transaction.vehicle,is_sold:true,buyer:transaction.buyer,selling_price:transaction.amount_paid}})\r\n  }\r\n  const onModalFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(e.target[0].value);\r\n    updateTransactionData({ variables: { id: modalTransaction.id, seller: modalTransaction.seller, buyer: modalTransaction.buyer, seller_commission: modalTransaction.seller_commission, buyer_commission: modalTransaction.buyer_commission, advance_amount: modalTransaction.advance_amount, amount_paid: modalTransaction.amount_paid, pending_amount: modalTransaction.pending_amount, rto_commission: modalTransaction.rto_commission, reg_date: modalTransaction.reg_date, transaction_date: modalTransaction.transaction_date, vehicle: modalTransaction.vehicle } });\r\n    handleClose();\r\n  }\r\n  const editTransaction = (transaction_data) => {\r\n    setModalTransaction({\r\n      id: transaction_data.id,\r\n      seller: transaction_data.seller,\r\n      buyer: transaction_data.buyer,\r\n      seller_commission: transaction_data.seller_commission,\r\n      buyer_commission: transaction_data.buyer_commission,\r\n      advance_amount: transaction_data.advance_amount,\r\n      amount_paid: transaction_data.amount_paid,\r\n      pending_amount: transaction_data.pending_amount,\r\n      rto_commission: transaction_data.rto_commission,\r\n      reg_date: transaction_data.reg_date,\r\n      transaction_date: transaction_data.transaction_date,\r\n      vehicle: transaction_data.vehicle\r\n    })\r\n    handleShow();\r\n  }\r\n  const deleteTransaction = (id) => {\r\n    console.log(id);\r\n    deleteTransactionData({ variables: { id: id } })\r\n  }\r\n  const [deleteTransactionData, { deletedData }] = useMutation(DELETE_TRANSACTION);\r\n  const [updateTransactionData, { updatedData }] = useMutation(UPDATE_TRANSACTION);\r\n  const [insertTransactionData, { transactionData }] = useMutation(INSERT_TRANSACTION);\r\n  const [updateStock, { updatedStockData }] = useMutation(UPDATE_STOCK);\r\n  const stock = useQuery(StockQuery);\r\n  const seller = useQuery(SellerQuery);\r\n  const buyer = useQuery(BuyerQuery);\r\n  const { loading, error, data } = useSubscription(TransactionQuery);\r\n  if (loading || stock.loading || seller.loading || buyer.loading) return <div style={{ width: \"100%\", marginTop: '25%', textAlign: 'center' }}><CircularProgress /></div>;\r\n  if (error) return `Error! ${error.message}`;\r\n  if (stock.error) return `Error1! ${stock.error.message}`;\r\n\r\n  const columns = [\r\n    {\r\n      field: 'id',\r\n      headerName: 'ID',\r\n      width: 150,\r\n      hide: false,\r\n    },\r\n    {\r\n      field: \"seller\",\r\n      headerName: \"Seller Name\",\r\n      width: 160,\r\n      valueGetter: (params) => {\r\n        return params.row.sellerBySeller.name;\r\n      }\r\n    }\r\n    ,\r\n    {\r\n      field: \"buyer\",\r\n      headerName: \"Buyer Name\",\r\n      width: 160,\r\n      valueGetter: (params) => {\r\n        //console.log({ params });\r\n        let result = [];\r\n        if (params.row.buyerByBuyer) {\r\n          if (params.row.buyerByBuyer) {\r\n            result.push(params.row.buyerByBuyer.name);\r\n          }\r\n\r\n        } else {\r\n          result = [\"Unknown\"];\r\n        }\r\n        return result.join(\", \");\r\n      }\r\n    },\r\n    {\r\n      field: 'seller_commission',\r\n      headerName: 'Seller Commission',\r\n      width: 150,\r\n      editable: false,\r\n    },\r\n    {\r\n      field: 'buyer_commission',\r\n      headerName: 'Buyer Commission',\r\n      width: 150,\r\n      editable: false,\r\n    },\r\n    {\r\n      field: 'advance_amount',\r\n      headerName: 'Advance Amount',\r\n      width: 150,\r\n      editable: false,\r\n    },\r\n    {\r\n      field: 'amount_paid',\r\n      headerName: 'Amount Paid',\r\n      width: 150,\r\n      editable: false,\r\n    },\r\n    {\r\n      field: 'pending_amount',\r\n      headerName: 'Pending Amount',\r\n      width: 150,\r\n      editable: false,\r\n    },\r\n\r\n    {\r\n      field: 'rto_commission',\r\n      headerName: 'RTO Commission',\r\n      width: 150,\r\n      editable: false,\r\n    },\r\n    {\r\n      field: 'transaction_date',\r\n      headerName: 'Transaction Date',\r\n      width: 150,\r\n      editable: false,\r\n    },\r\n    {\r\n      field: 'reg_date',\r\n      headerName: 'Registered Date',\r\n      width: 150,\r\n      editable: false,\r\n    },\r\n    {\r\n      field: \"vehicle\",\r\n      headerName: \"Vehicle No\",\r\n      width: 160,\r\n      valueGetter: (params) => {\r\n        //console.log({ params });\r\n        let result = [];\r\n        if (params.row.stock) {\r\n          if (params.row.stock) {\r\n            result.push(params.row.stock.vehicle_no);\r\n          }\r\n\r\n        } else {\r\n          result = [\"Unknown\"];\r\n        }\r\n        return result.join(\", \");\r\n      }\r\n    },\r\n    {\r\n      field: 'action',\r\n      headerName: 'Action',\r\n      width: 300,\r\n      renderCell: (params) => {\r\n        return (\r\n          <div className=\"\">\r\n            <button data-toggle=\"tooltip\" title=\"Edit\" type=\"button\" className=\"btn btn-warning\" onClick={() => { editTransaction(params.row) }} ><i className=\"fa fa-pencil\"></i></button>\r\n            <button data-toggle=\"tooltip\" title=\"Delete\" onClick={() => { deleteTransaction(params.row.id) }} style={{ marginLeft: '20%' }} className=\"btn btn-danger\"><i className=\"fa fa-trash\"></i></button>\r\n\r\n          </div>\r\n        );\r\n      }\r\n    },\r\n  ];\r\n  //console.log(stock.data.stock);\r\n  //console.log(data.transaction);\r\n  const rows = data.transaction;\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Modal show={showModal} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Modal heading</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"col-md-6\">\r\n            <form className=\"form-group\" onSubmit={e => onModalFormSubmit(e)}>\r\n              <div className=\"field\">\r\n                <label>Transaction Id</label>\r\n                <input onChange={(e) => { onModalInputChange(e) }} defaultValue={modalTransaction.id} className=\"form-control\" name=\"id\" type=\"text\" />\r\n              </div>\r\n              <div className=\"field\">\r\n                <label>Seller</label>\r\n                {/* <input onChange={(e) => { onModalInputChange(e) }} defaultValue={modalTransaction.seller} className=\"form-control\" name=\"seller\" type=\"text\" /> */}\r\n                <select defaultValue={modalTransaction.seller} onChange={(e) => onModalInputChange(e)} className=\"form-control\" name=\"seller\">\r\n                <option>Select Seller</option>\r\n                {seller.data.seller.map(sellerdata => (\r\n                  <option key={sellerdata.id} value={sellerdata.id}>{sellerdata.name}</option>\r\n                ))}  \r\n              </select>\r\n              </div>\r\n              <div className=\"field\">\r\n                <label>Buyer</label>\r\n                {/* <input onChange={(e) => { onModalInputChange(e) }} defaultValue={modalTransaction.buyer} className=\"form-control\" name=\"buyer\" type=\"text\" /> */}\r\n                <select defaultValue={modalTransaction.buyer} onChange={(e) => onModalInputChange(e)} className=\"form-control\" name=\"buyer\">\r\n                <option>Select Buyer</option>\r\n                {buyer.data.buyer.map(buyerdata => (\r\n                  <option key={buyerdata.id} value={buyerdata.id}>{buyerdata.name}</option>\r\n                ))}  \r\n              </select>\r\n              </div>\r\n              <div className=\"field\">\r\n                <label>Seller Commission</label>\r\n                <input onChange={(e) => { onModalInputChange(e) }} defaultValue={modalTransaction.seller_commission} className=\"form-control\" name=\"seller_commission\" type=\"text\" />\r\n              </div>\r\n              <div className=\"field\">\r\n                <label>Buyer Commission</label>\r\n                <input onChange={(e) => { onModalInputChange(e) }} defaultValue={modalTransaction.buyer_commission} className=\"form-control\" name=\"buyer_commission\" type=\"text\" />\r\n              </div>\r\n              <div className=\"field\">\r\n                <label>Advance Amount</label>\r\n                <input onChange={(e) => { onModalInputChange(e) }} defaultValue={modalTransaction.advance_amount} className=\"form-control\" name=\"advance_amount\" type=\"text\" />\r\n              </div>\r\n              <div className=\"field\">\r\n                <label>Amount Paid</label>\r\n                <input onChange={(e) => { onModalInputChange(e) }} defaultValue={modalTransaction.amount_paid} className=\"form-control\" name=\"amount_paid\" type=\"text\" />\r\n              </div>\r\n              <div className=\"field\">\r\n                <label>Pending Amount</label>\r\n                <input onChange={(e) => { onModalInputChange(e) }} defaultValue={modalTransaction.pending_amount} className=\"form-control\" name=\"pending_amount\" type=\"text\" />\r\n              </div>\r\n\r\n              <div className=\"field\">\r\n                <label>RTO Commission</label>\r\n                <input onChange={(e) => { onModalInputChange(e) }} defaultValue={modalTransaction.rto_commission} className=\"form-control\" name=\"rto_commission\" type=\"text\" />\r\n              </div>\r\n              <div className=\"field\">\r\n                <label>Registered Date</label>\r\n                <input onChange={(e) => { onModalInputChange(e) }} defaultValue={modalTransaction.reg_date} className=\"form-control\" name=\"reg_date\" type=\"text\" />\r\n              </div>\r\n              <div className=\"field\">\r\n                <label>Transaction Date</label>\r\n                <input onChange={(e) => { onModalInputChange(e) }} defaultValue={modalTransaction.transaction_date} className=\"form-control\" name=\"transaction_date\" type=\"text\" />\r\n              </div>\r\n              <div className=\"field\">\r\n                <label>Vehicle</label>\r\n                <select defaultValue={modalTransaction.vehicle} onChange={(e) => { onModalInputChange(e) }} className=\"form-control\" name=\"vehicle\">\r\n                  <option>Select Vehicle</option>\r\n                  {stock.data.stock.map(vehicle => (\r\n          \r\n                    <option key={vehicle.id} value={vehicle.id}>{vehicle.vehicle_no}</option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n              <div className=\"field\">\r\n                <button className=\"btn btn-primary\">Save</button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n\r\n        </Modal.Footer>\r\n      </Modal>\r\n      <div className=\"col-md-12\">\r\n        <form onSubmit={(e) => { onFormSubmit(e) }} className=\"form-group\">\r\n          <div className=\"row\">\r\n\r\n            <h1 style={{ width: '100%', textAlign: 'center' }}>Transaction</h1>\r\n            <Divider style={{ marginBottom: '10px', }} />\r\n            <div className=\"field col-md-6\">\r\n              <label>Seller</label>\r\n              <select onChange={e => onInputChange(e)} className=\"form-control\" name=\"seller\">\r\n                <option>Select Seller</option>\r\n                {seller.data.seller.map(seller => (\r\n                  <option key={seller.id} value={seller.id}>{seller.name}</option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            <div className=\"field col-md-6\">\r\n              <label>Buyer</label>\r\n              <select onChange={e => onInputChange(e)} className=\"form-control\" name=\"buyer\">\r\n                <option>Select Buyer</option>\r\n                {buyer.data.buyer.map(buyer => (\r\n                  <option key={buyer.id} value={buyer.id}>{buyer.name}</option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"field col-md-6\">\r\n              <label>Seller Commission</label>\r\n              <input onChange={e => onInputChange(e)} className=\"form-control\" name=\"seller_commission\" type=\"text\" />\r\n            </div>\r\n            <div className=\"field col-md-6\">\r\n              <label>Buyer Commission</label>\r\n              <input onChange={e => onInputChange(e)} className=\"form-control\" name=\"buyer_commission\" type=\"text\" />\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"field col-md-6\">\r\n              <label>Advance Amount</label>\r\n              <input onChange={e => onInputChange(e)} className=\"form-control\" name=\"advance_amount\" type=\"text\" />\r\n            </div>\r\n            <div className=\"field col-md-6\">\r\n              <label>Amount Paid</label>\r\n              <input onChange={e => onInputChange(e)} className=\"form-control\" name=\"amount_paid\" type=\"text\" />\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"field col-md-6\">\r\n              <label>Pending Amount</label>\r\n              <input onChange={e => onInputChange(e)} className=\"form-control\" name=\"pending_amount\" type=\"text\" />\r\n            </div>\r\n\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"field col-md-6\">\r\n              <label>RTO Commission</label>\r\n              <input onChange={e => onInputChange(e)} className=\"form-control\" name=\"rto_commission\" type=\"text\" />\r\n            </div>\r\n            <div className=\"field col-md-6\">\r\n              <label>Registered Date</label>\r\n              <input onChange={e => onInputChange(e)} className=\"form-control\" name=\"reg_date\" type=\"date\" />\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"field col-md-6\">\r\n              <label>Transaction Date</label>\r\n              <input onChange={e => onInputChange(e)} className=\"form-control\" name=\"transaction_date\" type=\"date\" />\r\n            </div>\r\n            <div className=\"field col-md-6\">\r\n              <label>Vehicle</label>\r\n\r\n              <select onChange={e => onInputChange(e)} className=\"form-control\" name=\"vehicle\">\r\n                <option>Select Vehicle</option>\r\n                {stock.data.stock.map(vehicle => (\r\n                  <option key={vehicle.id} value={vehicle.id}>{vehicle.vehicle_no}</option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '20px' }}>\r\n            <button className=\"btn btn-primary\" type='submit' style={{ marginRight: '50px' }}>Save</button>\r\n            <button className=\"btn btn-primary\" type='reset'>Reset</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      <br />\r\n      <div style={{ height: 500, width: '100%' }}>\r\n        <DataGrid\r\n          rows={rows}\r\n          columns={columns}\r\n          pageSize={10}\r\n          rowsPerPageOptions={[10]}\r\n          checkboxSelection={false}\r\n          disableSelectionOnClick\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Transaction;\r\n\r\n\r\n\r\n","D:\\Mitharis\\my-app\\src\\Components\\NavItems\\Data_Entry\\Vehicle_Registration.js",["141","142","143","144","145"],"import React, { useState } from 'react';\r\nimport {\r\n  gql,\r\n  useMutation,\r\n  useSubscription,\r\n} from \"@apollo/client\";\r\nimport { DataGrid, GridToolbar } from '@material-ui/data-grid';\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { Divider } from '@material-ui/core';\r\nimport { Switch, Route, Link } from \"react-router-dom\";\r\n\r\nconst UPDATE_VEHICLE = gql`\r\nmutation MyMutation($id: Int = 10, $address: String = \"\", $adhaar: String = \"\", $email: String = \"\", $licence: String = \"\", $mobile_no: String = \"\", $name: String = \"\", $occupation: String = \"\", $pan: String = \"\", $photo: String = \"\", $vehicle_master: Int = 10) {\r\n  update_seller_by_pk(pk_columns: {id: $id}, _set: {address: $address, adhaar: $adhaar, email: $email, licence: $licence, mobile_no: $mobile_no, name: $name, occupation: $occupation, pan: $pan, photo: $photo, vehicle_master: $vehicle_master}) {\r\n    id\r\n  }\r\n}\r\n`\r\n\r\nconst DELETE_VEHICLE = gql`\r\nmutation MyMutation($id: Int = 10) {\r\n  delete_seller_by_pk(id: $id) {\r\n    id\r\n  }\r\n}\r\n  `\r\n\r\n\r\nfunction Vehicle_Registration() {\r\n  const [showModal, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const [id, setId] = useState('');\r\n  const [passPara,setPassPara] = useState();\r\n  const INSERT_SELLER = gql`\r\n  mutation insert_seller($address: String = \"\", $adhaar: String = \"\", $licence: String = \"\", $mobile_no: String = \"\", $name: String = \"\", $occupation: String = \"\", $pan: String = \"\", $email: String = \"\") {\r\n    insert_seller(objects: {address: $address, adhaar: $adhaar, licence: $licence, mobile_no: $mobile_no, pan: $pan, name: $name, occupation: $occupation, email: $email}) {\r\n      affected_rows\r\n      returning {\r\n        id\r\n      }\r\n    }\r\n  }\r\n    `\r\n\r\n  const [insertSellersData,{insertData}] = useMutation(INSERT_SELLER);\r\n\r\n  const [seller, setSeller] = useState({\r\n    name: \"\",\r\n    mobile_no: \"\",\r\n    address: \"\",\r\n    adhaar: \"\",\r\n    pan: \"\",\r\n    occupation: \"\",\r\n    licence: \"\",\r\n    email: \"\",\r\n  })\r\n\r\n  const onInputChange = (e) => {\r\n    setSeller({ ...seller, [e.target.name]: e.target.value })\r\n  }\r\n\r\n  const onFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    insertSellersData({ variables: { address: seller.address, adhaar: seller.adhaar, licence: seller.licence, mobile_no: seller.mobile_no, pan: seller.pan, name: seller.name, occupation: seller.occupation, email: seller.email } })\r\n    .then((inserted)=>{\r\n      console.log(inserted.data.insert_seller.returning[0].id);\r\n      setPassPara(inserted.data.insert_seller.returning[0].id)\r\n    })\r\n  }\r\n\r\n  const [modalseller, setModalSeller] = useState({\r\n    name: \"\",\r\n    mobile_no: \"\",\r\n    address: \"\",\r\n    adhaar: \"\",\r\n    pan: \"\",\r\n    occupation: \"\",\r\n    licence: \"\",\r\n    email: \"\",\r\n  })\r\n\r\n  const onModalInputChange = (e) => {\r\n    setModalSeller({ ...modalseller, [e.target.name]: e.target.value })\r\n    console.log(modalseller)\r\n  }\r\n\r\n  const deleteVehicle = (id) => {\r\n    console.log(id);\r\n    deleteVehicleData({ variables: { id: id } })\r\n  }\r\n\r\n  const onModalFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(modalseller);\r\n    updateVehicleData({ variables: { id: id, address: modalseller.address, adhaar: modalseller.adhaar, licence: modalseller.licence, mobile_no: modalseller.mobile_no, pan: modalseller.pan, name: modalseller.name, occupation: modalseller.occupation, email: modalseller.email } });\r\n    handleClose();\r\n  }\r\n  const editVehicle = (row) => {\r\n    setModalSeller({\r\n      name: row.name,\r\n      mobile_no: row.mobile_no,\r\n      address: row.address,\r\n      adhaar: row.adhaar,\r\n      pan: row.pan,\r\n      occupation: row.occupation,\r\n      licence: row.licence,\r\n      email: row.email,\r\n    });\r\n    setId(row.id);\r\n\r\n    handleShow();\r\n  }\r\n  const [updateVehicleData] = useMutation(UPDATE_VEHICLE);\r\n\r\n  const [deleteVehicleData] = useMutation(DELETE_VEHICLE);\r\n\r\n  const SellerQuery = gql`\r\n  subscription SellerSubscription {\r\n    seller(distinct_on: id) {\r\n      address\r\n      adhaar\r\n      email\r\n      licence\r\n      id\r\n      mobile_no\r\n      name\r\n      occupation\r\n      pan\r\n    }\r\n  }\r\n    `\r\n\r\n  const { loading, error, data } = useSubscription(SellerQuery);\r\n\r\n  if (loading) return <div style={{ width: \"100%\", marginTop: '25%', textAlign: 'center' }}><CircularProgress /></div>;\r\n  if (error) return `Error! ${error.message}`;\r\n\r\n  const rows = data.seller;\r\n\r\n  const columns = [\r\n    {\r\n      field: 'id',\r\n      headerName: 'ID',\r\n      width: 150,\r\n      hide: false,\r\n    },\r\n    {\r\n      field: 'name',\r\n      headerName: 'Name',\r\n      width: 150,\r\n      editable: false,\r\n    },\r\n    {\r\n      field: 'mobile_no',\r\n      headerName: 'Mobile No.',\r\n      width: 150,\r\n      editable: false,\r\n    },\r\n\r\n    {\r\n      field: 'address',\r\n      headerName: 'Address',\r\n      Width: 250,\r\n      flex: 1,\r\n      editable: false,\r\n    },\r\n\r\n    // {\r\n    //   field: 'pan',\r\n    //   headerName: 'Pan Card Number',\r\n    //   width: 150,\r\n    //   editable: false,\r\n    // },\r\n\r\n    // {\r\n    //   field: 'occupation',\r\n    //   headerName: 'Occupation',\r\n    //   width: 150,\r\n    //   editable: false,\r\n    // },\r\n\r\n    // {\r\n    //   field: 'licence',\r\n    //   headerName: 'Driving Licence Number',\r\n    //   width: 150,\r\n    //   editable: false,\r\n    // },\r\n\r\n    {\r\n      field: 'email',\r\n      headerName: 'Email',\r\n      width: 150,\r\n      editable: false,\r\n    },\r\n\r\n\r\n    // {\r\n    //   field: 'adhaar',\r\n    //   headerName: 'Adhaar Card Number',\r\n    //   width: 150,\r\n    //   editable: false,\r\n    // },\r\n\r\n\r\n    {\r\n      field: 'action',\r\n      headerName: 'Action',\r\n      width: 200,\r\n      renderCell: (params) => {\r\n        return (\r\n          <div className=\"\" style={{ width: \"100%\", textAlign: 'center', margin: '0 40px' }}>\r\n            <button type=\"button\" className=\"btn btn-warning\" data-toggle=\"tooltip\" title=\"Edit\" onClick={() => { editVehicle(params.row) }} ><i className=\"fa fa-pencil\"></i></button>\r\n            <button style={{ marginLeft: '20%' }} className=\"btn btn-danger\" data-toggle=\"tooltip\" title=\"Delete\" onClick={() => { deleteVehicle(params.row.id) }}><i className=\"fa fa-trash\"></i></button>\r\n\r\n          </div>\r\n        );\r\n      }\r\n    },\r\n  ];\r\n  //console.log(data3);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Modal show={showModal} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Modal heading</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"col-md-12\">\r\n            <form className=\"form-group\" onSubmit={(e) => { onModalFormSubmit(e) }}>\r\n              <div className=\"row\">\r\n                <div className=\"field col-md-6\">\r\n                  <label>Seller Name</label>\r\n                  <input defaultValue={modalseller.name} onChange={onModalInputChange} className=\"form-control\" name=\"name\" type=\"text\" placeholder='Enter Your Name' required />\r\n                </div>\r\n\r\n                <div className=\"field col-md-6\">\r\n                  <label>Occupation</label>\r\n                  <input defaultValue={modalseller.occupation} onChange={onModalInputChange} className=\"form-control\" name=\"occupation\" type=\"text\" placeholder='Enter Your Occupation' required />\r\n                </div>\r\n              </div>\r\n              <div className=\"row\">\r\n                <div className=\"field col-md-6\">\r\n                  <label>Contact Details</label>\r\n                  <div style={{ display: 'flex' }}>\r\n                    <input defaultValue={modalseller.mobile_no} onChange={onModalInputChange} className=\"form-control\" name=\"mobile_no\" type=\"text\" placeholder='+91' style={{ width: '50%' }} required />\r\n                    <button className=\"btn btn-primary\" style={{ margin: '0 20px' }} type='button'>Get OTP</button>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"field col-md-6\">\r\n                  <label>Enter OTP</label>\r\n                  <input onChange={onModalInputChange} className=\"form-control\" name=\"otp\" type=\"text\" placeholder='Enter Your OTP' />\r\n                </div>\r\n              </div>\r\n              <div className=\"row\">\r\n                <div className=\"field col-md-6\">\r\n                  <label>License Number</label>\r\n                  <input defaultValue={modalseller.licence} onChange={onModalInputChange} className=\"form-control\" name=\"licence\" type=\"text\" placeholder='Enter Your License Number' required />\r\n                </div>\r\n\r\n                <div className=\"field col-md-6\">\r\n                  <label>Pan Number</label>\r\n                  <input defaultValue={modalseller.pan} onChange={onModalInputChange} className=\"form-control\" name=\"pan\" type=\"text\" placeholder='Enter Your Pan Number' required />\r\n                </div>\r\n              </div>\r\n              <div className=\"row\">\r\n                <div className=\"field col-md-6\">\r\n                  <label>Email</label>\r\n                  <input defaultValue={modalseller.email} onChange={onModalInputChange} className=\"form-control\" name=\"email\" type=\"text\" placeholder='Enter Your Email' required />\r\n                </div>\r\n\r\n                <div className=\"field col-md-6\">\r\n                  <label>Adhaar Number</label>\r\n                  <input defaultValue={modalseller.adhaar} onChange={onModalInputChange} className=\"form-control\" name=\"adhaar\" type=\"text\" placeholder='Enter Your Adhar Number' required />\r\n                </div>\r\n              </div>\r\n              <div className=\"row\">\r\n                <div className=\"field col-md-6\">\r\n                  <label>Address</label>\r\n                  <input defaultValue={modalseller.address} onChange={onModalInputChange} className=\"form-control\" name=\"address\" type=\"text\" placeholder='Enter Your Address' required />\r\n                </div>\r\n              </div>\r\n              <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '20px' }}>\r\n                <button className=\"btn btn-primary\" type='submit' style={{ marginRight: '50px' }}>Save</button>\r\n                <button className=\"btn btn-primary\" type='reset'>Reset</button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n\r\n        </Modal.Footer>\r\n      </Modal>\r\n      <div className=\"col-md-12\">\r\n        <h1 style={{ width: '100%', textAlign: 'center' }}>Seller Registration</h1>\r\n        <Divider style={{ marginBottom: '10px', }} />\r\n        <form onSubmit={onFormSubmit} className=\"form-group\">\r\n          <div className=\"row\">\r\n            <div className=\"field col-md-6\">\r\n              <label>Seller Name</label>\r\n              <input onChange={onInputChange} className=\"form-control\" name=\"name\" type=\"text\" placeholder='Enter Your Name' required />\r\n            </div>\r\n\r\n            <div className=\"field col-md-6\">\r\n              <label>Occupation</label>\r\n              <input onChange={onInputChange} className=\"form-control\" name=\"occupation\" type=\"text\" placeholder='Enter Your Occupation' required />\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"field col-md-6\">\r\n              <label>Contact Details</label>\r\n              <div style={{ display: 'flex' }}>\r\n                <input onChange={onInputChange} className=\"form-control\" name=\"mobile_no\" type=\"text\" placeholder='+91' style={{ width: '50%' }} required />\r\n                <button className=\"btn btn-primary\" style={{ margin: '0 20px' }} type='button'>Get OTP</button>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"field col-md-6\">\r\n              <label>Enter OTP</label>\r\n              <input onChange={onInputChange} className=\"form-control\" name=\"otp\" type=\"text\" placeholder='Enter Your OTP' />\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"field col-md-6\">\r\n              <label>License Number</label>\r\n              <input onChange={onInputChange} className=\"form-control\" name=\"licence\" type=\"text\" placeholder='Enter Your License Number' required />\r\n            </div>\r\n\r\n            <div className=\"field col-md-6\">\r\n              <label>Pan Number</label>\r\n              <input onChange={onInputChange} className=\"form-control\" name=\"pan\" type=\"text\" placeholder='Enter Your Pan Number' required />\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"field col-md-6\">\r\n              <label>Email</label>\r\n              <input onChange={onInputChange} className=\"form-control\" name=\"email\" type=\"text\" placeholder='Enter Your Email' required />\r\n            </div>\r\n\r\n            <div className=\"field col-md-6\">\r\n              <label>Adhaar Number</label>\r\n              <input onChange={onInputChange} className=\"form-control\" name=\"adhaar\" type=\"text\" placeholder='Enter Your Adhar Number' required />\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"field col-md-6\">\r\n              <label>Address</label>\r\n              <input onChange={onInputChange} className=\"form-control\" name=\"address\" type=\"text\" placeholder='Enter Your Address' required />\r\n            </div>\r\n          </div>\r\n          <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '20px' }}>\r\n            <button className=\"btn btn-primary\" type='submit' style={{ marginRight: '50px' }}>Save</button>\r\n\r\n            <Link to={`/Data_Entry/Vehicle_Registration2`} className=\"btn btn-success\" style={{ marginRight: '50px' }}>\r\n              Next\r\n            </Link>\r\n            <button className=\"btn btn-primary\" type='reset'>Reset</button>\r\n          </div>\r\n        </form>\r\n      </div><br />\r\n      <div style={{ height: 500, width: '100%' }}>\r\n        <DataGrid\r\n          rows={rows}\r\n          columns={columns}\r\n          pageSize={10}\r\n          rowsPerPageOptions={[10]}\r\n          checkboxSelection={false}\r\n          // components={{\r\n          //   Toolbar: GridToolbar,\r\n          // }}\r\n          disableSelectionOnClick\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Vehicle_Registration;\r\n\r\n\r\n","D:\\Mitharis\\my-app\\src\\Components\\NavItems\\Data_Entry\\RTO_Agent.js",["146","147"],"import React, { useState } from 'react';\r\nimport {\r\n    gql,\r\n    useMutation,\r\n    useSubscription,\r\n    useQuery\r\n} from \"@apollo/client\";\r\nimport { DataGrid, GridToolbar } from '@material-ui/data-grid';\r\n//import { IconName } from \"react-icons/bs\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\n//import 'bootstrap/dist/css/bootstrap.css';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { Divider } from '@material-ui/core';\r\n\r\nconst PaperWorkQuery = gql`\r\nsubscription MySubscription {\r\n    paperwork {\r\n      id\r\n      payable_amount\r\n      amount_pending\r\n      amount_paid\r\n      rto_id\r\n      seller_id\r\n      sellerBySeller {\r\n        id\r\n        name\r\n      }\r\n      rto_agent_master {\r\n        rto_name\r\n      }\r\n    }\r\n  }\r\n  \r\n`\r\n\r\nconst RtoQuery = gql`\r\nquery MyQuery {\r\n    rto_agent_master {\r\n      id\r\n      rto_mobile\r\n      rto_name\r\n    }\r\n  }\r\n`\r\n\r\n\r\nconst SellerQuery = gql`\r\nquery MyQuery {\r\n  seller {\r\n    address\r\n    adhaar\r\n    email\r\n    id\r\n    licence\r\n    mobile_no\r\n    name\r\n    occupation\r\n    pan\r\n    photo\r\n    vehicle_master\r\n  }\r\n}\r\n`\r\n// const VehicleMasterByPK=gql`\r\n// query MyQuery2($id:Int!){\r\n//   vehicle_master_by_pk(id:$id){\r\n\r\n//     model\r\n//     id\r\n//     brand\r\n//   }\r\n// }\r\n// `\r\nconst UPDATE_PAPERWORK = gql`\r\nmutation MyMutation($id: Int!, $amount_paid: bigint = \"\", $amount_pending: bigint = \"\", $payable_amount: bigint = \"\", $rto_id: Int = 10, $seller_id: Int = 10) {\r\n    update_paperwork_by_pk(pk_columns: {id: $id}, _set: {amount_paid: $amount_paid, amount_pending: $amount_pending, payable_amount: $payable_amount, rto_id: $rto_id, seller_id: $seller_id}) {\r\n      id\r\n    }\r\n  }\r\n  `\r\nconst INSERT_PAPERWORK = gql`\r\nmutation MyMutation($amount_paid: bigint!, $amount_pending: bigint!, $payable_amount: bigint!, $rto_id: Int!, $seller_id: Int!,$timestamp:date!) {\r\n    insert_paperwork_one(object: {amount_paid: $amount_paid, amount_pending: $amount_pending, payable_amount: $payable_amount, rto_id: $rto_id, seller_id: $seller_id,timestamp:$timestamp}) {\r\n      id\r\n    }\r\n}  \r\n  `\r\nconst DELETE_VEHICLE = gql`\r\nmutation MyMutation($id: Int = 10) {\r\n    delete_paperwork_by_pk(id: $id) {\r\n      id\r\n    }\r\n  }\r\n  \r\n  `\r\n\r\nfunction RTO_Agent() {\r\n    var today = new Date();\r\n    var dd = String(today.getDate()).padStart(2, '0');\r\n    var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n    var yyyy = today.getFullYear();\r\n    today = yyyy + '/' + mm + '/' + dd;\r\n    const [showModal, setShow] = useState(false);\r\n    const [id, setId] = useState();\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    const [paperwork, setPaperwork] = useState({\r\n        amount_paid: '',\r\n        amount_pending: '',\r\n        payable_amount: '',\r\n        rto_id: '',\r\n        seller_id: '',\r\n    })\r\n    const [updatedPaperwork, setUpdatedPaperwork] = useState({\r\n        id: 0,\r\n        amount_paid: '',\r\n        amount_pending: '',\r\n        payable_amount: '',\r\n        rto_id: '',\r\n        seller_id: '',\r\n    })\r\n    const onInputChange = (e) => {\r\n        console.log(paperwork)\r\n        setPaperwork({ ...paperwork, [e.target.name]: e.target.value })\r\n    }\r\n    const onModalInputChange = (e) => {\r\n        setUpdatedPaperwork({ ...updatedPaperwork, [e.target.name]: e.target.value })\r\n        console.log(updatedPaperwork)\r\n    }\r\n    const onFormSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(paperwork);\r\n        insertVehicleData({\r\n            variables: {\r\n                amount_paid: paperwork.amount_paid,\r\n                amount_pending: paperwork.amount_pending,\r\n                payable_amount: paperwork.payable_amount,\r\n                rto_id: paperwork.rto_id,\r\n                seller_id: paperwork.seller_id,\r\n                timestamp: today\r\n            }\r\n        });\r\n    }\r\n    const deleteVehicle = (id) => {\r\n        console.log(id);\r\n        deleteVehicleData({ variables: { id: id } })\r\n    }\r\n    const onModalFormSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(id);\r\n        console.log(updatedPaperwork);\r\n        updatePaperwork({\r\n            variables: {\r\n                id: id,\r\n                amount_paid: updatedPaperwork.amount_paid,\r\n                amount_pending: updatedPaperwork.amount_pending,\r\n                payable_amount: updatedPaperwork.payable_amount,\r\n                rto_id: updatedPaperwork.rto_id,\r\n                seller_id: updatedPaperwork.seller_id,\r\n            }\r\n        });\r\n        handleClose();\r\n    }\r\n    const editVehicle = (row) => {\r\n        console.log(row.id);\r\n        setId(parseInt(row.id));\r\n        setUpdatedPaperwork({\r\n            id: parseInt(row.id),\r\n            amount_paid: row.amount_paid,\r\n            amount_pending: row.amount_pending,\r\n            payable_amount: row.payable_amount,\r\n            rto_id: row.rto_id,\r\n            seller_id: row.seller_id,\r\n        });\r\n        handleShow();\r\n        //loadVehicle({ variables: { id:id } });\r\n        //console.log(data3);\r\n    }\r\n    const seller = useQuery(SellerQuery);\r\n    const rto = useQuery(RtoQuery);\r\n    const [updatePaperwork] = useMutation(UPDATE_PAPERWORK);\r\n    const [insertVehicleData] = useMutation(INSERT_PAPERWORK);\r\n    const [deleteVehicleData] = useMutation(DELETE_VEHICLE);\r\n\r\n    const { loading, error, data } = useSubscription(PaperWorkQuery);\r\n    // // const [loadVehicle,{loading3,data3}] = useLazyQuery(VehicleMasterByPK,{\r\n    // //   fetchPolicy: 'network-only',\r\n    // // });\r\n\r\n\r\n    if (loading || seller.loading || rto.loading) return <div style={{ width: \"100%\", marginTop: '25%', textAlign: 'center' }}><CircularProgress /></div>;\r\n    if (error) return `Error! ${error.message}`;\r\n\r\n    //console.log(data3)\r\n    // amount_paid\r\n    // amount_pending\r\n    // payable_amount\r\n    // rto_id\r\n    // seller_id\r\n    const columns = [\r\n        {\r\n            field: 'id',\r\n            headerName: 'ID',\r\n            width: 100,\r\n            hide: false,\r\n        },\r\n        {\r\n            field: 'amount_paid',\r\n            headerName: 'Amount Paid',\r\n            width: 190,\r\n            hide: false,\r\n        },\r\n        {\r\n            field: 'amount_pending',\r\n            headerName: 'Amount Pending',\r\n            width: 190,\r\n            editable: false,\r\n        },\r\n        {\r\n            field: 'payable_amount',\r\n            headerName: 'Payable Amount',\r\n            width: 190,\r\n            editable: false,\r\n        },\r\n\r\n        // {\r\n        //     field: 'rto_id',\r\n        //     headerName: 'RTO Agent ID',\r\n        //     width: 130,\r\n        //     editable: false,\r\n        // },\r\n        {\r\n            field: \"rto_id\",\r\n            headerName: \"RTO Name\",\r\n            width: 160,\r\n            valueGetter: (params) => {\r\n                return params.row.rto_agent_master.rto_name;\r\n            }\r\n        },\r\n        {\r\n            field: 'seller_id',\r\n            headerName: 'Seller Id',\r\n            width: 150,\r\n            valueGetter: (params) => {\r\n                return params.row.sellerBySeller.name;\r\n            }\r\n        },\r\n        {\r\n            field: 'action',\r\n            headerName: 'Action',\r\n            width: 150,\r\n            renderCell: (params) => {\r\n                return (\r\n                    <div className=\"\" style={{ width: \"100%\", textAlign: 'center', margin: '0 40px' }}>\r\n                        <button type=\"button\" className=\"btn btn-warning\" onClick={() => { editVehicle(params.row) }} ><i className=\"fa fa-pencil\"></i></button>\r\n                        <button style={{ marginLeft: '20%' }} className=\"btn btn-danger\" onClick={() => { deleteVehicle(params.row.id) }}><i className=\"fa fa-trash\"></i></button>\r\n\r\n                    </div>\r\n                );\r\n            }\r\n        },\r\n    ];\r\n    const rows = data.paperwork;\r\n    //console.log(data3);\r\n    // const rows = data.vehicle_master;\r\n\r\n    // pdf generation function\r\n    const printPdf = (e) => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <Modal show={showModal} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Modal heading</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"col-md-4\">\r\n                        <form className=\"form-group\" onSubmit={(e) => { onModalFormSubmit(e) }}>\r\n                            <div className=\"field\">\r\n                                <label>Amount Paid</label>\r\n                                <input defaultValue={updatedPaperwork.amount_paid} onChange={(e) => { onModalInputChange(e) }} className=\"form-control\" name=\"amount_paid\" type=\"text\" />\r\n                            </div>\r\n                            <div className=\"field\">\r\n                                <label>Amount Pending</label>\r\n                                <input defaultValue={updatedPaperwork.amount_pending} onChange={(e) => { onModalInputChange(e) }} className=\"form-control\" name=\"amount_pending\" type=\"text\" />\r\n                            </div>\r\n                            <div className=\"field\">\r\n                                <label>Payable Amount</label>\r\n                                <input defaultValue={updatedPaperwork.payable_amount} onChange={(e) => { onModalInputChange(e) }} className=\"form-control\" name=\"payable_amount\" type=\"text\" />\r\n                            </div>\r\n                            <div className=\"field\">\r\n                                <label>RTO Agent</label>\r\n                                {/* <input defaultValue={updatedPaperwork.rto_id} onChange={(e) => { onModalInputChange(e) }} className=\"form-control\" name=\"rto_id\" type=\"text\" /> */}\r\n                                <select defaultValue={updatedPaperwork.rto_id} onChange={e => onModalInputChange(e)} className=\"form-control\" name=\"rto_id\">\r\n                                    <option>Select RTO</option>\r\n                                    {rto.data.rto_agent_master.map(rtodata => (\r\n                                        <option key={rtodata.id} value={rtodata.id}>{rtodata.rto_name}</option>\r\n                                    ))}\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"field\">\r\n                                <label>Seller</label>\r\n                                {/* <input defaultValue={updatedPaperwork.seller_id} onChange={(e) => { onModalInputChange(e) }} className=\"form-control\" name=\"seller_id\" type=\"text\" /> */}\r\n                                <select defaultValue={updatedPaperwork.seller_id} onChange={e => onModalInputChange(e)} className=\"form-control\" name=\"seller_id\">\r\n                                    <option>Select Seller</option>\r\n                                    {seller.data.seller.map(seller => (\r\n                                        <option key={seller.id} value={seller.id}>{seller.name}</option>\r\n                                    ))}\r\n                                </select>\r\n                            </div>\r\n\r\n                            <div className=\"field\">\r\n                                <button className=\"btn btn-primary\">Save</button>\r\n\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Close\r\n                    </Button>\r\n\r\n                </Modal.Footer>\r\n            </Modal>\r\n            <div className=\"col-md-12\">\r\n                <form onSubmit={(e) => { onFormSubmit(e) }} className=\"form-group\">\r\n                    <div className=\"row\">\r\n                        <h1 style={{ width: '100%', textAlign: 'center' }}>RTO Agent</h1>\r\n                        <Divider style={{ marginBottom: '10px', }} />\r\n\r\n                        <div className=\"field col-md-6\">\r\n                            <label>Seller</label>\r\n                            {/* <input onChange={e => onInputChange(e)} className=\"form-control\" name=\"seller_id\" type=\"text\" /> */}\r\n                            <select onChange={e => onInputChange(e)} className=\"form-control\" name=\"seller_id\">\r\n                                <option>Select Seller</option>\r\n                                {seller.data.seller.map(seller => (\r\n                                    <option key={seller.id} value={seller.id}>{seller.name}</option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"field col-md-6\">\r\n                            <label>Amount Pending</label>\r\n                            <input onChange={e => onInputChange(e)} className=\"form-control\" name=\"amount_pending\" type=\"text\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"field col-md-6\">\r\n                            <label>Payable Amount</label>\r\n                            <input onChange={e => onInputChange(e)} className=\"form-control\" name=\"payable_amount\" type=\"text\" />\r\n                        </div>\r\n                        <div className=\"field col-md-6\">\r\n                            <label>Amount Paid</label>\r\n                            <input onChange={e => onInputChange(e)} className=\"form-control\" name=\"amount_paid\" type=\"text\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"field col-md-6\">\r\n                            <label>RTO</label>\r\n                            {/* <input onChange={e => onInputChange(e)} className=\"form-control\" name=\"rto_id\" type=\"text\" /> */}\r\n                            <select onChange={e => onInputChange(e)} className=\"form-control\" name=\"seller_id\">\r\n                                <option>Select RTO</option>\r\n                                {rto.data.rto_agent_master.map(rtodata => (\r\n                                    <option key={rtodata.id} value={rtodata.id}>{rtodata.rto_name}</option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '20px' }}>\r\n                        <button className=\"btn btn-primary\" type='submit' style={{ marginRight: '50px' }}>Save</button>\r\n                        <button className=\"btn btn-primary\" type='reset'>Reset</button>\r\n                    </div>\r\n                </form>\r\n            </div><br />\r\n            <div style={{ height: 500, width: '100%' }}>\r\n                <DataGrid\r\n                    rows={rows}\r\n                    columns={columns}\r\n                    pageSize={10}\r\n                    rowsPerPageOptions={[10]}\r\n                    checkboxSelection={false}\r\n\r\n                    disableSelectionOnClick\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RTO_Agent;\r\n","D:\\Mitharis\\my-app\\src\\Components\\NavItems\\Data_Entry\\Stolen.js",["148","149","150","151","152","153","154"],"import React, { useState } from 'react';\r\nimport {\r\n  useQuery,\r\n  gql,\r\n  useMutation,\r\n  useSubscription,\r\n  useLazyQuery\r\n} from \"@apollo/client\";\r\nimport { Switch, Route, Link } from \"react-router-dom\";\r\nimport { DataGrid } from '@material-ui/data-grid';\r\n//import { IconName } from \"react-icons/bs\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { Divider } from '@material-ui/core';\r\n\r\n\r\nconst INSERT_STOLEN = gql`\r\nmutation MyMutation($seller: Int!, $fine: Boolean!, $criminal_record: Boolean!, $vehicle_no: String!) {\r\n    insert_stolen_one(object: {criminal_record: $criminal_record, fine: $fine, seller: $seller, vehicle_no: $vehicle_no}) {\r\n      id\r\n    }\r\n  }  \r\n`\r\nconst UPDATE_STOLEN = gql`\r\nmutation MyMutation2($id:Int!,$seller:Int!,$vehicle_no:String!,$fine:Boolean!,$criminal_record:Boolean!){\r\n    update_stolen_by_pk(pk_columns: {id: $id}, _set: {seller:$seller,vehicle_no:$vehicle_no,fine:$fine,criminal_record:$criminal_record}) {\r\n      id\r\n    }\r\n  }\r\n`\r\nconst DELETE_STOLEN = gql`\r\nmutation MyMutation($id:Int!){\r\n    delete_stolen_by_pk(id:$id) {\r\n        id\r\n    }\r\n}\r\n`\r\n\r\nconst StolenQuery = gql`\r\nsubscription MySubscription {\r\n  stolen {\r\n    sellerBySeller {\r\n      name\r\n      id\r\n    }\r\n    seller\r\n    id\r\n    fine\r\n    criminal_record\r\n    vehicle_no\r\n  }\r\n  } \r\n`\r\nconst SellerQuery = gql`\r\nquery MyQuery {\r\n  seller {\r\n    address\r\n    adhaar\r\n    email\r\n    id\r\n    licence\r\n    mobile_no\r\n    name\r\n    occupation\r\n    pan\r\n    photo\r\n    vehicle_master\r\n  }\r\n}\r\n`\r\n\r\nfunction Stolen() {\r\n  const [showModal, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  const [modalId, setModalId] = useState(\"\");\r\n  const [modalSeller, setModalSeller] = useState(\"\");\r\n  const [modalVehicle_no, setModalVehicle_no] = useState(\"\");\r\n  const [modalFine, setModalFine] = useState(false);\r\n  const [modalCriminal_record, setModalCriminal_record] = useState(false);\r\n  const [seller, setSeller] = useState(\"\");\r\n  const [vehicle_no, setVehicle_no] = useState(\"\");\r\n  const [fine, setFine] = useState(false);\r\n  const [criminal_record, setCriminal_record] = useState(false);\r\n  const onSellerChange = (e) => {\r\n    setSeller(e.target.value)\r\n  }\r\n  const onVehicle_noChange = (e) => {\r\n    setVehicle_no(e.target.value)\r\n  }\r\n  const onFineChange = (e) => {\r\n    setFine(e.target.checked)\r\n  }\r\n  const onCriminal_recordChange = (e) => {\r\n    setCriminal_record(e.target.checked)\r\n  }\r\n  const onFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    insertStolen({ variables: { seller: seller, vehicle_no: vehicle_no, fine: fine, criminal_record: criminal_record } });\r\n  }\r\n  const [insertStolen, { stolenData }] = useMutation(INSERT_STOLEN);\r\n  const [updateStolen, { updatedData }] = useMutation(UPDATE_STOLEN);\r\n  const [deleteStolen, { deleteData }] = useMutation(DELETE_STOLEN);\r\n  const sellerquery = useQuery(SellerQuery);\r\n  const { loading, error, data } = useSubscription(StolenQuery);\r\n  // const [loadVehicle,{loading3,data3}] = useLazyQuery(VehicleMasterByPK,{\r\n  //   fetchPolicy: 'network-only',\r\n  // });\r\n  const editStolen = (stolen_data) => {\r\n    setModalId(stolen_data.id)\r\n    setModalSeller(stolen_data.seller)\r\n    setModalVehicle_no(stolen_data.vehicle_no)\r\n    setModalFine(stolen_data.fine)\r\n    setModalCriminal_record(stolen_data.criminal_record)\r\n    handleShow();\r\n    //console.log(criminal_record)\r\n  }\r\n  const onModalFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    updateStolen({ variables: { id: e.target[0].value, seller: e.target[1].value, vehicle_no: e.target[2].value, fine: e.target[3].checked, criminal_record: e.target[4].checked } });\r\n    handleClose();\r\n  }\r\n  const deleteStolenData = (id) => {\r\n    deleteStolen({ variables: { id: id } })\r\n  }\r\n\r\n  if (loading || sellerquery.loading) return <div style={{ width: \"100%\", marginTop: '25%', textAlign: 'center' }}><CircularProgress /></div>;\r\n  if (error) return `Error! ${error.message}`;\r\n\r\n\r\n  console.log(data);\r\n  const rows = data.stolen;\r\n  const columns = [\r\n    {\r\n      field: 'id',\r\n      headerName: 'ID',\r\n      width: 150,\r\n      hide: false,\r\n    },\r\n    {\r\n      field: \"seller\",\r\n      headerName: \"Seller Name\",\r\n      width: 160,\r\n      valueGetter: (params) => {\r\n        return params.row.sellerBySeller.name;\r\n      }\r\n    },\r\n    {\r\n      field: 'vehicle_no',\r\n      headerName: 'Vehicle No',\r\n      width: 150,\r\n      editable: false,\r\n    },\r\n    {\r\n      field: 'fine',\r\n      headerName: 'Fine',\r\n      width: 150,\r\n      editable: false,\r\n    },\r\n    {\r\n      field: 'criminal_record',\r\n      headerName: 'Criminal Record',\r\n      width: 150,\r\n      editable: false,\r\n    },\r\n    {\r\n      field: 'action',\r\n      headerName: 'Action',\r\n      width: 300,\r\n      renderCell: (params) => {\r\n        return (\r\n          <div className=\"\">\r\n            <button data-toggle=\"tooltip\" title=\"Edit\" onClick={(e) => { editStolen(params.row) }} type=\"button\" className=\"btn btn-warning\"><i className=\"fa fa-pencil\"></i></button>\r\n            <button data-toggle=\"tooltip\" title=\"Delete\" onClick={(e) => { deleteStolenData(params.row.id) }} style={{ marginLeft: '20%' }} className=\"btn btn-danger\"><i className=\"fa fa-trash\"></i></button>\r\n\r\n          </div>\r\n        );\r\n      }\r\n    },\r\n  ];\r\n  //console.log(data3);\r\n  //const rows=data.vehicle_master;\r\n  return (\r\n    <div className=\"container\">\r\n      <Modal show={showModal} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Modal heading</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"col-md-4\">\r\n            <form className=\"form-group\" onSubmit={(e) => onModalFormSubmit(e)}>\r\n              <div className=\"field\">\r\n                <label>Stolen Id</label>\r\n                <input defaultValue={modalId} className=\"form-control\" name=\"id\" type=\"text\" />\r\n              </div>\r\n              <div className=\"field\">\r\n                <label>Seller</label>\r\n                  {/* <input defaultValue={modalSeller} className=\"form-control\" name=\"seller\" type=\"text\" /> */}\r\n                  <select defaultValue={modalSeller} className=\"form-control\" name=\"seller\">\r\n                  <option>Select Seller</option>\r\n                  {sellerquery.data.seller.map(sellerdata => (\r\n                    <option key={sellerdata.id} value={sellerdata.id}>{sellerdata.name}</option>\r\n                  ))}  \r\n                </select>\r\n              </div>\r\n              <div className=\"field\">\r\n                <label>Vehicle No</label>\r\n                <input defaultValue={modalVehicle_no} className=\"form-control\" name=\"vehicle_no\" type=\"text\" />\r\n              </div>\r\n              <div className=\"field\">\r\n                <label>Fine</label>\r\n                <input defaultChecked={modalFine} className=\"form-check-input\" name=\"fine\" type=\"checkbox\" />\r\n              </div>\r\n              <div className=\"field\">\r\n                <label>Criminal Record</label>\r\n                <input defaultChecked={modalCriminal_record} className=\"form-check-input\" name=\"criminal_record\" type=\"checkbox\" />\r\n              </div>\r\n              <div className=\"field\">\r\n                <button className=\"btn btn-primary\">Save</button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n\r\n        </Modal.Footer>\r\n      </Modal>\r\n      <div className=\"col-md-12\">\r\n        <form onSubmit={(e) => { onFormSubmit(e) }} className=\"form-group\">\r\n          <div className=\"row\">\r\n \r\n            <h1 style={{ width: '100%', textAlign: 'center' }}>Stolen</h1>\r\n            <Divider style={{ marginBottom: '10px', }} />\r\n            <div className=\"field col-md-6\">\r\n              <label>Seller</label>\r\n              <input onChange={e => onSellerChange(e)} className=\"form-control\" name=\"seller\" type=\"text\" />\r\n            </div>\r\n\r\n            <div className=\"field col-md-6\">\r\n              <label>Vehicle No</label>\r\n              <input onChange={e => onVehicle_noChange(e)} className=\"form-control\" name=\"vehicle_no\" type=\"text\" />\r\n            </div>\r\n            <div className=\"field col-md-6\">\r\n              <div className=\"form-check\">\r\n                <label>Fine</label>\r\n                <input onChange={e => onFineChange(e)} className=\"form-check-input\" name=\"fine\" type=\"checkbox\" />\r\n              </div>\r\n              <div className=\"form-check\">\r\n                <label>Criminal Record</label>\r\n                <input onChange={e => onCriminal_recordChange(e)} className=\"form-check-input\" name=\"criminal_record\" type=\"checkbox\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '20px' }}>\r\n            <button className=\"btn btn-primary\" type='submit' style={{ marginRight: '50px' }}>Save</button>\r\n            <button className=\"btn btn-primary\" type='reset'>Reset</button>\r\n          </div>\r\n        </form>\r\n      </div><br />\r\n      <div style={{ height: 500, width: '100%' }}>\r\n        <DataGrid\r\n          rows={rows}\r\n          columns={columns}\r\n          pageSize={10}\r\n          rowsPerPageOptions={[10]}\r\n          checkboxSelection={false}\r\n          disableSelectionOnClick\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Stolen;\r\n\r\n\r\n","D:\\Mitharis\\my-app\\src\\Components\\NavItems\\Reporting\\Sales_Report.js",["155","156","157","158","159","160"],"import React,{useState} from 'react';\r\nimport {\r\n    useQuery,\r\n    gql,\r\n    useSubscription,\r\n    useMutation,\r\n    useLazyQuery\r\n  } from \"@apollo/client\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport { DataGrid,GridToolbar } from '@material-ui/data-grid';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';  \r\nimport { Divider } from '@material-ui/core'; \r\nimport jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\n\r\nconst StockQuery=gql`\r\nquery MyQuery {\r\n  stock {\r\n    accidental\r\n    average\r\n    bank\r\n    bank_loan\r\n    vehicle_no\r\n    id\r\n  }\r\n}\r\n`\r\n\r\nconst SellerQuery=gql`\r\nquery MyQuery {\r\n  seller {\r\n    address\r\n    adhaar\r\n    email\r\n    id\r\n    licence\r\n    mobile_no\r\n    name\r\n    occupation\r\n    pan\r\n    photo\r\n    vehicle_master\r\n  }\r\n}\r\n`\r\nconst BuyerQuery=gql`\r\nquery MyQuery {\r\n  buyer {\r\n    customer_type\r\n    email\r\n    id\r\n    mobile_no\r\n    name\r\n  }\r\n}\r\n`\r\n\r\nconst TransactionQuery=gql`\r\nquery MyQuery($_lte: date!, $_gte: date!) {\r\n  transaction(where: {transaction_date: {_gte: $_gte,_lte:$_lte}}) {\r\n    advance_amount\r\n    amount_paid\r\n    buyer\r\n    buyer_commission\r\n    id\r\n    pending_amount\r\n    reg_date\r\n    rto_commission\r\n    seller\r\n    seller_commission\r\n    vehicle\r\n    transaction_date\r\n    sellerBySeller {\r\n      name\r\n    }\r\n    buyerByBuyer {\r\n      name\r\n    }\r\n    stock {\r\n      vehicle_no\r\n    }\r\n  }\r\n} \r\n`\r\n\r\nfunction Transaction()\r\n{   \r\n  var rows=[];\r\n  const [date,setDate]=useState({\r\n      from:\"\",\r\n      to:\"\"\r\n    });\r\n    const onInputChange=(e)=>{  \r\n      setDate({...date,[e.target.name]:e.target.value})\r\n    }\r\n    const onFormSubmit=(e)=>\r\n    {\r\n      e.preventDefault();\r\n      \r\n      getData({ variables: { _lte:date.to,_gte:date.from } })\r\n      //console.assert();\r\n    }\r\n    const stock = useQuery(StockQuery);\r\n    const seller = useQuery(SellerQuery);\r\n    const buyer = useQuery(BuyerQuery);\r\n    const [getData,{ loading, error, data }] = useLazyQuery(TransactionQuery);\r\n    if (loading || stock.loading) return <div style={{width:\"100%\",marginTop:'25%', textAlign:'center'}}><CircularProgress /></div>;\r\n    if (error) return `Error! ${error.message}`;\r\n    if (stock.error) return `Error1! ${stock.error.message}`;\r\n    \r\n    const columns = [\r\n        { \r\n            field: 'id', \r\n            headerName: 'ID', \r\n            width: 150,\r\n            hide:false, \r\n        },\r\n        {\r\n          field: \"seller\",\r\n          headerName: \"Seller Name\",\r\n          width: 160,\r\n          valueGetter: (params) => {\r\n            //console.log({ params });\r\n            let result = [];\r\n            if (params.row.sellerBySeller) {\r\n              if (params.row.sellerBySeller) {\r\n                result.push(params.row.sellerBySeller.name);\r\n              }\r\n              \r\n            } else {\r\n              result = [\"Unknown\"];\r\n            }\r\n            return result.join(\", \");\r\n          }\r\n        }\r\n        ,\r\n        {\r\n          field: \"buyer\",\r\n          headerName: \"Buyer Name\",\r\n          width: 160,\r\n          valueGetter: (params) => {\r\n            //console.log({ params });\r\n            let result = [];\r\n            if (params.row.buyerByBuyer) {\r\n              if (params.row.buyerByBuyer) {\r\n                result.push(params.row.buyerByBuyer.name);\r\n              }\r\n              \r\n            } else {\r\n              result = [\"Unknown\"];\r\n            }\r\n            return result.join(\", \");\r\n          }\r\n        },\r\n          {\r\n            field: 'advance_amount',\r\n            headerName: 'Advance Amount',\r\n            width: 150,\r\n            editable: false,\r\n          },\r\n          {\r\n            field: 'amount_paid',\r\n            headerName: 'Amount Paid',\r\n            width: 150,\r\n            editable: false,\r\n          },\r\n          {\r\n            field: 'pending_amount',\r\n            headerName: 'Pending Amount',\r\n            width: 150,\r\n            editable: false,\r\n          },\r\n        \r\n          {\r\n            field: 'rto_commission',\r\n            headerName: 'RTO Commission',\r\n            width: 150,\r\n            editable: false,\r\n          },\r\n          {\r\n            field: 'transaction_date',\r\n            headerName: 'Transaction Date',\r\n            width: 150,\r\n            editable: false,\r\n          },\r\n          {\r\n            field: 'reg_date',\r\n            headerName: 'Registered Date',\r\n            width: 150,\r\n            editable: false,\r\n          },\r\n          {\r\n            field: \"vehicle\",\r\n            headerName: \"Vehicle No\",\r\n            width: 160,\r\n            valueGetter: (params) => {\r\n              //console.log({ params });\r\n              let result = [];\r\n              if (params.row.stock) {\r\n                if (params.row.stock) {\r\n                  result.push(params.row.stock.vehicle_no);\r\n                }\r\n                \r\n              } else {\r\n                result = [\"Unknown\"];\r\n              }\r\n              return result.join(\", \");\r\n            }\r\n          },\r\n      ];\r\n      //console.log(stock.data.stock);\r\n      //const rows=data.transaction;\r\n      if(data)\r\n      {\r\n        console.log(data.transaction);\r\n        rows=data.transaction;\r\n      }\r\n      const exportPDF = () => {\r\n        const unit = \"pt\";\r\n        const size = \"A4\"; // Use A1, A2, A3 or A4\r\n        const orientation = \"portrait\"; // portrait or landscape\r\n    \r\n        const marginLeft = 40;\r\n        const doc = new jsPDF(orientation, unit, size);\r\n    \r\n        doc.setFontSize(15);\r\n    \r\n        const title = \"Sales Report\";\r\n        const headers = [[\"ID\",\"SELLER\",\"BUYER\",\"VEHICLE\",\"ADVANCE AMOUNT\",\"AMOUNT PAID\",\"PENDING AMOUNT\"]];\r\n    \r\n        const comm_data = data.transaction.map(comm=> [comm.id,comm.sellerBySeller.name,comm.buyerByBuyer.name,comm.stock.vehicle_no,comm.advance_amount,comm.amount_paid,comm.pending_amount]);\r\n    \r\n        let content = {\r\n          startY: 50,\r\n          head: headers,\r\n          body: comm_data  \r\n        };\r\n    \r\n        doc.text(title, marginLeft, 40);\r\n        doc.autoTable(content);\r\n        doc.save(\"report.pdf\")\r\n      }\r\nreturn (\r\n    <div className=\"container\">  <div className=\"col-md-12\">\r\n    <h1 style={{ width: '100%', textAlign: 'center' }}>Sales Report</h1>\r\n    <Divider />\r\n\r\n    <div className=\"field\" style={{ display: 'flex' }}>\r\n        <div style={{ marginRight: '70%', marginTop: '30px' }}>\r\n            <button onClick={() =>exportPDF()} class=\"btn btn-primary\" type='button'>Print PDF</button>\r\n        </div>\r\n    </div>\r\n    <form className=\"form-group\" onSubmit={e=>onFormSubmit(e)} style={{ marginTop: '50px' }}>\r\n        <div className=\"row\">\r\n            <div className=\"field col-md-6\">\r\n                <label>From</label>\r\n                <input className=\"form-control\" onChange={e=>{onInputChange(e)}} name=\"from\" type=\"date\" />\r\n            </div>\r\n\r\n            <div className=\"field col-md-6\">\r\n                <label>To</label>\r\n                <input className=\"form-control\" onChange={e=>{onInputChange(e)}} name=\"to\" type=\"date\" />\r\n            </div>\r\n        </div>\r\n        <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '20px' }}>\r\n            <button className=\"btn btn-primary\" type='submit' style={{ marginRight: '50px' }}>Save</button>\r\n            <button className=\"btn btn-primary\" type='reset'>Reset</button>\r\n        </div>\r\n    </form>\r\n</div><br />\r\n        <div style={{ height: 500, width: '100%' }}>\r\n            <DataGrid\r\n                rows={rows}\r\n                columns={columns}\r\n                pageSize={10}\r\n                rowsPerPageOptions={[10]}\r\n                checkboxSelection={false}\r\n                components={{\r\n                    Toolbar: GridToolbar,\r\n                  }}\r\n                disableSelectionOnClick\r\n            />\r\n        </div>\r\n    </div>\r\n)\r\n}\r\n\r\nexport default Transaction;\r\n\r\n\r\n\r\n","D:\\Mitharis\\my-app\\src\\Components\\NavItems\\Reporting\\Commision_Report.js",["161","162","163","164","165","166","167","168","169"],"import React,{useState} from 'react';\r\nimport {\r\n    useLazyQuery,\r\n    gql,\r\n    useQuery,\r\n    useSubscription,\r\n    useMutation\r\n  } from \"@apollo/client\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport { DataGrid,GridToolbar } from '@material-ui/data-grid';\r\nimport CircularProgress from '@material-ui/core/CircularProgress'; \r\nimport { Divider } from '@material-ui/core';  \r\nimport jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\n\r\nconst StockQuery=gql`\r\nquery MyQuery {\r\n  stock {\r\n    accidental\r\n    average\r\n    bank\r\n    bank_loan\r\n    vehicle_no\r\n    id\r\n  }\r\n}\r\n`\r\n\r\nconst SellerQuery=gql`\r\nquery MyQuery {\r\n  seller {\r\n    address\r\n    adhaar\r\n    email\r\n    id\r\n    licence\r\n    mobile_no\r\n    name\r\n    occupation\r\n    pan\r\n    photo\r\n    vehicle_master\r\n  }\r\n}\r\n`\r\nconst BuyerQuery=gql`\r\nquery MyQuery {\r\n  buyer {\r\n    customer_type\r\n    email\r\n    id\r\n    mobile_no\r\n    name\r\n  }\r\n}\r\n`\r\n\r\nconst TransactionQuery=gql`\r\nquery MyQuery($_lte: date!, $_gte: date!) {\r\n  transaction(where: {transaction_date: {_gte: $_gte,_lte:$_lte}}) {\r\n    advance_amount\r\n    amount_paid\r\n    buyer\r\n    buyer_commission\r\n    id\r\n    pending_amount\r\n    reg_date\r\n    rto_commission\r\n    seller\r\n    seller_commission\r\n    vehicle\r\n    transaction_date\r\n    sellerBySeller {\r\n      name\r\n    }\r\n    buyerByBuyer {\r\n      name\r\n    }\r\n    stock {\r\n      vehicle_no\r\n    }\r\n  }\r\n} \r\n`\r\n\r\nfunction Commission_Report()\r\n{   \r\n    var rows=[];\r\n    var counter=0;\r\n    const [date,setDate]=useState({\r\n      from:\"\",\r\n      to:\"\"\r\n    });\r\n    const comm_data=useState([])\r\n    const onInputChange=(e)=>{  \r\n      setDate({...date,[e.target.name]:e.target.value})\r\n    }\r\n    const onFormSubmit=(e)=>\r\n    {\r\n      e.preventDefault();\r\n      \r\n      getData({ variables: { _lte:date.to,_gte:date.from } })\r\n      //console.assert();\r\n    }\r\n    const stock = useQuery(StockQuery);\r\n    const seller = useQuery(SellerQuery);\r\n    const buyer = useQuery(BuyerQuery);\r\n  \r\n    const [getData,{ loading, error, data }] = useLazyQuery(TransactionQuery);\r\n    if (loading) return <div style={{width:\"100%\",marginTop:'25%', textAlign:'center'}}><CircularProgress /></div>;\r\n    if (error) return `Error! ${error.message}`;\r\n    \r\n    console.log(data);\r\n    \r\n    const columns = [\r\n        { \r\n            field: 'id', \r\n            headerName: 'ID', \r\n            width: 150,\r\n            hide:false, \r\n        },\r\n        {\r\n          field: \"seller\",\r\n          headerName: \"Seller Name\",\r\n          width: 160,\r\n          valueGetter: (params) => {\r\n            //console.log({ params });\r\n            let result = [];\r\n            if (params.row.sellerBySeller) {\r\n              if (params.row.sellerBySeller) {\r\n                result.push(params.row.sellerBySeller.name);\r\n              }\r\n              \r\n            } else {\r\n              result = [\"Unknown\"];\r\n            }\r\n            return result.join(\", \");\r\n          }\r\n        }\r\n        ,\r\n        {\r\n          field: \"buyer\",\r\n          headerName: \"Buyer Name\",\r\n          width: 160,\r\n          valueGetter: (params) => {\r\n            //console.log({ params });\r\n            let result = [];\r\n            if (params.row.buyerByBuyer) {\r\n              if (params.row.buyerByBuyer) {\r\n                result.push(params.row.buyerByBuyer.name);\r\n              }\r\n              \r\n            } else {\r\n              result = [\"Unknown\"];\r\n            }\r\n            return result.join(\", \");\r\n          }\r\n        },\r\n        {\r\n            field: 'seller_commission',\r\n            headerName: 'Seller Commission',\r\n            width: 150,\r\n            editable: false,\r\n          },\r\n          {\r\n            field: 'buyer_commission',\r\n            headerName: 'Buyer Commission',\r\n            width: 150,\r\n            editable: false,\r\n          },\r\n          {\r\n            field: 'rto_commission',\r\n            headerName: 'RTO Commission',\r\n            width: 150,\r\n            editable: false,\r\n          },\r\n          {\r\n            field: \"vehicle\",\r\n            headerName: \"Vehicle No\",\r\n            width: 160,\r\n            valueGetter: (params) => {\r\n              //console.log({ params });\r\n              let result = [];\r\n              if (params.row.stock) {\r\n                if (params.row.stock) {\r\n                  result.push(params.row.stock.vehicle_no);\r\n                }\r\n                \r\n              } else {\r\n                result = [\"Unknown\"];\r\n              }\r\n              return result.join(\", \");\r\n            }\r\n          },\r\n      ];\r\n      //console.log(data.transaction);\r\n      if(data)\r\n      {\r\n        console.log(data.transaction);\r\n        rows=data.transaction;\r\n      }\r\n      const exportPDF = () => {\r\n        const unit = \"pt\";\r\n        const size = \"A4\"; // Use A1, A2, A3 or A4\r\n        const orientation = \"portrait\"; // portrait or landscape\r\n    \r\n        const marginLeft = 40;\r\n        const doc = new jsPDF(orientation, unit, size);\r\n    \r\n        doc.setFontSize(15);\r\n    \r\n        const title = \"Commission Report\";\r\n        const headers = [[\"ID\",\"SELLER\",\"BUYER\",\"SELLER COMMISSION\",\"BUYER_COMMISSION\",\"RTO COMMISSION\",\"VEHICLE\"]];\r\n    \r\n        const comm_data = data.transaction.map(comm=> [comm.id,comm.sellerBySeller.name,comm.buyerByBuyer.name,comm.seller_commission,comm.buyer_commission,comm.rto_commission,comm.stock.vehicle_no]);\r\n    \r\n        let content = {\r\n          startY: 50,\r\n          head: headers,\r\n          body: comm_data  \r\n        };\r\n    \r\n        doc.text(title, marginLeft, 40);\r\n        doc.autoTable(content);\r\n        doc.save(\"report.pdf\")\r\n      }\r\nreturn (\r\n    <div className=\"container\">  \r\n    <div className=\"col-md-12\">\r\n      <h1 style={{ width: '100%', textAlign: 'center' }}>Commission Report</h1>\r\n    <Divider />\r\n\r\n    <div className=\"field\" style={{ display: 'flex' }}>\r\n        <div style={{ marginRight: '70%', marginTop: '30px' }}>\r\n            <button onClick={() =>exportPDF()} class=\"btn btn-primary\" type='button'>Print PDF</button>\r\n        </div>\r\n    </div>\r\n    <form className=\"form-group\" onSubmit={e=>onFormSubmit(e)} style={{ marginTop: '50px' }}>\r\n        <div className=\"row\">\r\n            <div className=\"field col-md-6\">\r\n                <label>From</label>\r\n                <input className=\"form-control\" onChange={e=>{onInputChange(e)}} name=\"from\" type=\"date\" />\r\n            </div>\r\n\r\n            <div className=\"field col-md-6\">\r\n                <label>To</label>\r\n                <input className=\"form-control\" onChange={e=>{onInputChange(e)}} name=\"to\" type=\"date\" />\r\n            </div>\r\n        </div>\r\n        <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '20px' }}>\r\n            <button className=\"btn btn-primary\" type='submit' style={{ marginRight: '50px' }}>Save</button>\r\n            <button className=\"btn btn-primary\" type='reset'>Reset</button>\r\n        </div>\r\n    </form>\r\n</div><br />\r\n        <div style={{ height: 500, width: '100%' }}>\r\n            <DataGrid\r\n                rows={rows}\r\n                columns={columns}\r\n                pageSize={10}\r\n                rowsPerPageOptions={[10]}\r\n                checkboxSelection={false}\r\n                components={{\r\n                    Toolbar: GridToolbar,\r\n                  }}\r\n                disableSelectionOnClick\r\n            />\r\n        </div>\r\n    </div>\r\n)\r\n}\r\n\r\nexport default Commission_Report;\r\n\r\n\r\n\r\n","D:\\Mitharis\\my-app\\src\\Components\\NavItems\\Reporting\\Insurance_Report.js",["170","171","172","173","174","175","176","177"],"import React,{useState} from 'react';\r\nimport {\r\n    useQuery,\r\n    gql,\r\n    useMutation,\r\n    useSubscription,\r\n    useLazyQuery\r\n  } from \"@apollo/client\";\r\nimport { Switch, Route, Link } from \"react-router-dom\";\r\nimport { DataGrid,GridToolbar } from '@material-ui/data-grid';\r\n//import { IconName } from \"react-icons/bs\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { Divider } from '@material-ui/core';\r\nimport jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\n\r\nconst InsuranceQuery=gql`\r\nquery MyQuery($_lte: date!, $_gte: date!) {\r\n  insurance(where: {timestamp: {_gte: $_gte, _lte: $_lte}}) {\r\n    customer\r\n    from_date\r\n    id\r\n    insurance_amount\r\n    insurance_type\r\n    to_date\r\n    vehicle_no\r\n    buyer {\r\n      id\r\n      name\r\n    }\r\n  }\r\n}\r\n`\r\nfunction Insurance_Report()\r\n{\r\n  var rows=[];\r\n  const [date,setDate]=useState({\r\n      from:\"\",\r\n      to:\"\"\r\n    });\r\n    const onInputChange=(e)=>{  \r\n      setDate({...date,[e.target.name]:e.target.value})\r\n    }\r\n    const onFormSubmit=(e)=>\r\n    {\r\n      e.preventDefault();\r\n      \r\n      getData({ variables: { _lte:date.to,_gte:date.from } })\r\n      //console.assert();\r\n    }\r\n  const [getData,{ loading, error, data }] = useLazyQuery(InsuranceQuery);\r\n    // const [loadVehicle,{loading3,data3}] = useLazyQuery(VehicleMasterByPK,{\r\n    //   fetchPolicy: 'network-only',\r\n    // });\r\n    \r\n    \r\n    if (loading) return <div style={{width:\"100%\",marginTop:'25%', textAlign:'center'}}><CircularProgress /></div>;\r\n    if (error) return `Error! ${error.message}`;\r\n    //console.log(data);\r\n    //const rows=data.stolen;\r\n    const columns = [\r\n      { \r\n          field: 'id', \r\n          headerName: 'ID', \r\n          width: 150,\r\n          hide:false, \r\n      },\r\n      {\r\n        field: 'customer',\r\n        headerName: 'Customer',\r\n        width: 150,\r\n        valueGetter: (params) => {\r\n          return params.row.buyer.name;\r\n        }\r\n      },\r\n      {\r\n        field: 'vehicle_no',\r\n        headerName: 'Vehicle No',\r\n        width: 150,\r\n        editable: false,\r\n      },\r\n      {\r\n        field: 'from_date',\r\n        headerName: 'From date',\r\n        width: 150,\r\n        editable: false,\r\n      },\r\n      {\r\n        field: 'to_date',\r\n        headerName: 'To Date',\r\n        width: 150,\r\n        editable: false,\r\n      },\r\n      {\r\n        field: 'insurance_amount',\r\n        headerName: 'Insurance Amount',\r\n        width: 150,\r\n        editable: false,\r\n      },\r\n      {\r\n        field: 'insurance_type',\r\n        headerName: 'Insurance Type',\r\n        width: 150,\r\n        editable: false,\r\n      }\r\n    ];\r\n    //console.log(data);\r\n    //const rows=data.insurance;\r\n    if(data)\r\n      {\r\n        console.log(data.insurance);\r\n        rows=data.insurance;\r\n      }\r\n      const exportPDF = () => {\r\n        const unit = \"pt\";\r\n        const size = \"A4\"; // Use A1, A2, A3 or A4\r\n        const orientation = \"portrait\"; // portrait or landscape\r\n    \r\n        const marginLeft = 40;\r\n        const doc = new jsPDF(orientation, unit, size);\r\n    \r\n        doc.setFontSize(15);\r\n    \r\n        const title = \"Insurance Report\";\r\n        const headers = [[\"ID\",\"CUSTOMER\",\"VEHICLE\",\"FROM\", \"TO\",\"INSURANCE_AMOUNT\",\"INSURANCE_TYPE\"]];\r\n    \r\n        const comm_data = data.insurance.map(comm=> [comm.id,comm.buyer.name,comm.vehicle_no,comm.from_date,comm.to_date,comm.insurance_amount,comm.insurance_type]);\r\n    \r\n        let content = {\r\n          startY: 50,\r\n          head: headers,\r\n          body: comm_data  \r\n        };\r\n    \r\n        doc.text(title, marginLeft, 40);\r\n        doc.autoTable(content);\r\n        doc.save(\"report.pdf\")\r\n      }\r\n    return(\r\n      <div className=\"container\">\r\n        \r\n          <div className=\"col-md-12\">\r\n          <h1 style={{ width: '100%', textAlign: 'center' }}>Insurance Report</h1>\r\n    <Divider />\r\n\r\n    <div className=\"field\" style={{ display: 'flex' }}>\r\n        <div style={{ marginRight: '70%', marginTop: '30px' }}>\r\n            <button onClick={() =>exportPDF()} class=\"btn btn-primary\" type='button'>Print PDF</button>\r\n        </div>\r\n    </div>\r\n    <form className=\"form-group\" onSubmit={e=>onFormSubmit(e)} style={{ marginTop: '50px' }}>\r\n        <div className=\"row\">\r\n            <div className=\"field col-md-6\">\r\n                <label>From</label>\r\n                <input className=\"form-control\" onChange={e=>{onInputChange(e)}} name=\"from\" type=\"date\" />\r\n            </div>\r\n\r\n            <div className=\"field col-md-6\">\r\n                <label>To</label>\r\n                <input className=\"form-control\" onChange={e=>{onInputChange(e)}} name=\"to\" type=\"date\" />\r\n            </div>\r\n        </div>\r\n        <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '20px' }}>\r\n            <button className=\"btn btn-primary\" type='submit' style={{ marginRight: '50px' }}>Save</button>\r\n            <button className=\"btn btn-primary\" type='reset'>Reset</button>\r\n        </div>\r\n    </form>\r\n</div><br />\r\n    <div style={{ height: 500, width: '100%' }}>\r\n      <DataGrid\r\n        rows={rows}\r\n        columns={columns}\r\n        pageSize={10}\r\n        rowsPerPageOptions={[10]}\r\n        checkboxSelection={false}\r\n        components={{\r\n            Toolbar: GridToolbar,\r\n          }}\r\n        disableSelectionOnClick\r\n      />\r\n    </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Insurance_Report;\r\n\r\n\r\n","D:\\Mitharis\\my-app\\src\\Components\\NavItems\\Reporting\\Vehicle_History.js",[],"D:\\Mitharis\\my-app\\src\\Components\\NavItems\\Reporting\\PaperWork.js",["178","179","180","181","182","183"],"import React, { useState } from 'react';\r\nimport {\r\n    gql,\r\n    useMutation,\r\n    useLazyQuery,\r\n    useSubscription,\r\n} from \"@apollo/client\";\r\nimport { DataGrid, GridToolbar } from '@material-ui/data-grid';\r\n//import { IconName } from \"react-icons/bs\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\n//import 'bootstrap/dist/css/bootstrap.css';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { Divider } from '@material-ui/core';\r\nimport jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\n\r\nconst PaperWorkQuery = gql`\r\nquery MyQuery($_lte: date!, $_gte: date!) {\r\n  paperwork(where: {timestamp: {_gte: $_gte,_lte:$_lte}}){\r\n    amount_paid\r\n    amount_pending\r\n    id\r\n    payable_amount\r\n    rto_id\r\n    rto_agent_master {\r\n      id\r\n      rto_mobile\r\n      rto_name\r\n    }\r\n    sellerBySeller {\r\n      id\r\n      name\r\n    }\r\n    seller_id\r\n    timestamp\r\n  }\r\n}\r\n`\r\n\r\n\r\nfunction PaperWork() {\r\n    var rows=[];\r\n    var counter=0;\r\n    const [date,setDate]=useState({\r\n      from:\"\",\r\n      to:\"\"\r\n    });\r\n    const onInputChange=(e)=>{  \r\n        setDate({...date,[e.target.name]:e.target.value})\r\n      }\r\n      const onFormSubmit=(e)=>\r\n      {\r\n        e.preventDefault();\r\n        \r\n        getData({ variables: { _lte:date.to,_gte:date.from } })\r\n        //console.assert();\r\n      }\r\n    const [getData,{ loading, error, data }] = useLazyQuery(PaperWorkQuery);\r\n    // // const [loadVehicle,{loading3,data3}] = useLazyQuery(VehicleMasterByPK,{\r\n    // //   fetchPolicy: 'network-only',\r\n    // // });\r\n\r\n\r\n    if (loading) return <div style={{ width: \"100%\", marginTop: '25%', textAlign: 'center' }}><CircularProgress /></div>;\r\n    if (error) return `Error! ${error.message}`;\r\n\r\n    //console.log(data3)\r\n    // amount_paid\r\n    // amount_pending\r\n    // payable_amount\r\n    // rto_id\r\n    // seller_id\r\n    const columns = [\r\n        {\r\n            field: 'id',\r\n            headerName: 'ID',\r\n            width: 100,\r\n            hide: false,\r\n        },\r\n        {\r\n            field: 'rto_id',\r\n            headerName: 'RTO Agent ID',\r\n            width: 130,\r\n            editable: false,\r\n        },\r\n        {\r\n            field: 'seller_id',\r\n            headerName: 'Seller Id',\r\n            width: 150,\r\n            editable: false,\r\n        },\r\n        {\r\n            field: 'amount_paid',\r\n            headerName: 'Amount Paid',\r\n            width: 190,\r\n            hide: false,\r\n        },\r\n        {\r\n            field: 'amount_pending',\r\n            headerName: 'Amount Pending',\r\n            width: 190,\r\n            editable: false,\r\n        },\r\n        {\r\n            field: 'payable_amount',\r\n            headerName: 'Payable Amount',\r\n            width: 190,\r\n            editable: false,\r\n        },\r\n    ];\r\n    //const rows = data.paperwork;\r\n    //console.log(data3);\r\n    // const rows = data.vehicle_master;\r\n    if(data)\r\n    {\r\n      console.log(data.paperwork);\r\n      rows=data.paperwork;\r\n    }\r\n    const exportPDF = () => {\r\n        const unit = \"pt\";\r\n        const size = \"A4\"; // Use A1, A2, A3 or A4\r\n        const orientation = \"portrait\"; // portrait or landscape\r\n    \r\n        const marginLeft = 40;\r\n        const doc = new jsPDF(orientation, unit, size);\r\n    \r\n        doc.setFontSize(15);\r\n    \r\n        const title = \"Paperwork Report\";\r\n        const headers = [[\"ID\",\"SELLER\",\"AMOUNT PENDING\",\"AMOUNT PAID\", \"AMOUNT PAYABLE\",\"RTO\"]];\r\n    \r\n        const comm_data = data.paperwork.map(comm=> [comm.id,comm.sellerBySeller.name,comm.amount_pending,comm.amount_paid,comm.payable_amount,comm.rto_agent_master.rto_name]);\r\n    \r\n        let content = {\r\n          startY: 50,\r\n          head: headers,\r\n          body: comm_data  \r\n        };\r\n    \r\n        doc.text(title, marginLeft, 40);\r\n        doc.autoTable(content);\r\n        doc.save(\"report.pdf\")\r\n      }\r\n    // pdf generation function\r\n    const printPdf = (e) => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"col-md-12\">\r\n                <h1 style={{ width: '100%', textAlign: 'center' }}>Paper Work</h1>\r\n                <Divider />\r\n\r\n                <div className=\"field\" style={{ display: 'flex' }}>\r\n                    <div style={{ marginRight: '70%', marginTop: '30px' }}>\r\n                        <button class=\"btn btn-primary\" type='button'  onClick={() =>exportPDF()}>Print PDF</button>\r\n                    </div>\r\n                </div>\r\n                <form className=\"form-group\" onSubmit={e=>onFormSubmit(e)} style={{ marginTop: '50px' }}>\r\n                    <div className=\"row\">\r\n                        <div className=\"field col-md-6\">\r\n                            <label>From</label>\r\n                            <input className=\"form-control\" onChange={e=>{onInputChange(e)}} name=\"from\" type=\"date\" />\r\n                        </div>\r\n\r\n                        <div className=\"field col-md-6\">\r\n                            <label>To</label>\r\n                            <input className=\"form-control\" onChange={e=>{onInputChange(e)}} name=\"to\" type=\"date\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '20px' }}>\r\n                        <button className=\"btn btn-primary\" type='submit' style={{ marginRight: '50px' }}>Save</button>\r\n                        <button className=\"btn btn-primary\" type='reset'>Reset</button>\r\n                    </div>\r\n                </form>\r\n            </div><br />\r\n            <div style={{ height: 500, width: '100%' }}>\r\n                <DataGrid\r\n                    rows={rows}\r\n                    columns={columns}\r\n                    pageSize={10}\r\n                    rowsPerPageOptions={[10]}\r\n                    checkboxSelection={false}\r\n                    components={{\r\n                      Toolbar: GridToolbar,\r\n                    }}\r\n                    disableSelectionOnClick\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PaperWork;\r\n","D:\\Mitharis\\my-app\\src\\Components\\NavItems\\Utilities\\Customer.js",["184","185","186","187","188","189","190","191","192"],"import React,{useState} from 'react';\r\nimport {\r\n    useQuery,\r\n    gql,\r\n    useMutation,\r\n    useSubscription,\r\n    useLazyQuery\r\n  } from \"@apollo/client\";\r\nimport { Switch, Route, Link } from \"react-router-dom\";\r\nimport { DataGrid } from '@material-ui/data-grid';\r\n//import { IconName } from \"react-icons/bs\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst BUYER=gql`\r\nquery MyQuery {\r\n    buyer {\r\n      id\r\n      name\r\n      mobile_no\r\n      email\r\n      customer_type\r\n      adhaar\r\n      address\r\n    }\r\n  }\r\n`\r\n\r\nconst SELLER=gql`\r\nquery MyQuery {\r\n    seller {\r\n      id\r\n      name\r\n      mobile_no\r\n      adhaar\r\n      address\r\n    }\r\n  }\r\n`\r\n\r\nfunction Customer()\r\n{\r\n    const { loading, error, data } = useQuery(BUYER);\r\n    const seller_data = useQuery(SELLER);\r\n    if (loading) return <div style={{width:\"100%\",marginTop:'25%', textAlign:'center'}}><CircularProgress /></div>;\r\n    if (error) return `Error! ${error.message}`;\r\n    const columns = [\r\n      { \r\n        field: 'id', \r\n        headerName: 'ID', \r\n        width: 150,\r\n        hide:false, \r\n      },\r\n      {\r\n        field: 'name',\r\n        headerName: 'Buyer Name',\r\n        width: 150,\r\n        editable: false,\r\n      },\r\n      {\r\n        field: 'mobile_no',\r\n        headerName: 'Buyer Mobile',\r\n        width: 150,\r\n        editable: false,\r\n      },\r\n      {\r\n        field: 'email',\r\n        headerName: 'Buyer Email',\r\n        width: 150,\r\n        editable: false,\r\n      },\r\n      {\r\n        field: 'customer_type',\r\n        headerName: 'Customer Type',\r\n        width: 150,\r\n        editable: false,\r\n      },\r\n      {\r\n        field: 'adhaar',\r\n        headerName: 'Adhaar',\r\n        width: 150,\r\n        editable: false,\r\n      },\r\n      {\r\n        field: 'address',\r\n        headerName: 'Address',\r\n        width: 150,\r\n        editable: false,\r\n      },\r\n    ];\r\n    const columns1 = [\r\n      { \r\n        field: 'id', \r\n        headerName: 'ID', \r\n        width: 150,\r\n        hide:false, \r\n      },\r\n      {\r\n        field: 'name',\r\n        headerName: 'Seller Name',\r\n        width: 150,\r\n        editable: false,\r\n      },\r\n      {\r\n        field: 'mobile_no',\r\n        headerName: 'Seller Mobile',\r\n        width: 150,\r\n        editable: false,\r\n      },\r\n      {\r\n        field: 'adhaar',\r\n        headerName: 'Adhaar',\r\n        width: 150,\r\n        editable: false,\r\n      },\r\n      {\r\n        field: 'address',\r\n        headerName: 'Address',\r\n        width: 150,\r\n        editable: false,\r\n      },\r\n    ];\r\n    console.log(seller_data.data.seller);\r\n    const rows=data.buyer;\r\n    const rows1=seller_data.data.seller;\r\n    return(\r\n    <div className=\"container\">\r\n        <h2>Buyer</h2>\r\n        <div style={{ height: 500, width: '100%' }}>\r\n        <DataGrid\r\n            rows={rows}\r\n            columns={columns}\r\n            pageSize={10}\r\n            rowsPerPageOptions={[10]}\r\n            checkboxSelection={false}\r\n            disableSelectionOnClick\r\n        />\r\n        </div>\r\n        <br />\r\n        <h2>Seller</h2>\r\n        <div style={{ height: 500, width: '100%' }}>\r\n        <DataGrid\r\n            rows={rows1}\r\n            columns={columns1}\r\n            pageSize={10}\r\n            rowsPerPageOptions={[10]}\r\n            checkboxSelection={false}\r\n            disableSelectionOnClick\r\n        />\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Customer;\r\n\r\n\r\n","D:\\Mitharis\\my-app\\src\\Components\\NavItems\\Utilities\\RTO_Agent_Numbers.js",["193","194","195","196","197","198","199","200"],"import React, { useState } from 'react';\r\nimport {\r\n  useQuery,\r\n  gql,\r\n  useMutation,\r\n  useSubscription,\r\n  useLazyQuery\r\n} from \"@apollo/client\";\r\nimport { Switch, Route, Link } from \"react-router-dom\";\r\nimport { DataGrid } from '@material-ui/data-grid';\r\n//import { IconName } from \"react-icons/bs\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { Divider } from '@material-ui/core';\r\n\r\nconst INSERT_RTO = gql`\r\nmutation MyMutation($rto_mobile: String!, $rto_name: String!) {\r\n    insert_rto_agent_master_one(object: {rto_mobile: $rto_mobile, rto_name: $rto_name}) {\r\n      id\r\n      rto_mobile\r\n      rto_name\r\n    }\r\n}  \r\n`\r\nconst UPDATE_RTO = gql`\r\nmutation MyMutation($id: Int!,$rto_name:String!,$rto_mobile:String!) {\r\n    update_rto_agent_master_by_pk(pk_columns: {id: $id}, _set: {rto_name:$rto_name, rto_mobile:$rto_mobile}) {\r\n      id\r\n    }\r\n  } \r\n`\r\nconst DELETE_RTO = gql`\r\nmutation MyMutation2($id: Int!) {\r\n    delete_rto_agent_master_by_pk(id: $id) {\r\n      rto_name\r\n      rto_mobile\r\n      id\r\n    }\r\n  }\r\n  \r\n`\r\n\r\nconst RtoQuery = gql`\r\nsubscription MySubscription {\r\n    rto_agent_master {\r\n      id\r\n      rto_mobile\r\n      rto_name\r\n    }\r\n  }\r\n  \r\n`\r\n\r\nfunction RTO_Agent_Numbers() {\r\n  const [showModal, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  const [rto_agent, setRto_agent] = useState({\r\n    rto_name: \"\",\r\n    rto_mobile: \"\"\r\n  });\r\n  const [modal_rto_agent, setModalRto_agent] = useState({\r\n    id: \"\",\r\n    rto_name: \"\",\r\n    rto_mobile: \"\"\r\n  });\r\n  const onInputChange = (e) => {\r\n    setRto_agent({ ...rto_agent, [e.target.name]: e.target.value })\r\n  }\r\n  const onFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    insertRTO_agentData({ variables: { rto_name: rto_agent.rto_name, rto_mobile: rto_agent.rto_mobile } })\r\n  }\r\n  const onModalInputChange = (e) => {\r\n    setModalRto_agent({ ...modal_rto_agent, [e.target.name]: e.target.value })\r\n  }\r\n  const onModalFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(modal_rto_agent.id);\r\n    updateRTO_agentData({ variables: { id: modal_rto_agent.id, rto_name: modal_rto_agent.rto_name, rto_mobile: modal_rto_agent.rto_mobile } })\r\n    handleClose();\r\n  }\r\n  const editRto = (rto_data) => {\r\n    setModalRto_agent({\r\n      id: rto_data.id,\r\n      rto_name: rto_data.rto_name,\r\n      rto_mobile: rto_data.rto_mobile\r\n    })\r\n    handleShow();\r\n  }\r\n  const deleteRto = (id) => {\r\n    deleteRTO_agentData({ variables: { id: id } })\r\n  }\r\n  const [deleteRTO_agentData, { deleteData }] = useMutation(DELETE_RTO);\r\n  const [updateRTO_agentData, { updateData }] = useMutation(UPDATE_RTO);\r\n  const [insertRTO_agentData, { insertData }] = useMutation(INSERT_RTO);\r\n  const { loading, error, data } = useSubscription(RtoQuery);\r\n  if (loading) return <div style={{ width: \"100%\", marginTop: '25%', textAlign: 'center' }}><CircularProgress /></div>;\r\n  if (error) return `Error! ${error.message}`;\r\n  const columns = [\r\n    {\r\n      field: 'id',\r\n      headerName: 'ID',\r\n      width: 150,\r\n      hide: false,\r\n    },\r\n    {\r\n      field: 'rto_name',\r\n      headerName: 'RTO Name',\r\n      width: 150,\r\n      editable: false,\r\n    },\r\n    {\r\n      field: 'rto_mobile',\r\n      headerName: 'RTO Mobile',\r\n      width: 150,\r\n      editable: false,\r\n    },\r\n    {\r\n      field: 'action',\r\n      headerName: 'Action',\r\n      width: 300,\r\n      renderCell: (params) => {\r\n        return (\r\n          <div className=\"\">\r\n            <button data-toggle=\"tooltip\" title=\"Edit\" type=\"button\" onClick={(e) => editRto(params.row)} className=\"btn btn-warning\"><i className=\"fa fa-pencil\"></i></button>\r\n            <button data-toggle=\"tooltip\" title=\"Delete\" onClick={(e) => deleteRto(params.row.id)} style={{ marginLeft: '20%' }} className=\"btn btn-danger\"><i className=\"fa fa-trash\"></i></button>\r\n\r\n          </div>\r\n        );\r\n      }\r\n    },\r\n  ];\r\n  //console.log(data);\r\n  const rows = data.rto_agent_master;\r\n  return (\r\n    <div className=\"container\">\r\n      <Modal show={showModal} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Modal heading</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"col-md-4\">\r\n            <form className=\"form-group\" onSubmit={e => { onModalFormSubmit(e) }}>\r\n              <div className=\"field\">\r\n                <label>Id</label>\r\n                <input defaultValue={modal_rto_agent.id} onChange={e => onModalInputChange(e)} className=\"form-control\" name=\"id\" type=\"text\" />\r\n              </div>\r\n              <div className=\"field\">\r\n                <label>RTO Name</label>\r\n                <input defaultValue={modal_rto_agent.rto_name} onChange={e => onModalInputChange(e)} className=\"form-control\" name=\"rto_name\" type=\"text\" />\r\n              </div>\r\n              <div className=\"field\">\r\n                <label>RTO Mobile</label>\r\n                <input defaultValue={modal_rto_agent.rto_mobile} onChange={e => onModalInputChange(e)} className=\"form-control\" name=\"rto_mobile\" type=\"text\" />\r\n              </div>\r\n              <div className=\"field\">\r\n                <button className=\"btn btn-primary\">Save</button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n\r\n        </Modal.Footer>\r\n      </Modal>\r\n      <div className=\"col-md-12\">\r\n\r\n        <h1 style={{ width: '100%', textAlign: 'center' }}>RTO Agent Numbers</h1>\r\n        <Divider style={{ marginBottom: '10px', }} />\r\n        <form className=\"form-group\" onSubmit={e => onFormSubmit(e)}>\r\n          <div className=\"row\">\r\n            <div className=\"field col-md-6\">\r\n              <label>RTO Name</label>\r\n              <input onChange={e => onInputChange(e)} className=\"form-control\" name=\"rto_name\" type=\"text\" />\r\n            </div>\r\n            <div className=\"field col-md-6\">\r\n              <label>RTO Mobile</label>\r\n              <input onChange={e => onInputChange(e)} className=\"form-control\" name=\"rto_mobile\" type=\"text\" />\r\n            </div>\r\n          </div>\r\n          <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '20px' }}>\r\n            <button className=\"btn btn-primary\" type='submit' style={{ marginRight: '50px' }}>Save</button>\r\n            <button className=\"btn btn-primary\" type='reset'>Reset</button>\r\n          </div>\r\n        </form>\r\n      </div><br />\r\n      <div style={{ height: 500, width: '100%' }}>\r\n        <DataGrid\r\n          rows={rows}\r\n          columns={columns}\r\n          pageSize={10}\r\n          rowsPerPageOptions={[10]}\r\n          checkboxSelection={false}\r\n          disableSelectionOnClick\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RTO_Agent_Numbers;\r\n\r\n\r\n","D:\\Mitharis\\my-app\\src\\Components\\NavItems\\Utilities\\Third_Party_Agent.js",["201","202","203","204","205","206","207"],"import React,{useState} from 'react';\r\nimport {\r\n    useQuery,\r\n    gql,\r\n    useMutation,\r\n    useSubscription,\r\n    useLazyQuery\r\n  } from \"@apollo/client\";\r\nimport { Switch, Route, Link } from \"react-router-dom\";\r\nimport { DataGrid } from '@material-ui/data-grid';\r\n//import { IconName } from \"react-icons/bs\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { Divider } from '@material-ui/core';\r\n\r\nconst INSERT_AGENT=gql`\r\nmutation MyMutation2($mobile: String!, $name: String!) {\r\n    insert_third_party_agent_one(object: {mobile: $mobile, name: $name}) {\r\n      id\r\n      mobile\r\n      name\r\n    }\r\n  }\r\n`\r\nconst UPDATE_AGENT=gql`\r\nmutation MyMutation($id: Int!, $mobile: String!, $name: String!) {\r\n    update_third_party_agent_by_pk(pk_columns: {id: $id}, _set: {name: $name, mobile: $mobile}) {\r\n      id\r\n      mobile\r\n      name\r\n    }\r\n  }\r\n  \r\n`\r\nconst DELETE_AGENT=gql`\r\nmutation MyMutation($id: Int!) {\r\n    delete_third_party_agent_by_pk(id: $id) {\r\n      id\r\n      mobile\r\n      name\r\n    }\r\n  }\r\n`\r\n\r\nconst AgentQuery=gql`\r\nsubscription MySubscription {\r\n    third_party_agent {\r\n      id\r\n      mobile\r\n      name\r\n    }\r\n  }\r\n`\r\n\r\nfunction Third_Party_Agent()\r\n{\r\n    const [showModal, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    const [agent,setAgent]=useState({\r\n        name:\"\",\r\n        mobile:\"\"\r\n    });\r\n    const [modalAgent,setModalAgent]=useState({\r\n        id:\"\",\r\n        name:\"\",\r\n        mobile:\"\"\r\n    });\r\n    const onInputChange=(e)=>{\r\n        setAgent({...agent,[e.target.name]:e.target.value})\r\n    }\r\n    const onFormSubmit=(e)=>{\r\n        e.preventDefault();\r\n        insertAgentData({variables:{name:agent.name,mobile:agent.mobile}})\r\n    }\r\n    const editAgent=(agent_data)=>{\r\n        setModalAgent({\r\n            id:agent_data.id,\r\n            name:agent_data.name,\r\n            mobile:agent_data.mobile\r\n        })\r\n        handleShow();\r\n    }\r\n    const onModalInputChange=(e)=>{\r\n        setModalAgent({...modalAgent,[e.target.name]:e.target.value})\r\n    }\r\n    const onModalFormSubmit=(e)=>{\r\n        e.preventDefault();\r\n        console.log(modalAgent)\r\n        updateAgentData({variables:{id:modalAgent.id,name:modalAgent.name,mobile:modalAgent.mobile}})\r\n        handleClose();\r\n        console.log(updateData);\r\n    }\r\n    const deleteAgent=(id)=>{\r\n        deleteAgentData({variables:{id:id}})\r\n    }\r\n    const [deleteAgentData,{deleteData}]=useMutation(DELETE_AGENT);\r\n    const [updateAgentData,{updateData}]=useMutation(UPDATE_AGENT);\r\n    const [insertAgentData,{insertData}]=useMutation(INSERT_AGENT);\r\n    const { loading, error, data } = useSubscription(AgentQuery);\r\n    if (loading) return <div style={{width:\"100%\",marginTop:'25%', textAlign:'center'}}><CircularProgress /></div>;\r\n    if (error) return `Error! ${error.message}`;\r\n    const columns = [\r\n      { \r\n        field: 'id', \r\n        headerName: 'ID', \r\n        width: 150,\r\n        hide:false, \r\n      },\r\n      {\r\n        field: 'name',\r\n        headerName: 'Agent Name',\r\n        width: 150,\r\n        editable: false,\r\n      },\r\n      {\r\n        field: 'mobile',\r\n        headerName: 'Agent Mobile',\r\n        width: 150,\r\n        editable: false,\r\n      },\r\n      {\r\n        field: 'action',\r\n        headerName: 'Action',\r\n        width: 300,\r\n        renderCell: (params) => {\r\n          return (\r\n            <div className=\"\">\r\n            <button data-toggle=\"tooltip\" title=\"Edit\" type=\"button\" onClick={(e)=>editAgent(params.row)} className=\"btn btn-warning\"><i className=\"fa fa-pencil\"></i></button>\r\n            <button data-toggle=\"tooltip\" title=\"Delete\" onClick={(e)=>deleteAgent(params.row.id)} className=\"btn btn-danger\" style={{marginLeft:'20%'}}><i className=\"fa fa-trash\"></i></button>\r\n            \r\n            </div>\r\n          );\r\n       }\r\n      },\r\n    ];\r\n    //console.log(data);\r\n    const rows=data.third_party_agent;\r\n    return(\r\n      <div className=\"container\">\r\n          <Modal show={showModal} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Modal heading</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n            <div className=\"col-md-4\">\r\n                <form className=\"form-group\" onSubmit={e=>onModalFormSubmit(e)}>\r\n                    <div className=\"field\">\r\n                        <label>Id</label>\r\n                        <input defaultValue={modalAgent.id} onChange={e=>onModalInputChange(e)} className=\"form-control\" name=\"id\" type=\"text\" />\r\n                    </div>\r\n                    <div className=\"field\">\r\n                        <label>Name</label>\r\n                        <input defaultValue={modalAgent.name} onChange={e=>onModalInputChange(e)} className=\"form-control\" name=\"name\" type=\"text\" />\r\n                    </div>\r\n                    <div className=\"field\">\r\n                        <label>Mobile</label>\r\n                        <input defaultValue={modalAgent.mobile} onChange={e=>onModalInputChange(e)} className=\"form-control\" name=\"mobile\" type=\"text\" />\r\n                    </div>\r\n                    <div className=\"field\">\r\n                        <button className=\"btn btn-primary\">Save</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          \r\n        </Modal.Footer>\r\n      </Modal>\r\n          <div className=\"col-md-12\">\r\n              <h1 style={{ width: '100%', textAlign: 'center' }}>Third Party Agent Numbers</h1>\r\n              <Divider style={{ marginBottom: '10px', }} />\r\n              <form className=\"form-group\" onSubmit={e=>onFormSubmit(e)}>\r\n                  <div className=\"row\">\r\n                      <div className=\"field col-md-6\">\r\n                          <label>Agent Name</label>\r\n                          <input onChange={e=>onInputChange(e)} className=\"form-control\" name=\"name\" type=\"text\" />\r\n                      </div>\r\n                      <div className=\"field col-md-6\">\r\n                          <label>Agent Mobile</label>\r\n                          <input onChange={e=>onInputChange(e)} className=\"form-control\" name=\"mobile\" type=\"text\" />\r\n                      </div>\r\n                  </div>\r\n                  <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '20px' }}>\r\n                        <button className=\"btn btn-primary\" type='submit' style={{ marginRight: '50px' }}>Save</button>\r\n                        <button className=\"btn btn-primary\" type='reset'>Reset</button>\r\n                    </div>\r\n              </form>\r\n          </div><br />\r\n    <div style={{ height: 500, width: '100%' }}>\r\n      <DataGrid\r\n        rows={rows}\r\n        columns={columns}\r\n        pageSize={10}\r\n        rowsPerPageOptions={[10]}\r\n        checkboxSelection={false}\r\n        disableSelectionOnClick\r\n      />\r\n    </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Third_Party_Agent;\r\n\r\n\r\n","D:\\Mitharis\\my-app\\src\\Components\\NavItems\\Data_Entry\\Vehicle_Master.js",["208","209","210","211","212","213","214","215"],"import React,{useState} from 'react';\r\nimport {\r\n    useQuery,\r\n    gql,\r\n    useMutation,\r\n    useSubscription,\r\n    useLazyQuery\r\n  } from \"@apollo/client\";\r\nimport { Switch, Route, Link } from \"react-router-dom\";\r\nimport { DataGrid } from '@material-ui/data-grid';\r\n//import { IconName } from \"react-icons/bs\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { Divider } from '@material-ui/core';\r\n\r\nconst VehicleMasterQuery=gql`\r\nsubscription MySubscription {\r\n    vehicle_master {\r\n      model\r\n      id\r\n      brand\r\n    }\r\n  }\r\n  `\r\n  // const VehicleMasterByPK=gql`\r\n  // query MyQuery2($id:Int!){\r\n  //   vehicle_master_by_pk(id:$id){\r\n\r\n  //     model\r\n  //     id\r\n  //     brand\r\n  //   }\r\n  // }\r\n  // `\r\n  const UPDATE_VEHICLE=gql`\r\n  mutation MyMutation2($id:Int!,$brand:String!,$model:String!){\r\n    update_vehicle_master_by_pk(pk_columns: {id: $id}, _set: {model: $model, brand: $brand}) {\r\n      brand\r\n      id\r\n      model\r\n    }\r\n  }`\r\n  const INSERT_VEHICLE=gql`\r\n  mutation MyMutation($model:String!,$brand:String!) {\r\n    insert_vehicle_master_one(object: {model: $model, brand: $brand}) {\r\n      model\r\n      id\r\n      brand\r\n    }\r\n  }\r\n  `\r\n  const DELETE_VEHICLE=gql`\r\n  mutation delete_mutation($id:Int!){\r\n    delete_vehicle_master_by_pk(id: $id) {\r\n        brand\r\n        id\r\n        model\r\n      }\r\n  }\r\n  `\r\n\r\nfunction Vehicle_Master()\r\n{\r\n    const [showModal, setShow] = useState(false);\r\n    const [vehicleId, setVehicleId] = useState();\r\n    const [vehicleBrand, setVehicleBrand] = useState();\r\n    const [vehicleModel, setVehicleModel] = useState();\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    const [cars,setCars] = useState({\r\n        brand:\"\",\r\n        model:\"\"\r\n    })\r\n    const [modalcars,setModalCars] = useState({\r\n        brand:\"\",\r\n        model:\"\"\r\n    })\r\n    const onInputChange=(e)=>{\r\n        setCars({...cars,[e.target.name]:e.target.value})\r\n    }\r\n    const onModalInputChange=(e)=>{\r\n        setModalCars({...modalcars,[e.target.name]:e.target.value})\r\n        console.log(modalcars)\r\n    }\r\n    const onFormSubmit=(e)=>{\r\n        e.preventDefault();\r\n        insertVehicleData({variables:{model:cars.model,brand:cars.brand}});\r\n    }\r\n    const deleteVehicle=(id)=>{\r\n        console.log(id);\r\n        deleteVehicleData({variables:{id:id}})\r\n    }\r\n    const onModalFormSubmit=(e)=>{\r\n      e.preventDefault();\r\n      console.log(e.target[0].value);\r\n      updateVehicleData({variables:{id:e.target[0].value,brand:e.target[1].value,model:e.target[2].value}});\r\n      handleClose();\r\n    }\r\n    const editVehicle=(id,brand,model)=>{\r\n        console.log(id);\r\n        console.log(model);\r\n        console.log(brand);\r\n        setVehicleId(id);\r\n        setVehicleBrand(brand);\r\n        setVehicleModel(model);\r\n        handleShow();\r\n        //loadVehicle({ variables: { id:id } });\r\n        //console.log(data3);\r\n    }\r\n    const [updateVehicleData,{updatedData}]=useMutation(UPDATE_VEHICLE);\r\n    const [insertVehicleData,{carsData}]=useMutation(INSERT_VEHICLE);\r\n    const [deleteVehicleData,{deletedData}]=useMutation(DELETE_VEHICLE);\r\n    \r\n    const { loading, error, data } = useSubscription(VehicleMasterQuery);\r\n    // const [loadVehicle,{loading3,data3}] = useLazyQuery(VehicleMasterByPK,{\r\n    //   fetchPolicy: 'network-only',\r\n    // });\r\n    \r\n    \r\n    if (loading) return <div style={{width:\"100%\",marginTop:'25%', textAlign:'center'}}><CircularProgress /></div>;\r\n    if (error) return `Error! ${error.message}`;\r\n    \r\n    //console.log(data3)\r\n    const columns = [\r\n      { \r\n          field: 'id', \r\n          headerName: 'ID', \r\n          width: 150,\r\n          hide:false, \r\n        },\r\n      {\r\n        field: 'brand',\r\n        headerName: 'Brand',\r\n        width: 150,\r\n        editable: false,\r\n      },\r\n      {\r\n        field: 'model',\r\n        headerName: 'Model',\r\n        width: 150,\r\n        editable: false,\r\n      },\r\n      {\r\n        field: 'action',\r\n        headerName: 'Action',\r\n        width: 300,\r\n        renderCell: (params) => {\r\n          return (\r\n            <div className=\"\">\r\n            <button data-toggle=\"tooltip\" title=\"Edit\" type=\"button\" className=\"btn btn-warning\" onClick={()=>{editVehicle(params.row.id,params.row.brand,params.row.model)}} ><i className=\"fa fa-pencil\"></i></button>\r\n            <button data-toggle=\"tooltip\" title=\"Delete\" style={{marginLeft:'20%'}} className=\"btn btn-danger\" onClick={()=>{deleteVehicle(params.row.id)}}><i className=\"fa fa-trash\"></i></button>\r\n            \r\n            </div>\r\n          );\r\n       }\r\n      },\r\n    ];\r\n    //console.log(data3);\r\n    const rows=data.vehicle_master;\r\n    return(\r\n      <div className=\"container\">\r\n        <Modal show={showModal} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Modal heading</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n            <div className=\"col-md-4\">\r\n                <form className=\"form-group\" onSubmit={(e)=>{onModalFormSubmit(e)}}>\r\n                    <div className=\"field\">\r\n                        <label>Car Id</label>\r\n                        <input defaultValue={vehicleId} onChange={(e)=>{onModalInputChange(e)}} className=\"form-control\" name=\"brand\" type=\"text\" />\r\n                    </div>\r\n                    <div className=\"field\">\r\n                        <label>Car Brand</label>\r\n                        <input defaultValue={vehicleBrand} onChange={(e)=>{onModalInputChange(e)}} className=\"form-control\" name=\"brand\" type=\"text\" />\r\n                    </div>\r\n                    <div className=\"field\">\r\n                        <label>Model</label>\r\n                        <input defaultValue={vehicleModel} onChange={(e)=>{onModalInputChange(e)}} className=\"form-control\" name=\"model\" type=\"text\" />\r\n                    </div>\r\n                    <div className=\"field\">\r\n                        <button className=\"btn btn-primary\">Save</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          \r\n        </Modal.Footer>\r\n      </Modal>\r\n          <div className=\"col-md-12\">\r\n              <h1 style={{ width: '100%', textAlign: 'center' }}>Vehicle Master</h1>\r\n              <Divider style={{ marginBottom: '10px', }} />\r\n              <form onSubmit={(e)=>{onFormSubmit(e)}} className=\"form-group\">\r\n                  <div className=\"row\">\r\n                      <div className=\"field col-md-6\">\r\n                          <label>Car Brand</label>\r\n                          <input onChange={e=>onInputChange(e)} className=\"form-control\" name=\"brand\" type=\"text\" />\r\n                      </div>\r\n\r\n                      <div className=\"field col-md-6\">\r\n                          <label>Model</label>\r\n                          <input onChange={e=>onInputChange(e)} className=\"form-control\" name=\"model\" type=\"text\" />\r\n                      </div>\r\n                  </div>\r\n                  <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '20px' }}>\r\n                        <button className=\"btn btn-primary\" type='submit' style={{ marginRight: '50px' }}>Save</button>\r\n                        <button className=\"btn btn-primary\" type='reset'>Reset</button>\r\n                    </div>\r\n              </form>\r\n          </div><br />\r\n    <div style={{ height: 500, width: '100%' }}>\r\n      <DataGrid\r\n        rows={rows}\r\n        columns={columns}\r\n        pageSize={10}\r\n        rowsPerPageOptions={[10]}\r\n        checkboxSelection={false}\r\n        disableSelectionOnClick\r\n      />\r\n    </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Vehicle_Master;\r\n\r\n\r\n","D:\\Mitharis\\my-app\\src\\Components\\NavItems\\Data_Entry\\Vehicle_Form.js",["216","217","218"],"import React, { useState } from 'react';\r\nimport {\r\n  gql,\r\n  useMutation,\r\n  useSubscription,\r\n} from \"@apollo/client\";\r\nimport { DataGrid, GridToolbar } from '@material-ui/data-grid';\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { Divider } from '@material-ui/core';\r\nimport { Switch, Route, Link } from \"react-router-dom\";\r\n\r\nconst VehicleQuery = gql`\r\nsubscription MySubscription {\r\n  vehicle(distinct_on: id) {\r\n    body_type\r\n    chess_number\r\n    color\r\n    engine_displacement\r\n    engine_number\r\n    fuel_type\r\n    id\r\n    kms_driven\r\n    make_model\r\n    number_of_owners\r\n    passing_year\r\n    varient\r\n    transmission\r\n    vehicle_number\r\n  }\r\n}\r\n\r\n  `\r\n\r\nconst UPDATE_VEHICLE = gql`\r\nmutation MyMutation($id: Int = 10, $body_type: String = \"\", $chess_number: String = \"\", $color: String = \"\", $engine_displacement: String = \"\", $engine_number: String = \"\", $fuel_type: String = \"\", $kms_driven: String = \"\", $make_model: String = \"\", $number_of_owners: Int = 10, $passing_year: String = \"\", $transmission: String = \"\", $varient: String = \"\", $vehicle_number: String = \"\") {\r\n  update_vehicle_by_pk(pk_columns: {id: $id}, _set: {body_type: $body_type, chess_number: $chess_number, color: $color, engine_displacement: $engine_displacement, engine_number: $engine_number, fuel_type: $fuel_type, kms_driven: $kms_driven, make_model: $make_model, number_of_owners: $number_of_owners, passing_year: $passing_year, transmission: $transmission, varient: $varient, vehicle_number: $vehicle_number}) {\r\n    id\r\n  }\r\n}\r\n`\r\nconst INSERT_VEHICLE = gql`\r\n  mutation MyMutation($body_type: String = \"\", $chess_number: String = \"\", $color: String = \"\", $engine_displacement: String = \"\", $engine_number: String = \"\", $fuel_type: String = \"\", $kms_driven: String = \"\", $make_model: String = \"\", $number_of_owners: Int = 10, $passing_year: String = \"\", $transmission: String = \"\", $varient: String = \"\", $vehicle_number: String = \"\") {\r\n    insert_vehicle(objects: {body_type: $body_type, chess_number: $chess_number, color: $color, engine_displacement: $engine_displacement, engine_number: $engine_number, fuel_type: $fuel_type, kms_driven: $kms_driven, vehicle_number: $vehicle_number, varient: $varient, transmission: $transmission, passing_year: $passing_year, number_of_owners: $number_of_owners, make_model: $make_model}) {\r\n      affected_rows\r\n    }\r\n  }\r\n\r\n  `\r\nconst DELETE_VEHICLE = gql`\r\nmutation MyMutation($id: Int = 10) {\r\n  delete_vehicle_by_pk(id: $id) {\r\n    id\r\n  }\r\n}\r\n  `\r\n\r\nfunction Vehicle_Registration() {\r\n  const [showModal, setShow] = useState(false);\r\n  const [id, setId] = useState();\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  const [vehicle, setVehicle] = useState({\r\n    body_type: \"\",\r\n    chess_number: '',\r\n    color: '',\r\n    engine_displacement: '',\r\n    engine_number: '',\r\n    fuel_type: '',\r\n    kms_driven: '',\r\n    vehicle_number: '',\r\n    varient: '',\r\n    transmission: '',\r\n    passing_year: '',\r\n    number_of_owners: '',\r\n    make_model: '',\r\n  })\r\n  const [updateVehicledata, setUpdateVehicleData] = useState({\r\n    body_type: \"\",\r\n    chess_number: '',\r\n    color: '',\r\n    engine_displacement: '',\r\n    engine_number: '',\r\n    fuel_type: '',\r\n    kms_driven: '',\r\n    vehicle_number: '',\r\n    varient: '',\r\n    transmission: '',\r\n    passing_year: '',\r\n    number_of_owners: '',\r\n    make_model: '',\r\n  })\r\n  const onInputChange = (e) => {\r\n    setVehicle({ ...vehicle, [e.target.name]: e.target.value })\r\n  }\r\n\r\n  const onModalInputChange = (e) => {\r\n    setUpdateVehicleData({ ...updateVehicledata, [e.target.name]: e.target.value })\r\n\r\n  }\r\n  const onFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    insertVehicleData({ variables: { body_type: vehicle.body_type, chess_number: vehicle.chess_number, color: vehicle.color, engine_displacement: vehicle.engine_displacement, engine_number: vehicle.engine_number, fuel_type: vehicle.fuel_type, kms_driven: vehicle.kms_driven, vehicle_number: vehicle.vehicle_number, varient: vehicle.varient, transmission: vehicle.transmission, passing_year: vehicle.passing_year, number_of_owners: vehicle.number_of_owners, make_model: vehicle.make_model } });\r\n  }\r\n  const deleteVehicle = (id) => {\r\n    console.log(id);\r\n    deleteVehicleData({ variables: { id: id } })\r\n  }\r\n  const onModalFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(e.target[0].value);\r\n    updateVehicleData({ variables: { id: id,  body_type: updateVehicledata.body_type, chess_number: updateVehicledata.chess_number, color: updateVehicledata.color, engine_displacement: updateVehicledata.engine_displacement, engine_number: updateVehicledata.engine_number, fuel_type: updateVehicledata.fuel_type, kms_driven: updateVehicledata.kms_driven, vehicle_number: updateVehicledata.vehicle_number, varient: updateVehicledata.varient, transmission: updateVehicledata.transmission, passing_year: updateVehicledata.passing_year, number_of_owners: updateVehicledata.number_of_owners, make_model: updateVehicledata.make_model } });\r\n    handleClose();\r\n  }\r\n  const editVehicle = (row) => {\r\n    console.log(row.id);\r\n    setId(row.id);\r\n    setUpdateVehicleData({\r\n      body_type: row.body_type, chess_number: row.chess_number, color: row.color, engine_displacement: row.engine_displacement, engine_number: row.engine_number, fuel_type: row.fuel_type, kms_driven: row.kms_driven, vehicle_number: row.vehicle_number, varient: row.varient, transmission: row.transmission, passing_year: row.passing_year, number_of_owners: row.number_of_owners, make_model: row.make_model \r\n    })\r\n    handleShow();\r\n    //loadVehicle({ variables: { id:id } });\r\n    //console.log(data3);\r\n  }\r\n  const [updateVehicleData] = useMutation(UPDATE_VEHICLE);\r\n  const [insertVehicleData] = useMutation(INSERT_VEHICLE);\r\n  const [deleteVehicleData] = useMutation(DELETE_VEHICLE);\r\n\r\n  const { loading, error, data } = useSubscription(VehicleQuery);\r\n  // const [loadVehicle,{loading3,data3}] = useLazyQuery(VehicleMasterByPK,{\r\n  //   fetchPolicy: 'network-only',\r\n  // });\r\n\r\n\r\n  if (loading) return <div style={{ width: \"100%\", marginTop: '25%', textAlign: 'center' }}><CircularProgress /></div>;\r\n  if (error) return `Error! ${error.message}`;\r\n\r\n  //console.log(data3)\r\n\r\n  // body_type: \"\", \r\n  //   chess_number: '', \r\n  //   color: '', \r\n  //   engine_displacement: '', \r\n  //   engine_number: '', \r\n  //   fuel_type: '', \r\n  //   kms_driven: '', \r\n  //   vehicle_number: '', \r\n  //   varient: '', \r\n  //   transmission: '', \r\n  //   passing_year: '', \r\n  //   number_of_owners: '', \r\n  //   make_model: '',\r\n  const columns = [\r\n    {\r\n      field: 'id',\r\n      headerName: 'ID',\r\n      width: 150,\r\n      hide: false,\r\n    },\r\n    {\r\n      field: 'body_type',\r\n      headerName: 'Body Type',\r\n      width: 150,\r\n      hide: false,\r\n    },\r\n    {\r\n      field: 'chess_number',\r\n      headerName: 'Chess Number',\r\n      width: 150,\r\n      editable: false,\r\n    },\r\n    {\r\n      field: 'color',\r\n      headerName: 'Color',\r\n      width: 150,\r\n      editable: false,\r\n    },\r\n\r\n    {\r\n      field: 'engine_displacement',\r\n      headerName: 'Engine Displacement',\r\n      width: 250,\r\n      editable: false,\r\n    },\r\n\r\n    {\r\n      field: 'engine_number',\r\n      headerName: 'Engine Number',\r\n      width: 150,\r\n      editable: false,\r\n    },\r\n\r\n    {\r\n      field: 'fuel_type',\r\n      headerName: 'Fuel Type',\r\n      width: 150,\r\n      editable: false,\r\n    },\r\n\r\n    {\r\n      field: 'kms_driven',\r\n      headerName: 'KMS Driven',\r\n      width: 150,\r\n      editable: false,\r\n    },\r\n\r\n    {\r\n      field: 'vehicle_number',\r\n      headerName: 'Vehicle Number',\r\n      width: 150,\r\n      editable: false,\r\n    },\r\n\r\n\r\n    {\r\n      field: 'varient',\r\n      headerName: 'Varient',\r\n      width: 150,\r\n      editable: false,\r\n    },\r\n\r\n    {\r\n      field: 'transmission',\r\n      headerName: 'Transmission',\r\n      width: 150,\r\n      editable: false,\r\n    },\r\n\r\n    {\r\n      field: 'passing_year',\r\n      headerName: 'Passing Year',\r\n      width: 150,\r\n      editable: false,\r\n    },\r\n\r\n    {\r\n      field: 'number_of_owners',\r\n      headerName: 'Number of Owners',\r\n      width: 150,\r\n      editable: false,\r\n    },\r\n\r\n    {\r\n      field: 'make_model',\r\n      headerName: 'Make Model',\r\n      width: 150,\r\n      editable: false,\r\n    },\r\n\r\n    {\r\n      field: 'action',\r\n      headerName: 'Action',\r\n      width: 200,\r\n      renderCell: (params) => {\r\n        return (\r\n          <div className=\"\" style={{ width: \"100%\", textAlign: 'center', margin: '0 40px' }}>\r\n            <button type=\"button\" className=\"btn btn-warning\" data-toggle=\"tooltip\" title=\"Edit\" onClick={() => { editVehicle(params.row) }} ><i className=\"fa fa-pencil\"></i></button>\r\n            <button style={{ marginLeft: '20%' }} className=\"btn btn-danger\" data-toggle=\"tooltip\" title=\"Delete\" onClick={() => { deleteVehicle(params.row.id) }}><i className=\"fa fa-trash\"></i></button>\r\n\r\n          </div>\r\n        );\r\n      }\r\n    },\r\n  ];\r\n  //console.log(data3);\r\n  const rows = data.vehicle;\r\n\r\n  const passing_year=[2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021];\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Modal show={showModal} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Modal heading</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"col-md-12\">\r\n            <form className=\"form-group\" onSubmit={(e) => { onModalFormSubmit(e) }}>\r\n            <div className=\"row\">\r\n            <div className=\"field col-md-6\">\r\n              <label>Vehicle Number</label>\r\n              <input defaultValue={updateVehicledata.vehicle_number} onChange={e => onModalInputChange(e)} className=\"form-control\" name=\"vehicle_number\" type=\"text\" placeholder='Enter Your Vehicle Number' required />\r\n            </div>\r\n\r\n            <div className=\"field col-md-6\">\r\n              <label>Color</label>\r\n              <input defaultValue={updateVehicledata.color} onChange={e => onModalInputChange(e)} className=\"form-control\" name=\"color\" type=\"text\" placeholder='Enter Your Color' required />\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"field col-md-6\">\r\n              <label>Make Model</label>\r\n              <div style={{ display: 'flex' }}>\r\n                <input defaultValue={updateVehicledata.make_model} onChange={e => onModalInputChange(e)} className=\"form-control\" name=\"make_model\" type=\"text\" placeholder='Enter Your Make Model' required />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"field col-md-6\">\r\n              <label>Varient</label>\r\n              <input defaultValue={updateVehicledata.varient} onChange={e => onModalInputChange(e)} className=\"form-control\" name=\"varient\" type=\"text\" placeholder='Enter Your Varient' required />\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"field col-md-6\">\r\n              <label>Fuel Type</label>\r\n              {/* <input onChange={e => onInputChange(e)} className=\"form-control\" name=\"fuel_type\" type=\"text\" placeholder='Enter Your Fuel Type' required/> */}\r\n              <select defaultValue={updateVehicledata.fuel_type} className=\"form-control\" onChange={onModalInputChange} name=\"fuel_type\">\r\n                <option>Select Fuel Type</option>\r\n                <option value='Petrol'>Petrol</option>\r\n                <option value='Disel'>Disel</option>\r\n                <option value='Electric'>Electric</option>\r\n              </select>\r\n\r\n\r\n            </div>\r\n\r\n            <div className=\"field col-md-6\">\r\n              <label>KMS Driven</label>\r\n              <input defaultValue={updateVehicledata.kms_driven} onChange={e => onModalInputChange(e)} className=\"form-control\" name=\"kms_driven\" type=\"text\" placeholder='Enter Your KMS Driven' required />\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"field col-md-6\">\r\n              <label>Engine Displacement</label>\r\n              <input defaultValue={updateVehicledata.engine_displacement} onChange={e => onModalInputChange(e)} className=\"form-control\" name=\"engine_displacement\" type=\"text\" placeholder='Enter Your Engine Displacement' required />\r\n            </div>\r\n\r\n            <div className=\"field col-md-6\">\r\n              <label>Body Type</label>\r\n              {/* <input onChange={e => onInputChange(e)} className=\"form-control\" name=\"body_type\" type=\"text\" placeholder='Enter Your Body Type' required /> */}\r\n              <select defaultValue={updateVehicledata.body_type} className=\"form-control\" onChange={onModalInputChange} name=\"body_type\" required>\r\n                <option>Select Body Type</option>\r\n                <option value='SUV'>SUV</option>\r\n                <option value='SEDAW'>SEDAW</option>\r\n                <option value='MUV'>MUV</option>\r\n                <option value='HATCHBCK'>HATCHBCK</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"field col-md-6\">\r\n              <label>Number Of Owners</label>\r\n              <input defaultValue={updateVehicledata.number_of_owners} onChange={e => onModalInputChange(e)} className=\"form-control\" name=\"number_of_owners\" type=\"text\" placeholder='Enter Your Number Of Owners' required />\r\n            </div>\r\n            <div className=\"field col-md-6\">\r\n              <label>Passing Year</label>\r\n              {/* <input onChange={e => onInputChange(e)} className=\"form-control\" name=\"passing_year\" type=\"text\" placeholder='Enter Your Passing Year' required /> */}\r\n              <select defaultValue={updateVehicledata.passing_year} className=\"form-control\" onChange={onModalInputChange} name=\"passing_year\" required>\r\n                <option>Select Passing Year</option>\r\n                {passing_year.map(year=>(\r\n                  <option key={year} value={year}>{year}</option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"field col-md-6\">\r\n              <label>Engine Number</label>\r\n              <input defaultValue={updateVehicledata.engine_number} onChange={e => onModalInputChange(e)} className=\"form-control\" name=\"engine_number\" type=\"text\" placeholder='Enter Your Engine Number' required />\r\n            </div>\r\n            <div className=\"field col-md-6\">\r\n              <label>Transmission</label>\r\n              <input defaultValue={updateVehicledata.transmission} onChange={e => onModalInputChange(e)} className=\"form-control\" name=\"transmission\" type=\"text\" placeholder='Enter Your Transmission' required />\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"field col-md-6\">\r\n              <label>Chess Number</label>\r\n              <input defaultValue={updateVehicledata.chess_number} onChange={e => onModalInputChange(e)} className=\"form-control\" name=\"chess_number\" type=\"text\" placeholder='Enter Your Chess Number' required />\r\n            </div>\r\n          </div>\r\n              <div className=\"field\">\r\n                <button className=\"btn btn-primary\">Save</button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n\r\n        </Modal.Footer>\r\n      </Modal>\r\n      <div className=\"col-md-12\">\r\n        <h1 style={{ width: '100%', textAlign: 'center' }}>Vehicle Registration</h1>\r\n        <Divider style={{ marginBottom: '10px', }} />\r\n        <form onSubmit={(e) => { onFormSubmit(e) }} className=\"form-group\">\r\n          <div className=\"row\">\r\n            <div className=\"field col-md-6\">\r\n              <label>Vehicle Number</label>\r\n              <input onChange={e => onInputChange(e)} className=\"form-control\" name=\"vehicle_number\" type=\"text\" placeholder='Enter Your Vehicle Number' required />\r\n            </div>\r\n\r\n            <div className=\"field col-md-6\">\r\n              <label>Color</label>\r\n              <input onChange={e => onInputChange(e)} className=\"form-control\" name=\"color\" type=\"text\" placeholder='Enter Your Color' required />\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"field col-md-6\">\r\n              <label>Make Model</label>\r\n              <div style={{ display: 'flex' }}>\r\n                <input onChange={e => onInputChange(e)} className=\"form-control\" name=\"make_model\" type=\"text\" placeholder='Enter Your Make Model' required />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"field col-md-6\">\r\n              <label>Varient</label>\r\n              <input onChange={e => onInputChange(e)} className=\"form-control\" name=\"varient\" type=\"text\" placeholder='Enter Your Varient' required />\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"field col-md-6\">\r\n              <label>Fuel Type</label>\r\n              {/* <input onChange={e => onInputChange(e)} className=\"form-control\" name=\"fuel_type\" type=\"text\" placeholder='Enter Your Fuel Type' required/> */}\r\n              <select className=\"form-control\" onChange={onInputChange} name=\"fuel_type\" required>\r\n                <option>Select Fuel Type</option>\r\n                <option value='Petrol'>Petrol</option>\r\n                <option value='Disel'>Disel</option>\r\n                <option value='Electric'>Electric</option>\r\n              </select>\r\n\r\n\r\n            </div>\r\n\r\n            <div className=\"field col-md-6\">\r\n              <label>KMS Driven</label>\r\n              <input onChange={e => onInputChange(e)} className=\"form-control\" name=\"kms_driven\" type=\"text\" placeholder='Enter Your KMS Driven' required />\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"field col-md-6\">\r\n              <label>Engine Displacement</label>\r\n              <input onChange={e => onInputChange(e)} className=\"form-control\" name=\"engine_displacement\" type=\"text\" placeholder='Enter Your Engine Displacement' required />\r\n            </div>\r\n\r\n            <div className=\"field col-md-6\">\r\n              <label>Body Type</label>\r\n              {/* <input onChange={e => onInputChange(e)} className=\"form-control\" name=\"body_type\" type=\"text\" placeholder='Enter Your Body Type' required /> */}\r\n              <select className=\"form-control\" onChange={onInputChange} name=\"body_type\">\r\n                <option>Select Body Type</option>\r\n                <option value='SUV'>SUV</option>\r\n                <option value='SEDAW'>SEDAW</option>\r\n                <option value='MUV'>MUV</option>\r\n                <option value='HATCHBCK'>HATCHBCK</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"field col-md-6\">\r\n              <label>Number Of Owners</label>\r\n              <input onChange={e => onInputChange(e)} className=\"form-control\" name=\"number_of_owners\" type=\"text\" placeholder='Enter Your Number Of Owners' required />\r\n            </div>\r\n            <div className=\"field col-md-6\">\r\n              <label>Passing Year</label>\r\n              {/* <input onChange={e => onInputChange(e)} className=\"form-control\" name=\"passing_year\" type=\"text\" placeholder='Enter Your Passing Year' required /> */}\r\n              <select className=\"form-control\" onChange={onInputChange} name=\"passing_year\">\r\n                <option>Select Passing Year</option>\r\n                {passing_year.map(year=>(\r\n                  <option key={year} value={year}>{year}</option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"field col-md-6\">\r\n              <label>Engine Number</label>\r\n              <input onChange={e => onInputChange(e)} className=\"form-control\" name=\"engine_number\" type=\"text\" placeholder='Enter Your Engine Number' required />\r\n            </div>\r\n            <div className=\"field col-md-6\">\r\n              <label>Transmission</label>\r\n              <input onChange={e => onInputChange(e)} className=\"form-control\" name=\"transmission\" type=\"text\" placeholder='Enter Your Transmission' required />\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"field col-md-6\">\r\n              <label>Chess Number</label>\r\n              <input onChange={e => onInputChange(e)} className=\"form-control\" name=\"chess_number\" type=\"text\" placeholder='Enter Your Chess Number' required />\r\n            </div>\r\n          </div>\r\n          <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '20px' }}>\r\n            <button className=\"btn btn-primary\" type='submit' style={{ marginRight: '50px' }}>Save</button>\r\n            <button className=\"btn btn-primary\" type='reset'>Reset</button>\r\n          </div>\r\n        </form>\r\n      </div><br />\r\n      <div style={{ height: 500, width: '100%' }}>\r\n        <DataGrid\r\n          rows={rows}\r\n          columns={columns}\r\n          pageSize={10}\r\n          rowsPerPageOptions={[10]}\r\n          checkboxSelection={false}\r\n          // components={{\r\n          //   Toolbar: GridToolbar,\r\n          // }}\r\n          disableSelectionOnClick\r\n        />\r\n        <Link to={`/Data_Entry/Vehicle_Registration`} className=\"btn btn-success\">\r\n          Previous\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Vehicle_Registration;\r\n\r\n\r\n","D:\\Mitharis\\my-app\\src\\Components\\NavItems\\Data_Entry\\Delivery_Note.js",["219","220"],"import React, { useState } from 'react';\r\nimport {\r\n  gql,\r\n  useMutation,\r\n  useSubscription,\r\n} from \"@apollo/client\";\r\n// import { DataGrid } from '@material-ui/data-grid';\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { Divider } from '@material-ui/core';\r\nimport { DataGrid, GridToolbar } from '@material-ui/data-grid';\r\nimport { Switch, Route, Link } from \"react-router-dom\";\r\n\r\nconst VehicleMasterQuery = gql`\r\nsubscription MySubscription {\r\n  delivery_note {\r\n    id\r\n    address\r\n    name\r\n    payment_in_number\r\n    payment_in_words\r\n    reference\r\n    signature_img_url\r\n  }\r\n}\r\n  `\r\n\r\nconst UPDATE_VEHICLE = gql`\r\nmutation MyMutation($id: Int = 10, $address: String = \"\", $name: String = \"\", $payment_in_number: bigint = \"\", $payment_in_words: String = \"\", $reference: String = \"\", $signature_img_url: String = \"\") {\r\n  update_delivery_note_by_pk(pk_columns: {id: $id}, _set: {address: $address, name: $name, payment_in_number: $payment_in_number, payment_in_words: $payment_in_words, reference: $reference, signature_img_url: $signature_img_url}) {\r\n    id\r\n  }\r\n}\r\n`\r\n\r\nconst INSERT_VEHICLE = gql`\r\nmutation MyMutation($address: String = \"\", $name: String = \"\", $payment_in_number: bigint = \"\", $payment_in_words: String = \"\", $reference: String = \"\", $signature_img_url: String = \"\") {\r\n  insert_delivery_note(objects: {address: $address, name: $name, payment_in_number: $payment_in_number, payment_in_words: $payment_in_words, reference: $reference, signature_img_url: $signature_img_url}) {\r\n    affected_rows\r\n  }\r\n}`\r\n\r\nconst DELETE_VEHICLE = gql`\r\nmutation MyMutation($id: Int = 10) {\r\n  delete_delivery_note_by_pk(id: $id) {\r\n    id\r\n  }\r\n}\r\n  `\r\n\r\nfunction Delivery_Note() {\r\n  const [showModal, setShow] = useState(false);\r\n  const [id, setId] = useState();\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  const [delivery_note, setDeliveryNote] = useState({\r\n    payment_in_number: \"\",\r\n    payment_in_words: \"\",\r\n    name: \"\",\r\n    address: \"\",\r\n    reference: \"\",\r\n    signature_img_url: \"\",\r\n  })\r\n  const [update_delivery_note, setUpdateDeliveryNote] = useState({\r\n    id: '',\r\n    payment_in_number: \"\",\r\n    payment_in_words: \"\",\r\n    name: \"\",\r\n    address: \"\",\r\n    reference: \"\",\r\n    signature_img_url: \"\",\r\n  })\r\n  const onInputChange = (e) => {\r\n    setDeliveryNote({ ...delivery_note, [e.target.name]: e.target.value })\r\n  }\r\n  const onUpdateInputChange = (e) => {\r\n    setUpdateDeliveryNote({ ...update_delivery_note, [e.target.name]: e.target.value })\r\n  }\r\n  const onFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    insertVehicleData({\r\n      variables: {\r\n        payment_in_number: delivery_note.payment_in_number,\r\n        payment_in_words: delivery_note.payment_in_words,\r\n        name: delivery_note.name,\r\n        address: delivery_note.address,\r\n        reference: delivery_note.reference,\r\n        signature_img_url: delivery_note.signature_img_url,\r\n      }\r\n    });\r\n  }\r\n  const deleteVehicle = (id) => {\r\n    console.log(id);\r\n    deleteVehicleData({ variables: { id: id } })\r\n  }\r\n  const onModalFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(e.target[0].value);\r\n    updateVehicleData({\r\n      variables: {\r\n        id: id,\r\n        payment_in_number: update_delivery_note.payment_in_number,\r\n        payment_in_words: update_delivery_note.payment_in_words,\r\n        name: update_delivery_note.name,\r\n        address: update_delivery_note.address,\r\n        reference: update_delivery_note.reference,\r\n        signature_img_url: update_delivery_note.signature_img_url,\r\n      }\r\n    });\r\n    handleClose();\r\n  }\r\n  const editVehicle = (row) => {\r\n    console.log(row.id);\r\n    setId(row.id);\r\n    setUpdateDeliveryNote({\r\n      payment_in_number: row.payment_in_number,\r\n      payment_in_words: row.payment_in_words,\r\n      name: row.name,\r\n      address: row.address,\r\n      reference: row.reference,\r\n      signature_img_url: row.signature_img_url\r\n    });\r\n    handleShow();\r\n  }\r\n  const [updateVehicleData] = useMutation(UPDATE_VEHICLE);\r\n  const [insertVehicleData] = useMutation(INSERT_VEHICLE);\r\n  const [deleteVehicleData] = useMutation(DELETE_VEHICLE);\r\n\r\n  const { loading, error, data } = useSubscription(VehicleMasterQuery);\r\n\r\n  if (loading) return <div style={{ width: \"100%\", marginTop: '25%', textAlign: 'center' }}><CircularProgress /></div>;\r\n  if (error) return `Error! ${error.message}`;\r\n\r\n  const columns = [\r\n    {\r\n      field: 'id',\r\n      headerName: 'ID',\r\n      hide: false,\r\n    },\r\n    {\r\n      field: 'payment_in_number',\r\n      headerName: 'Payment In Number',\r\n      width: 250,\r\n      hide: false,\r\n    },\r\n    {\r\n      field: 'payment_in_words',\r\n      headerName: 'Payment In Words',\r\n      width: 250,\r\n      editable: false,\r\n    },\r\n    {\r\n      field: 'name',\r\n      headerName: 'Name',\r\n      width: 150,\r\n      editable: false,\r\n    },\r\n    {\r\n      field: 'address',\r\n      headerName: 'Address',\r\n      width: 150,\r\n      editable: false,\r\n    },\r\n    {\r\n      field: 'signature_img_url',\r\n      headerName: 'Signature',\r\n      width: 150,\r\n      editable: false,\r\n    },\r\n    {\r\n      field: 'reference',\r\n      headerName: 'Reference',\r\n      width: 150,\r\n      editable: false,\r\n    },\r\n    {\r\n      field: 'action',\r\n      headerName: 'Action',\r\n      width: 200,\r\n      renderCell: (params) => {\r\n        return (\r\n          <div className=\"\" style={{ width: \"100%\", textAlign: 'center', margin: '0 40px' }}>\r\n            <button type=\"button\" className=\"btn btn-warning\" data-toggle=\"tooltip\" title=\"Edit\" onClick={() => { editVehicle(params.row) }} ><i className=\"fa fa-pencil\"></i></button>\r\n            <button style={{ marginLeft: '20%' }} className=\"btn btn-danger\" data-toggle=\"tooltip\" title=\"Delete\" onClick={() => { deleteVehicle(params.row.id) }}><i className=\"fa fa-trash\"></i></button>\r\n\r\n          </div>\r\n        );\r\n      }\r\n    },\r\n  ];\r\n  const rows = data.delivery_note;\r\n  console.log(rows);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Modal show={showModal} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Modal heading</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"col-md-12\">\r\n            <form className=\"form-group\" onSubmit={(e) => { onModalFormSubmit(e) }}>\r\n            <div className=\"row\">\r\n                <h2>On Payment of Rs.</h2>\r\n                <div className=\"field col-md-6\">\r\n                  <label>In Number</label>\r\n                  <input defaultValue={update_delivery_note.payment_in_number} onChange={e => onUpdateInputChange(e)} className=\"form-control\" name=\"payment_in_number\" type=\"text\" placeholder='Enter Rs. in Numbers' required />\r\n                </div>\r\n\r\n                <div className=\"field col-md-6\">\r\n                  <label>In words</label>\r\n                  <input defaultValue={update_delivery_note.payment_in_words} onChange={e => onUpdateInputChange(e)} className=\"form-control\" name=\"payment_in_words\" type=\"text\" placeholder='Enter Rs. in Word' required />\r\n                </div>\r\n              </div>\r\n              <h2 style={{ marginTop: '20px' }}>Signature of Buyer</h2>\r\n              <div className=\"row\">\r\n                <div className=\"field col-md-6\">\r\n                  <label>Name</label>\r\n                  <div style={{ display: 'flex' }}>\r\n                    <input defaultValue={update_delivery_note.name} onChange={e => onUpdateInputChange(e)} className=\"form-control\" name=\"name\" type=\"text\" placeholder='Enter your Name' required />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"field col-md-6\">\r\n                  <label>Address</label>\r\n                  <input defaultValue={update_delivery_note.address} onChange={e => onUpdateInputChange(e)} className=\"form-control\" name=\"address\" type=\"text\" placeholder='Enter your Address' required />\r\n                </div>\r\n              </div>\r\n              <div className=\"row\">\r\n                <div className=\"field col-md-6\">\r\n                  <label>Signature</label>\r\n                  <input onChange={e => onUpdateInputChange(e)} className=\"form-control\" name=\"signature_img_url\" type=\"file\" />\r\n                </div>\r\n              </div>\r\n              <div className=\"row\">\r\n                <div className=\"field col-md-12\" style={{ display: 'flex', padding: '50px 70px', }}>\r\n                  <b><h6 style={{ width: '100%' }}>Reference of a person</h6></b>\r\n                  <input defaultValue={update_delivery_note.reference} onChange={e => onUpdateInputChange(e)} className=\"form-control\" name=\"reference\" type=\"text\" placeholder='Enter Your reference' />\r\n                </div>\r\n              </div>\r\n              <div className=\"field\">\r\n                <button className=\"btn btn-primary\">Save</button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n\r\n        </Modal.Footer>\r\n      </Modal>\r\n      <div className=\"col-md-12\">\r\n        <h1 style={{ width: '100%', textAlign: 'center' }}>Delivery Note</h1>\r\n        <Divider style={{ marginBottom: '10px', }} />\r\n        <form onSubmit={(e) => { onFormSubmit(e) }} className=\"form-group\">\r\n          <div className=\"row\">\r\n            <h2>On Payment of Rs.</h2>\r\n            <div className=\"field col-md-6\">\r\n              <label>In Number</label>\r\n              <input onChange={e => onInputChange(e)} className=\"form-control\" name=\"payment_in_number\" type=\"text\" placeholder='Enter Rs. in Numbers' required />\r\n            </div>\r\n\r\n            <div className=\"field col-md-6\">\r\n              <label>In words</label>\r\n              <input onChange={e => onInputChange(e)} className=\"form-control\" name=\"payment_in_words\" type=\"text\" placeholder='Enter Rs. in Word' required />\r\n            </div>\r\n          </div>\r\n          <h2 style={{ marginTop: '20px' }}>Signature of Buyer</h2>\r\n          <div className=\"row\">\r\n            <div className=\"field col-md-6\">\r\n              <label>Name</label>\r\n              <div style={{ display: 'flex' }}>\r\n                <input onChange={e => onInputChange(e)} className=\"form-control\" name=\"name\" type=\"text\" placeholder='Enter your Name' required />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"field col-md-6\">\r\n              <label>Address</label>\r\n              <input onChange={e => onInputChange(e)} className=\"form-control\" name=\"address\" type=\"text\" placeholder='Enter your Address' required />\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"field col-md-6\">\r\n              <label>Signature</label>\r\n              <input onChange={e => onInputChange(e)} className=\"form-control\" name=\"signature_img_url\" type=\"file\" />\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"field col-md-12\" style={{ display: 'flex', padding: '50px 70px', }}>\r\n              <b><h6 style={{ width: '100%' }}>Reference of a person</h6></b>\r\n              <input onChange={e => onInputChange(e)} className=\"form-control\" name=\"reference\" type=\"text\" placeholder='Enter Your reference' />\r\n            </div>\r\n          </div>\r\n          <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '20px' }}>\r\n            <button className=\"btn btn-primary\" type='submit' style={{ marginRight: '50px' }}>Save</button>\r\n            <Link to={`/Data_Entry/Vehicle_Registration2`} style={{ marginRight: '50px' }} className=\"btn btn-success\">\r\n                Previous\r\n              </Link>\r\n            <button className=\"btn btn-primary\" type='reset'>Reset</button>\r\n          </div>\r\n        </form>\r\n      </div><br />\r\n      <div style={{ height: 500, width: '100%' }}>\r\n        <DataGrid\r\n          rows={rows}\r\n          columns={columns}\r\n          pageSize={10}\r\n          rowsPerPageOptions={[10]}\r\n          checkboxSelection={false}\r\n          components={{\r\n            Toolbar: GridToolbar,\r\n          }}\r\n          disableSelectionOnClick\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Delivery_Note;\r\n\r\n\r\n","D:\\Mitharis\\my-app\\src\\Components\\NavItems\\Data_Entry\\EnqGen.js",["221","222","223","224"],"import React, { useState } from 'react'\r\nimport { CircularProgress, Divider } from '@material-ui/core';\r\nimport { gql, useMutation, useQuery, useSubscription, useLazyQuery } from '@apollo/client';\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst VehicleQuery = gql`\r\nsubscription MySubscription {\r\n    enq_gen {\r\n        budget_from\r\n        budget_to\r\n        buyer_id\r\n        fuel_type\r\n        stock_vehicle_id\r\n        vehicle_master_id\r\n        id\r\n        buyer {\r\n            name\r\n        }\r\n        stock {\r\n            vehicle_no\r\n            vehicleMasterByVehicleMaster {\r\n              brand\r\n              model\r\n            }\r\n        }\r\n        vehicle_master {\r\n            brand\r\n            model\r\n        }\r\n    }\r\n}      \r\n  `\r\n\r\nconst StockQuery = gql`\r\nquery MyQuery {\r\n    stock(where: {is_sold: {_eq: false}}) {\r\n      id\r\n      vehicle_no\r\n      is_sold\r\n    }\r\n  }\r\n`\r\n\r\nconst SearchQuery = gql`\r\nquery MyQuery($model: Int = 10, $budget_from: bigint = 10, $budget_to: bigint = 10) {\r\n    stock(where: {is_sold: {_eq: false},vehicle_master: {_eq: $model}, expected_price: {_lte: $budget_to, _gte: $budget_from}}) {\r\n      id\r\n      vehicle_no\r\n      vehicleMasterByVehicleMaster {\r\n        brand\r\n        model\r\n      }\r\n      seller {\r\n        name\r\n      }\r\n    }\r\n  }\r\n  \r\n`;\r\n\r\nconst BuyerQuery = gql`\r\nquery MyQuery {\r\n    buyer {\r\n      name\r\n      id\r\n    }\r\n  }\r\n  \r\n`;\r\n\r\nconst VehicleMasterQuery = gql`\r\nquery MyQuery {\r\n    vehicle_master {\r\n      id\r\n      model\r\n    }\r\n}  \r\n`;\r\n\r\nconst UPDATE_VEHICLE = gql`\r\nmutation MyMutation($id: Int = 10, $budget_from: bigint = \"\", $budget_to: bigint = \"\", $buyer_id: Int = 10, $fuel_type: String = \"\", $stock_vehicle_id: Int = 10, $vehicle_master_id: Int = 10) {\r\n    update_enq_gen_by_pk(pk_columns: {id: $id}, _set: {budget_from: $budget_from, budget_to: $budget_to, buyer_id: $buyer_id, fuel_type: $fuel_type, stock_vehicle_id: $stock_vehicle_id, vehicle_master_id: $vehicle_master_id}) {\r\n      id\r\n    }\r\n}  \r\n`\r\nconst INSERT_VEHICLE = gql`\r\nmutation MyMutation($stock_vehicle_id: Int = 10, $budget_from: bigint = \"\", $budget_to: bigint = \"\", $buyer_id: Int = 10, $fuel_type: String = \"\", $vehicle_master_id: Int = 10) {\r\n    insert_enq_gen(objects: {budget_from: $budget_from, budget_to: $budget_to, buyer_id: $buyer_id, fuel_type: $fuel_type, stock_vehicle_id: $stock_vehicle_id, vehicle_master_id: $vehicle_master_id}) {\r\n      affected_rows\r\n    }\r\n  }   \r\n  `\r\nconst DELETE_VEHICLE = gql`\r\nmutation MyMutation($id: Int = 10) {\r\n    delete_enq_gen_by_pk(id: $id) {\r\n      id\r\n    }\r\n  }  \r\n  `\r\n\r\nexport default function EnqGen() {\r\n    const [showModal, setShow] = useState(false);\r\n    const [searchVehicle, setSearchVehicle] = useState()\r\n    const [id, setId] = useState();\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    const [owner,setOwner]=useState();\r\n    var ind;\r\n    const [office_receipt, setOfficeReceipt] = useState({\r\n        budget_from: '',\r\n        budget_to: '',\r\n        buyer_id: '',\r\n        fuel_type: '',\r\n        stock_vehicle_id: '',\r\n        vehicle_master_id: ''\r\n    })\r\n    const [updateOfficeReceipt, setUpdateOfficeReceipt] = useState({\r\n        id: id,\r\n        budget_from: '',\r\n        budget_to: '',\r\n        buyer_id: '',\r\n        fuel_type: '',\r\n        stock_vehicle_id: '',\r\n        vehicle_master_id: ''\r\n    })\r\n    const onInputChange = (e) => {\r\n        console.log(e.target.value);\r\n        setOfficeReceipt({ ...office_receipt, [e.target.name]: e.target.value })\r\n    }\r\n\r\n    const onModalInputChange = (e) => {\r\n        setUpdateOfficeReceipt({ ...updateOfficeReceipt, [e.target.name]: e.target.value })\r\n\r\n    }\r\n    const onFormSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(office_receipt);\r\n        insertVehicleData({\r\n            variables: {\r\n                budget_to: office_receipt.budget_to,\r\n                budget_from: office_receipt.budget_from,\r\n                buyer_id: office_receipt.buyer_id,\r\n                fuel_type: office_receipt.fuel_type,\r\n                stock_vehicle_id: office_receipt.stock_vehicle_id,\r\n                vehicle_master_id: office_receipt.vehicle_master_id\r\n            }\r\n        });\r\n    }\r\n    const deleteVehicle = (id) => {\r\n        console.log(id);\r\n        deleteVehicleData({ variables: { id: id } })\r\n    }\r\n    const onModalFormSubmit = (e) => {\r\n        e.preventDefault();\r\n        updateVehicleData({\r\n            variables: {\r\n                id: id,\r\n                budget_to: updateOfficeReceipt.budget_to,\r\n                budget_from: updateOfficeReceipt.budget_from,\r\n                buyer_id: updateOfficeReceipt.buyer_id,\r\n                fuel_type: updateOfficeReceipt.fuel_type,\r\n                stock_vehicle_id: updateOfficeReceipt.stock_vehicle_id,\r\n                vehicle_master_id: updateOfficeReceipt.vehicle_master_id\r\n            }\r\n        });\r\n        handleClose();\r\n    }\r\n    const editVehicle = (row) => {\r\n        console.log(row.stock_vehicle_id);\r\n        setId(row.id);\r\n        setUpdateOfficeReceipt({\r\n            budget_to: row.budget_to,\r\n            budget_from: row.budget_from,\r\n            buyer_id: row.buyer_id,\r\n            fuel_type: row.fuel_type,\r\n            stock_vehicle_id: row.stock_vehicle_id,\r\n            vehicle_master_id: row.vehicle_master_id\r\n        })\r\n        handleShow();\r\n        //loadVehicle({ variables: { id:id } });\r\n        console.log(updateOfficeReceipt);\r\n    }\r\n\r\n\r\n\r\n    const onSearch = (e) => {\r\n        e.preventDefault();\r\n        console.log(office_receipt.vehicle_master_id, office_receipt.budget_from, office_receipt.budget_to)\r\n        getData({ variables: { model: office_receipt.vehicle_master_id, budget_from: parseInt(office_receipt.budget_from), budget_to: parseInt(office_receipt.budget_to) } })\r\n\r\n\r\n        console.log(search.data);\r\n        setSearchVehicle(search.data)\r\n        \r\n\r\n    }\r\n\r\n    const [updateVehicleData] = useMutation(UPDATE_VEHICLE);\r\n    const [insertVehicleData] = useMutation(INSERT_VEHICLE);\r\n    const [deleteVehicleData] = useMutation(DELETE_VEHICLE);\r\n    const [getData, search] = useLazyQuery(SearchQuery);\r\n    const buyer = useQuery(BuyerQuery);\r\n    if (buyer.loading) {\r\n        console.log(buyer.loading);\r\n    }\r\n    if (buyer.error) {\r\n        console.log(buyer.error);\r\n    }\r\n    if (search.loading) {\r\n        console.log(search.loading);\r\n    } else if (search.error) {\r\n        console.log(search.error);\r\n    } else {\r\n        console.log(search.data);\r\n        // const abc = document.getElementsByName('xyz');\r\n        // abc.value=search.data\r\n        //setSearchVehicle(search.data);\r\n    }\r\n    const vehicleMaster = useQuery(VehicleMasterQuery);\r\n    const stockMaster = useQuery(StockQuery);\r\n    if (vehicleMaster.loading) {\r\n        console.log(vehicleMaster.loading);\r\n    }\r\n    if (vehicleMaster.error) {\r\n        console.log(vehicleMaster.error);\r\n    }\r\n\r\n    const { loading, error, data } = useSubscription(VehicleQuery);\r\n    if (loading || vehicleMaster.loading || buyer.loading ||stockMaster.loading) return <div style={{ width: \"100%\", marginTop: '25%', textAlign: 'center' }}><CircularProgress /></div>;\r\n    if (error || vehicleMaster.error || buyer.error) return `Error! ${error.message}`;\r\n\r\n\r\n    // budget_from\r\n    // budget_to\r\n    // buyer_id\r\n    // fuel_type\r\n    // stock_vehicle_id\r\n    // vehicle_master_id\r\n\r\n    const columns = [\r\n        {\r\n            field: 'id',\r\n            headerName: 'ID',\r\n            width: 100,\r\n            hide: false,\r\n        },\r\n        {\r\n            field: 'buyer_id',\r\n            headerName: 'Buyer Name',\r\n            valueGetter: (params) => {\r\n                return params.row.buyer.name\r\n            },\r\n            width: 200,\r\n            hide: false,\r\n        },\r\n        {\r\n            field: 'stock_vehicle_id',\r\n            headerName: 'Vehicle No',\r\n            valueGetter: (params) => {\r\n                return params.row.stock.vehicle_no\r\n            },\r\n            width: 200,\r\n            hide: false,\r\n        },\r\n        {\r\n            field: 'fuel_type',\r\n            headerName: 'Fuel Type',\r\n            width: 150,\r\n            editable: false,\r\n        },\r\n        {\r\n            field: 'budget_from',\r\n            headerName: 'Budget From',\r\n            width: 180,\r\n            editable: false,\r\n        },\r\n\r\n        {\r\n            field: 'budget_to',\r\n            headerName: 'Budget To',\r\n            width: 150,\r\n            editable: false,\r\n        },\r\n\r\n        {\r\n            field: 'action',\r\n            headerName: 'Action',\r\n            width: 200,\r\n            renderCell: (params) => {\r\n                return (\r\n                    <div className=\"\" style={{ width: \"100%\", textAlign: 'center', margin: '0 40px' }}>\r\n                        <button type=\"button\" className=\"btn btn-warning\" data-toggle=\"tooltip\" title=\"Edit\" onClick={() => { editVehicle(params.row) }} ><i className=\"fa fa-pencil\"></i></button>\r\n                        <button style={{ marginLeft: '20%' }} className=\"btn btn-danger\" data-toggle=\"tooltip\" title=\"Delete\" onClick={() => { deleteVehicle(params.row.id) }}><i className=\"fa fa-trash\"></i></button>\r\n\r\n                    </div>\r\n                );\r\n            }\r\n        },\r\n    ];\r\n    //console.log(data3);\r\n    const rows = data.enq_gen;\r\n\r\n    return (\r\n        <div className='container'>\r\n            <Modal show={showModal} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Modal heading</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"col-md-12\">\r\n                        <form className=\"form-group\" onSubmit={(e) => { onModalFormSubmit(e) }}>\r\n                            <div className=\"row\">\r\n                                <div className=\"booking-form\">\r\n                                    <div className=\"form-header\">\r\n                                        <h2>Search Functionality</h2>\r\n                                    </div>\r\n                                    <Divider />\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <span className=\"form-label\">Vehicle Model</span>\r\n                                                {/* <input defaultValue={updateOfficeReceipt.vehicle_master_id} className=\"form-control\" type=\"text\" onChange={onModalInputChange} name='name' placeholder=\"Enter vehicle name\" /> */}\r\n                                                <select defaultValue={updateOfficeReceipt.vehicle_master_id} onChange={onModalInputChange} className='form-control' name='vehicle_master_id'>\r\n                                                <option>Select Car</option>\r\n                                                    {\r\n                                                        vehicleMaster.data.vehicle_master.map(vehicle => (\r\n                                                            <option key={vehicle.id} value={vehicle.id}> {vehicle.model}</option>\r\n                                                        ))\r\n                                                    }\r\n                                                </select>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                {/* <span className=\"form-label\">Vehicle No</span>\r\n                                                <input defaultValue={updateOfficeReceipt.stock_vehicle_id} className=\"form-control\" type=\"text\" name='stock_vehicle_id' onChange={onModalInputChange} placeholder=\"Vehicle No\" /> */}\r\n                                                <span className=\"form-label\">Vehicle No</span>\r\n                                                <select defaultValue={updateOfficeReceipt.stock_vehicle_id} onChange={onModalInputChange} className='form-control' name='stock_vehicle_id'>\r\n                                                <option>Select Vehicle</option>\r\n                                                    {\r\n                                                        stockMaster.data.stock.map(vehicle => (\r\n                                                            <option key={vehicle.id} value={vehicle.id}> {vehicle.vehicle_no}</option>\r\n                                                        ))\r\n                                                    }\r\n                                                </select>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <span className=\"form-label\">Buyer</span>\r\n                                                <select defaultValue={updateOfficeReceipt.buyer_id} onChange={onModalInputChange} className='form-control' name='buyer_id'>\r\n                                                <option>Select Buyer</option>\r\n                                                {\r\n                                                    buyer.data.buyer.map(buyer => (\r\n                                                        <option key={buyer.id} value={buyer.id}> {buyer.name}</option>\r\n                                                    ))\r\n                                                }\r\n                                            </select>\r\n                                            </div>\r\n                                        </div>\r\n                                        \r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <span className=\"form-label\">Fuel Type</span>\r\n                                                <select defaultValue={updateOfficeReceipt.fuel_type} className=\"form-control\" name='fuel_type' onChange={onModalInputChange}>\r\n                                                    <option>Select Fuel Type</option>\r\n                                                    <option value=\"Petrol\">Petrol</option>\r\n                                                    <option value=\"Disel\">Disel</option>\r\n                                                    <option value=\"CNG/LPG\">CNG/LPG</option>\r\n                                                    <option value=\"Electric\">Electric</option>\r\n                                                </select>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <span className=\"form-label\">Budget</span>\r\n                                                <div style={{ display: 'flex', width: '100%' }}>\r\n                                                    <div className=\"form-group\" style={{ marginRight: '50px' }} >\r\n                                                        <input defaultValue={updateOfficeReceipt.budget_from} className=\"form-control\" type=\"text\" name='budget_from' onChange={onModalInputChange} placeholder=\"From\" />\r\n                                                    </div>\r\n                                                    <div className=\"form-group\">\r\n                                                        <input defaultValue={updateOfficeReceipt.budget_to} className=\"form-control\" type=\"text\" name='budget_to' onChange={onModalInputChange} placeholder=\"To\" />\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '20px' }}>\r\n                                        <button className=\"btn btn-primary\" type='submit' style={{ marginRight: '50px' }}>Save</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Close\r\n                    </Button>\r\n\r\n                </Modal.Footer>\r\n            </Modal>\r\n            <div className=\"col-md-12\">\r\n                <form onSubmit={(e) => { onFormSubmit(e) }} className=\"form-group\">\r\n                    <div className=\"row\">\r\n                        <h1 style={{ width: '100%', textAlign: 'center' }}>Enquiry Generation</h1>\r\n                        <Divider style={{ marginBottom: '10px', }} />\r\n                        <div className=\"row\">\r\n                            <div className=\"booking-form\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-sm-6\">\r\n                                        <div className=\"form-group\">\r\n                                            <span className=\"form-label\">Buyer Name</span>\r\n                                            {/* <input className=\"form-control\" type=\"text\" onChange={onInputChange} name='name' placeholder=\"Enter vehicle name\" /> */}\r\n                                            <select onChange={onInputChange} className='form-control' name='buyer_id'>\r\n                                                <option>Select Buyer</option>\r\n                                                {\r\n                                                    buyer.data.buyer.map(buyer => (\r\n                                                        <option key={buyer.id} value={buyer.id}> {buyer.name}</option>\r\n                                                    ))\r\n                                                }\r\n                                            </select>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-sm-6\">\r\n                                        <div className=\"form-group\">\r\n                                            <span className=\"form-label\">Vehicle Name</span>\r\n                                            {/* <input className=\"form-control\" type=\"text\" onChange={onInputChange} name='model' placeholder=\"Enter car model\" /> */}\r\n                                            <select onChange={onInputChange} className='form-control' name='vehicle_master_id'>\r\n                                                <option>Select Buyer</option>\r\n                                                {\r\n                                                    vehicleMaster.data.vehicle_master.map(vehicleMaster => (\r\n                                                        <option key={vehicleMaster.id} value={vehicleMaster.id}> {vehicleMaster.model}</option>\r\n                                                    ))\r\n                                                }\r\n                                            </select>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-sm-6\">\r\n                                        <div className=\"form-group\">\r\n                                            <span className=\"form-label\">Fuel Type</span>\r\n                                            <select className=\"form-control\" name='fuel_type' onChange={onInputChange}>\r\n                                                <option>Select Fuel Type</option>\r\n                                                <option value=\"Petrol\">Petrol</option>\r\n                                                <option value=\"Disel\">Disel</option>\r\n                                                <option value=\"CNG/LPG\">CNG/LPG</option>\r\n                                                <option value=\"Electric\">Electric</option>\r\n                                            </select>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-sm-6\">\r\n                                        <div className=\"form-group\">\r\n                                            <span className=\"form-label\">Budget</span>\r\n                                            <div style={{ display: 'flex', width: '100%' }}>\r\n                                                <div className=\"form-group\" style={{ marginRight: '50px' }} >\r\n                                                    <input className=\"form-control\" type=\"text\" name='budget_from' onChange={onInputChange} placeholder=\"From\" />\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <input className=\"form-control\" type=\"text\" name='budget_to' onChange={onInputChange} placeholder=\"To\" />\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '20px' }}>\r\n                                    <button className=\"btn btn-primary\" type='button' onClick={onSearch}>Search</button>\r\n                                </div>\r\n                                <div className='row'>\r\n                                    <div className=\"col-sm-6\">\r\n                                        <div className=\"form-group\">\r\n                                            <span className=\"form-label\">Vehicle Number</span>\r\n                                            {/* <input defaultValue={\r\n                                                    search.data === undefined ? '' : search.data.stock[0].vehicle_no \r\n                                                } className=\"form-control\" type=\"text\" onChange={onInputChange} name='xyz' placeholder=\"Vehicle Number\" /> */}\r\n                                            <select className='form-control' onChange={(e) => {\r\n                                                onInputChange(e);\r\n                                            }} name='stock_vehicle_id' placeholder=\"Vehicle Number\">\r\n                                                <option>Select Vehicle</option>\r\n                                                {\r\n                                                    search.data === undefined ? '' : search.data.stock.map((vehicle, index) => {\r\n                                                        console.log(index);\r\n                                                        // ind = index;\r\n                                                        return (\r\n                                                            <option key={index} value={vehicle.id}>{vehicle.vehicle_no}</option>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                            </select>\r\n                                            {/* <select onChange={onInputChange} className='form-control' name='vehicle_master_id'>\r\n                                                {\r\n                                                    search.data === undefined ? '' : search.data.map(vehicle=>{\r\n                                                        <option>{vehicle.stock.vehicle_no}</option>\r\n                                                    })\r\n                                                }\r\n                                            </select> */}\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    {/* <div className=\"col-sm-6\">\r\n                                        <div className=\"form-group\">\r\n                                            <span className=\"form-label\">Owner</span>\r\n                                            <input defaultValue={\r\n                                                search.data === undefined ? '' : search.data.stock[ind].seller.name\r\n                                            } className=\"form-control\" type=\"text\" onChange={onInputChange} name='owner' placeholder=\"Owner's Name\" />\r\n                                        </div>\r\n                                    </div> */}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '20px' }}>\r\n                        <button className=\"btn btn-primary\" type='submit' style={{ marginRight: '50px' }}>Save</button>\r\n                        <button className=\"btn btn-primary\" type='reset'>Reset</button>\r\n                    </div>\r\n                </form>\r\n            </div><br />\r\n            <div style={{ height: 500, width: '100%' }}>\r\n                <DataGrid\r\n                    rows={rows}\r\n                    columns={columns}\r\n                    pageSize={10}\r\n                    rowsPerPageOptions={[10]}\r\n                    checkboxSelection={false}\r\n                    disableSelectionOnClick\r\n                />\r\n                <Link to={`/Data_Entry/Enquiry_Generation`} className=\"btn btn-success\">\r\n                    Previous\r\n                </Link>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","D:\\Mitharis\\my-app\\src\\Components\\NavItems\\Data_Entry\\VehicleCrud.js",["225","226","227","228","229","230","231","232"],"import React, { useState } from 'react';\r\nimport {\r\n  gql,\r\n  useMutation,\r\n  useSubscription,\r\n  useQuery,\r\n} from \"@apollo/client\";\r\nimport { DataGrid, GridToolbar } from '@material-ui/data-grid';\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { Divider } from '@material-ui/core';\r\nimport { Switch, Route, Link } from \"react-router-dom\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n\r\nconst INSERT_STOCK = gql`\r\nmutation MyMutation($accidental: String!, $average: Int!, $bank: Int!, $bank_loan: Boolean!, $body_color: String!, $body_type: String!,  $chess_no: String!, $engine_displacement: String!, $engine_no: String!, $expected_price: bigint!, $extra_keys: Boolean!, $fuel_type: String!, $hp: Int!, $installment: String!, $insurance: String!, $kms_driven: bigint!, $loan_amount: bigint!, $no_of_owners: Int!, $noc: String!, $owner: Int!, $passing: String!, $registered: String!, $selling_price: bigint!, $stepny: Boolean!, $taxposition: String!, $transfer: String!, $transmission: String!, $vehicle_master: Int!, $vehicle_no: String!) {\r\n    insert_stock_one(object: {accidental: $accidental, average: $average, bank: $bank, bank_loan: $bank_loan, body_color: $body_color, body_type: $body_type,  chess_no: $chess_no, engine_displacement: $engine_displacement, engine_no: $engine_no, expected_price: $expected_price, extra_keys: $extra_keys, fuel_type: $fuel_type, hp: $hp, installment: $installment, insurance: $insurance, kms_driven: $kms_driven, loan_amount: $loan_amount, no_of_owners: $no_of_owners, noc: $noc, owner: $owner, passing: $passing, registered: $registered, selling_price: $selling_price, stepny: $stepny, taxposition: $taxposition, transfer: $transfer, transmission: $transmission, vehicle_master: $vehicle_master, vehicle_no: $vehicle_no}) {\r\n      id\r\n    }\r\n  }\r\n`\r\nconst UPDATE_STOCK = gql`\r\nmutation MyMutation($id: Int!, $accidental: String!, $average: Int!, $bank: Int!, $bank_loan: Boolean!, $body_color: String!, $body_type: String!, $buyer: Int!, $chess_no: String!, $engine_displacement: String!, $engine_no: String!, $expected_price: bigint!, $extra_keys: Boolean!, $fuel_type: String!, $hp: Int!, $installment: String!, $insurance: String!, $kms_driven: bigint!, $loan_amount: bigint!, $no_of_owners: Int!, $noc: String!, $owner: Int!, $passing: String!, $registered: String!, $selling_price: bigint!, $stepny: Boolean!, $taxposition: String!, $transfer: String!, $transmission: String!, $vehicle_master: Int!, $vehicle_no: String!) {\r\n    update_stock_by_pk(pk_columns: {id: $id}, _set: {accidental: $accidental, average: $average, bank: $bank, bank_loan: $bank_loan, body_color: $body_color, body_type: $body_type, buyer: $buyer, chess_no: $chess_no, engine_displacement: $engine_displacement, engine_no: $engine_no, expected_price: $expected_price, extra_keys: $extra_keys, fuel_type: $fuel_type, hp: $hp, installment: $installment, insurance: $insurance, kms_driven: $kms_driven, loan_amount: $loan_amount, no_of_owners: $no_of_owners, noc: $noc, owner: $owner, passing: $passing, registered: $registered, selling_price: $selling_price, stepny: $stepny, taxposition: $taxposition, transfer: $transfer, transmission: $transmission, vehicle_master: $vehicle_master, vehicle_no: $vehicle_no}) {\r\n      id\r\n    }\r\n  }\r\n  \r\n`\r\nconst READ_STOCK = gql`\r\nsubscription MySubscription {\r\n  stock {\r\n    accidental\r\n    average\r\n    bank\r\n    bank_loan\r\n    body_color\r\n    body_type\r\n    buyer\r\n    chess_no\r\n    engine_displacement\r\n    engine_no\r\n    expected_price\r\n    extra_keys\r\n    fuel_type\r\n    hp\r\n    id\r\n    installment\r\n    insurance\r\n    is_sold\r\n    kms_driven\r\n    loan_amount\r\n    no_of_owners\r\n    noc\r\n    owner\r\n    passing\r\n    registered\r\n    selling_price\r\n    stepny\r\n    taxposition\r\n    transfer\r\n    transmission\r\n    vehicle_master\r\n    vehicle_no\r\n    bank_master {\r\n      id\r\n      bank_name\r\n    }\r\n    buyerByBuyer {\r\n      id\r\n      name\r\n    }\r\n    seller {\r\n      id\r\n      name\r\n    }\r\n    vehicleMasterByVehicleMaster {\r\n      id\r\n      model\r\n    }\r\n  }\r\n}\r\n\r\n`\r\nconst DELETE_STOCK = gql`\r\nmutation MyMutation($id: Int!) {\r\n  delete_stock_by_pk(id: $id) {\r\n    id\r\n  }\r\n}\r\n`\r\nconst VEHICLE_QUERY=gql`\r\nquery MyQuery {\r\n  vehicle_master {\r\n    id\r\n    model\r\n    brand\r\n  }\r\n}\r\n`\r\nconst SELLER_QUERY=gql`\r\nquery MyQuery {\r\n  seller {\r\n    id\r\n    name\r\n  }\r\n}\r\n`\r\n\r\nconst BANK_QUERY=gql`\r\nquery MyQuery {\r\n  bank_master {\r\n    bank_name\r\n    branch_name\r\n    id\r\n    ifsc_code\r\n  }\r\n}\r\n\r\n`\r\nfunction VehicleCrud() {\r\n  const [showModal, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  const passing_year = [2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021];\r\n  const transmission = ['Manual','Automatic']\r\n  const key_stepny = ['true','false']\r\n  const {passPara} = useParams();\r\n  const [stock, setStock] = useState({\r\n    vehicle_master: '',\r\n    selling_price: '',\r\n    fuel_type: '',\r\n    body_type: '',\r\n    body_color: '',\r\n    owner: '',\r\n    no_of_owners: '',\r\n    passing: '',\r\n    kms_driven: '',\r\n    engine_displacement: '',\r\n    insurance: '',\r\n    transmission: '',\r\n    transfer: '',\r\n    chess_no: '',\r\n    noc: '',\r\n    engine_no: '',\r\n    hp: '',\r\n    average: '',\r\n    accidental: '',\r\n    registered: '',\r\n    taxposition: '',\r\n    //buyer: '',\r\n    expected_price: '',\r\n    bank_loan: '',\r\n    installment: '',\r\n    loan_amount: '',\r\n    extra_keys: '',\r\n    stepny: '',\r\n    bank: '',\r\n    vehicle_no: ''\r\n  })\r\n  const [modalStock, setModalStock] = useState({\r\n    id: '',\r\n    vehicle_master: '',\r\n    selling_price: '',\r\n    fuel_type: '',\r\n    body_type: '',\r\n    body_color: '',\r\n    owner: '',\r\n    no_of_owners: '',\r\n    passing: '',\r\n    kms_driven: '',\r\n    engine_displacement: '',\r\n    insurance: '',\r\n    transmission: '',\r\n    transfer: '',\r\n    chess_no: '',\r\n    noc: '',\r\n    engine_no: '',\r\n    hp: '',\r\n    average: '',\r\n    accidental: '',\r\n    registered: '',\r\n    taxposition: '',\r\n    buyer: '',\r\n    expected_price: '',\r\n    bank_loan: '',\r\n    installment: '',\r\n    loan_amount: '',\r\n    extra_keys: '',\r\n    stepny: '',\r\n    bank: '',\r\n    vehicle_no: ''\r\n  })\r\n  const onInputChange = (e) => {\r\n    setStock({ ...stock, [e.target.name]: e.target.value })\r\n    //console.log(stock)\r\n  }\r\n  const onModalInputChange = (e) => {\r\n    setModalStock({ ...modalStock, [e.target.name]: e.target.value })\r\n    //console.log(modalStock)\r\n  }\r\n  const onFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(stock);\r\n    insertStockData({\r\n      variables: {\r\n        vehicle_master: stock.vehicle_master,\r\n        selling_price: stock.selling_price,\r\n        fuel_type: stock.fuel_type,\r\n        body_type: stock.body_type,\r\n        body_color: stock.body_color,\r\n        owner: stock.owner,\r\n        no_of_owners: stock.no_of_owners,\r\n        passing: stock.passing,\r\n        kms_driven: stock.kms_driven,\r\n        engine_displacement: stock.engine_displacement,\r\n        insurance: stock.insurance,\r\n        transmission: stock.transmission,\r\n        transfer: stock.transfer,\r\n        chess_no: stock.chess_no,\r\n        noc: stock.noc,\r\n        engine_no: stock.engine_no,\r\n        hp: stock.hp,\r\n        average: stock.average,\r\n        accidental: stock.accidental,\r\n        registered: stock.registered,\r\n        taxposition: stock.taxposition,\r\n        //buyer: stock.buyer,\r\n        expected_price: stock.expected_price,\r\n        bank_loan: stock.bank_loan,\r\n        installment: stock.installment,\r\n        loan_amount: stock.loan_amount,\r\n        extra_keys: stock.extra_keys,\r\n        stepny: stock.stepny,\r\n        bank: stock.bank,\r\n        vehicle_no: stock.vehicle_no\r\n      }\r\n    })\r\n  }\r\n  const onModalFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(modalStock);\r\n    const newdata = upateStockData({\r\n      variables: {\r\n        id: modalStock.id,\r\n        vehicle_master: modalStock.vehicle_master,\r\n        selling_price: modalStock.selling_price,\r\n        fuel_type: modalStock.fuel_type,\r\n        body_type: modalStock.body_type,\r\n        body_color: modalStock.body_color,\r\n        owner: modalStock.owner,\r\n        no_of_owners: modalStock.no_of_owners,\r\n        passing: modalStock.passing,\r\n        kms_driven: modalStock.kms_driven,\r\n        engine_displacement: modalStock.engine_displacement,\r\n        insurance: modalStock.insurance,\r\n        transmission: modalStock.transmission,\r\n        transfer: modalStock.transfer,\r\n        chess_no: modalStock.chess_no,\r\n        noc: modalStock.noc,\r\n        engine_no: modalStock.engine_no,\r\n        hp: modalStock.hp,\r\n        average: modalStock.average,\r\n        accidental: modalStock.accidental,\r\n        registered: modalStock.registered,\r\n        taxposition: modalStock.taxposition,\r\n        buyer: modalStock.buyer,\r\n        expected_price: modalStock.expected_price,\r\n        bank_loan: modalStock.bank_loan,\r\n        installment: modalStock.installment,\r\n        loan_amount: modalStock.loan_amount,\r\n        extra_keys: modalStock.extra_keys,\r\n        stepny: modalStock.stepny,\r\n        bank: modalStock.bank,\r\n        vehicle_no: modalStock.vehicle_no\r\n      }\r\n    })\r\n    handleClose();\r\n    console.log(newdata);\r\n  }\r\n  const editStock = (row) => {\r\n    console.log(row.id);\r\n    // setId(row.id);\r\n    setModalStock({\r\n      id: row.id,\r\n      vehicle_master: row.vehicle_master,\r\n      selling_price: row.selling_price,\r\n      fuel_type: row.fuel_type,\r\n      body_type: row.body_type,\r\n      body_color: row.body_color,\r\n      owner: row.owner,\r\n      no_of_owners: row.no_of_owners,\r\n      passing: row.passing,\r\n      kms_driven: row.kms_driven,\r\n      engine_displacement: row.engine_displacement,\r\n      insurance: row.insurance,\r\n      transmission: row.transmission,\r\n      transfer: row.transfer,\r\n      chess_no: row.chess_no,\r\n      noc: row.noc,\r\n      engine_no: row.engine_no,\r\n      hp: row.hp,\r\n      average: row.average,\r\n      accidental: row.accidental,\r\n      registered: row.registered,\r\n      taxposition: row.taxposition,\r\n      buyer: row.buyer,\r\n      expected_price: row.expected_price,\r\n      bank_loan: row.bank_loan,\r\n      installment: row.installment,\r\n      loan_amount: row.loan_amount,\r\n      extra_keys: row.extra_keys,\r\n      stepny: row.stepny,\r\n      bank: row.bank,\r\n      vehicle_no: row.vehicle_no\r\n    })\r\n    handleShow();\r\n    //loadVehicle({ variables: { id:id } });\r\n    //console.log(data3);\r\n  }\r\n  const deleteStock = (id) => {\r\n    deleteStockData({ variables: { id: id } })\r\n  }\r\n  const vehicledata=useQuery(VEHICLE_QUERY);\r\n  const sellerdata=useQuery(SELLER_QUERY);\r\n  const bankdata=useQuery(BANK_QUERY);\r\n  const [insertStockData, { insertData }] = useMutation(INSERT_STOCK);\r\n  const [upateStockData, { updateData }] = useMutation(UPDATE_STOCK);\r\n  const [deleteStockData, { deleteData }] = useMutation(DELETE_STOCK);\r\n  const { loading, error, data } = useSubscription(READ_STOCK);\r\n  // const [loadVehicle,{loading3,data3}] = useLazyQuery(VehicleMasterByPK,{\r\n  //   fetchPolicy: 'network-only',\r\n  // });\r\n\r\n\r\n  if (loading || vehicledata.loading || sellerdata.loading || bankdata.loading) return <div style={{ width: \"100%\", marginTop: '25%', textAlign: 'center' }}><CircularProgress /></div>;\r\n  if (error) return `Error! ${error.message}`;\r\n  const columns = [\r\n    {\r\n      field: 'id',\r\n      headerName: 'ID',\r\n      width: 150,\r\n      hide: false,\r\n    },\r\n    // {\r\n    //   field: 'vehicle_master',\r\n    //   headerName: 'Vehicle Master',\r\n    //   width: 150,\r\n    //   hide: false,\r\n    // },\r\n    {\r\n      field: 'vehicle_master',\r\n      headerName: 'Vehicle Master',\r\n      width: 150,\r\n      valueGetter: (params) => {\r\n        return params.row.vehicleMasterByVehicleMaster.model;\r\n      }\r\n    },\r\n    {\r\n      field: 'selling_price',\r\n      headerName: 'Selling Price',\r\n      width: 150,\r\n      editable: false,\r\n    },\r\n    {\r\n      field: 'fuel_type',\r\n      headerName: 'Fuel Type',\r\n      width: 150,\r\n      editable: false,\r\n    },\r\n\r\n    {\r\n      field: 'body_type',\r\n      headerName: 'Body Type',\r\n      width: 250,\r\n      editable: false,\r\n    },\r\n\r\n    {\r\n      field: 'body_color',\r\n      headerName: 'Body Color',\r\n      width: 150,\r\n      editable: false,\r\n    },\r\n    // {\r\n    //   field: 'owner',\r\n    //   headerName: 'Owner',\r\n    //   width: 150,\r\n    //   editable: false,\r\n    // },\r\n    {\r\n      field: 'owner',\r\n      headerName: 'Owner',\r\n      width: 150,\r\n      valueGetter: (params) => {\r\n        return params.row.seller.name;\r\n      }\r\n    },\r\n    {\r\n      field: 'no_of_owners',\r\n      headerName: 'No of Owners',\r\n      width: 150,\r\n      editable: false,\r\n    },\r\n\r\n    {\r\n      field: 'passing',\r\n      headerName: 'Passing',\r\n      width: 150,\r\n      editable: false,\r\n    },\r\n\r\n\r\n    {\r\n      field: 'kms_driven',\r\n      headerName: 'KMS Driven',\r\n      width: 150,\r\n      editable: false,\r\n    },\r\n\r\n    {\r\n      field: 'engine_displacement',\r\n      headerName: 'Engine Displacement',\r\n      width: 150,\r\n      editable: false,\r\n    },\r\n\r\n    {\r\n      field: 'insurance',\r\n      headerName: 'Insurance',\r\n      width: 150,\r\n      editable: false,\r\n    },\r\n\r\n    {\r\n      field: 'transmission',\r\n      headerName: 'Transmission',\r\n      width: 150,\r\n      editable: false,\r\n    },\r\n\r\n    {\r\n      field: 'transfer',\r\n      headerName: 'Transfer',\r\n      width: 150,\r\n      editable: false,\r\n    },\r\n    {\r\n      field: 'chess_no',\r\n      headerName: 'Chess No',\r\n      width: 150,\r\n      editable: false,\r\n    },\r\n    {\r\n      field: 'noc',\r\n      headerName: 'NOC',\r\n      width: 150,\r\n      editable: false,\r\n    },\r\n    {\r\n      field: 'engine_no',\r\n      headerName: 'Engine No',\r\n      width: 150,\r\n      editable: false,\r\n    },\r\n    {\r\n      field: 'hp',\r\n      headerName: 'HP',\r\n      width: 150,\r\n      editable: false,\r\n    },\r\n    {\r\n      field: 'average',\r\n      headerName: 'Average',\r\n      width: 150,\r\n      editable: false,\r\n    },\r\n    {\r\n      field: 'accidental',\r\n      headerName: 'Accidental',\r\n      width: 150,\r\n      editable: false,\r\n    },\r\n    {\r\n      field: 'registered',\r\n      headerName: 'Registered',\r\n      width: 150,\r\n      editable: false,\r\n    },\r\n    {\r\n      field: 'taxposition',\r\n      headerName: 'Taxposition',\r\n      width: 150,\r\n      editable: false,\r\n    },\r\n    // {\r\n    //   field: 'buyer',\r\n    //   headerName: 'Buyer',\r\n    //   width: 150,\r\n    //   editable: false,\r\n    // },\r\n    // {\r\n    //   field: 'buyer',\r\n    //   headerName: 'Buyer',\r\n    //   width: 150,\r\n    //   valueGetter: (params) => {\r\n    //     return params.row.buyerByBuyer.name;\r\n    //   }\r\n    // },\r\n    {\r\n      field: 'expected_price',\r\n      headerName: 'Expected Price',\r\n      width: 150,\r\n      editable: false,\r\n    },\r\n    {\r\n      field: 'bank_loan',\r\n      headerName: 'Bank Loan',\r\n      width: 150,\r\n      editable: false,\r\n    },\r\n    {\r\n      field: 'installment',\r\n      headerName: 'Installment',\r\n      width: 150,\r\n      editable: false,\r\n    },\r\n    {\r\n      field: 'loan_amount',\r\n      headerName: 'Loan Amount',\r\n      width: 150,\r\n      editable: false,\r\n    },\r\n    {\r\n      field: 'extra_keys',\r\n      headerName: 'Extra Keys',\r\n      width: 150,\r\n      editable: false,\r\n    },\r\n    {\r\n      field: 'stepny',\r\n      headerName: 'Stepny',\r\n      width: 150,\r\n      editable: false,\r\n    },\r\n    // {\r\n    //   field: 'bank',\r\n    //   headerName: 'Bank',\r\n    //   width: 150,\r\n    //   editable: false,\r\n    // },\r\n    {\r\n      field: 'bank',\r\n      headerName: 'Bank',\r\n      width: 150,\r\n      valueGetter: (params) => {\r\n        return params.row.bank_master.bank_name;\r\n      }\r\n    },\r\n    {\r\n      field: 'vehicle_no',\r\n      headerName: 'Vehicle No',\r\n      width: 150,\r\n      editable: false,\r\n    },\r\n\r\n    {\r\n      field: 'action',\r\n      headerName: 'Action',\r\n      width: 200,\r\n      renderCell: (params) => {\r\n        return (\r\n          <div className=\"\" style={{ width: \"100%\", textAlign: 'center', margin: '0 40px' }}>\r\n            <button type=\"button\" className=\"btn btn-warning\" on data-toggle=\"tooltip\" title=\"Edit\" onClick={() => { editStock(params.row) }}><i className=\"fa fa-pencil\"></i></button>\r\n            <button style={{ marginLeft: '20%' }} className=\"btn btn-danger\" data-toggle=\"tooltip\" title=\"Delete\" onClick={() => { deleteStock(params.row.id) }}><i className=\"fa fa-trash\"></i></button>\r\n\r\n          </div>\r\n        );\r\n      }\r\n    },\r\n  ];\r\n  //console.log(data);\r\n  const rows = data.stock;\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <Modal show={showModal} onHide={handleClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Modal heading</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className=\"col-md-12\">\r\n              <form className=\"form-group\" onSubmit={e => onModalFormSubmit(e)}>\r\n                <div className=\"row\">\r\n\r\n                  <div className=\"field col-md-6\">\r\n                    <label>ID</label>\r\n                    <input className=\"form-control\" defaultValue={modalStock.id} onChange={e => { onModalInputChange(e) }} name=\"id\" type=\"text\" required />\r\n                  </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                  <div className=\"field col-md-6\">\r\n                    <label>Vehicle No</label>\r\n                    <input className=\"form-control\" defaultValue={modalStock.vehicle_no} onChange={e => { onModalInputChange(e) }} name=\"vehicle_no\" type=\"text\" required />\r\n                  </div>\r\n\r\n                  <div className=\"field col-md-6\">\r\n                    <label>Vehicle Master</label>\r\n                    {/* <input className=\"form-control\" defaultValue={modalStock.vehicle_master} onChange={e => { onModalInputChange(e) }} name=\"vehicle_master\" type=\"text\" required /> */}\r\n                    <select defaultValue={modalStock.vehicle_master} className=\"form-control\" name=\"vehicle_master\">\r\n                      <option>Select Vehicle</option>\r\n                      {vehicledata.data.vehicle_master.map(vehicle => (\r\n                        <option key={vehicle.id} value={vehicle.id}>{vehicle.model}</option>\r\n                      ))}  \r\n                    </select>\r\n                  </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                  <div className=\"field col-md-6\">\r\n                    <label>Selling Price</label>\r\n                    <input className=\"form-control\" defaultValue={modalStock.selling_price} onChange={e => { onModalInputChange(e) }} name=\"selling_price\" type=\"text\" required />\r\n                  </div>\r\n\r\n                  <div className=\"field col-md-6\">\r\n                    <label>Fuel Type</label>\r\n                    {/* <input className=\"form-control\" defaultValue={modalStock.fuel_type} onChange={e => { onModalInputChange(e) }} name=\"fuel_type\" type=\"text\" required /> */}\r\n                    <select defaultValue={modalStock.fuel_type} onChange={e => { onModalInputChange(e) }} className=\"form-control\" name=\"fuel_type\" required>\r\n                      <option>Select Fuel Type</option>\r\n                      <option value='Petrol'>Petrol</option>\r\n                      <option value='Disel'>Disel</option>\r\n                      <option value='Electric'>Electric</option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                  <div className=\"field col-md-6\">\r\n                    <label>Body Type</label>\r\n                    <input className=\"form-control\" defaultValue={modalStock.body_type} onChange={e => { onModalInputChange(e) }} name=\"body_type\" type=\"text\" required />\r\n                  </div>\r\n\r\n                  <div className=\"field col-md-6\">\r\n                    <label>Body color</label>\r\n                    <input className=\"form-control\" defaultValue={modalStock.body_color} onChange={e => { onModalInputChange(e) }} name=\"body_color\" type=\"text\" required />\r\n                  </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                  <div className=\"field col-md-6\">\r\n                    <label>Owner</label>\r\n                    {/* <input className=\"form-control\" defaultValue={modalStock.owner} onChange={e => { onModalInputChange(e) }} name=\"owner\" type=\"text\" required /> */}\r\n                    <select defaultValue={modalStock.owner} className=\"form-control\" name=\"owner\">\r\n                      <option>Select Owner</option>\r\n                      {sellerdata.data.seller.map(seller => (\r\n                        <option key={seller.id} value={seller.id}>{seller.name}</option>\r\n                      ))}  \r\n                    </select>\r\n                  </div>\r\n\r\n                  <div className=\"field col-md-6\">\r\n                    <label>No of Owners</label>\r\n                    <input className=\"form-control\" defaultValue={modalStock.no_of_owners} onChange={e => { onModalInputChange(e) }} name=\"no_of_cars\" type=\"text\" required />\r\n                  </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                  <div className=\"field col-md-6\">\r\n                    <label>Passing</label>\r\n                    <input className=\"form-control\" defaultValue={modalStock.passing} onChange={e => { onModalInputChange(e) }} name=\"passing\" type=\"text\" required />\r\n                  </div>\r\n\r\n                  <div className=\"field col-md-6\">\r\n                    <label>KMS Driven</label>\r\n                    <input className=\"form-control\" defaultValue={modalStock.kms_driven} onChange={e => { onModalInputChange(e) }} name=\"kms_driven\" type=\"text\" required />\r\n                  </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                  <div className=\"field col-md-6\">\r\n                    <label>Engine Displacement</label>\r\n                    <input className=\"form-control\" defaultValue={modalStock.engine_displacement} onChange={e => { onModalInputChange(e) }} name=\"engine_displacement\" type=\"text\" required />\r\n                  </div>\r\n\r\n                  <div className=\"field col-md-6\">\r\n                    <label>Insurance</label>\r\n                    <input className=\"form-control\" defaultValue={modalStock.insurance} onChange={e => { onModalInputChange(e) }} name=\"insurance\" type=\"text\" required />\r\n                  </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                  <div className=\"field col-md-6\">\r\n                    <label>Transmission</label>\r\n                    {/* <input className=\"form-control\" defaultValue={modalStock.transmission} onChange={e => { onModalInputChange(e) }} name=\"transmission\" type=\"text\" required /> */}\r\n                    <select className=\"form-control\" defaultValue={modalStock.transmission} onChange={e => { onModalInputChange(e) }}name=\"transmission\">\r\n                      <option>Select Transmission</option>\r\n                      {transmission.map(transmission => (\r\n                        <option key={transmission} value={transmission}>{transmission}</option>\r\n                      ))}\r\n                    </select>\r\n                  </div>\r\n\r\n                  <div className=\"field col-md-6\">\r\n                    <label>Transfer</label>\r\n                    <input className=\"form-control\" defaultValue={modalStock.transfer} onChange={e => { onModalInputChange(e) }} name=\"transfer\" type=\"text\" required />\r\n                  </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                  <div className=\"field col-md-6\">\r\n                    <label>Chess No</label>\r\n                    <input className=\"form-control\" defaultValue={modalStock.chess_no} onChange={e => { onModalInputChange(e) }} name=\"chess_no\" type=\"text\" required />\r\n                  </div>\r\n\r\n                  <div className=\"field col-md-6\">\r\n                    <label>NOC</label>\r\n                    <input className=\"form-control\" defaultValue={modalStock.noc} onChange={e => { onModalInputChange(e) }} name=\"noc\" type=\"text\" required />\r\n                  </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                  <div className=\"field col-md-6\">\r\n                    <label>Engine No</label>\r\n                    <input className=\"form-control\" defaultValue={modalStock.engine_no} onChange={e => { onModalInputChange(e) }} name=\"engine_no\" type=\"text\" required />\r\n                  </div>\r\n\r\n                  <div className=\"field col-md-6\">\r\n                    <label>HP</label>\r\n                    <input className=\"form-control\" defaultValue={modalStock.hp} onChange={e => { onModalInputChange(e) }} name=\"hp\" type=\"text\" required />\r\n                  </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                  <div className=\"field col-md-6\">\r\n                    <label>Average</label>\r\n                    <input className=\"form-control\" defaultValue={modalStock.average} onChange={e => { onModalInputChange(e) }} name=\"average\" type=\"text\" required />\r\n                  </div>\r\n\r\n                  <div className=\"field col-md-6\">\r\n                    <label>Accidental</label>\r\n                    <input className=\"form-control\" defaultValue={modalStock.accidental} onChange={e => { onModalInputChange(e) }} name=\"accidental\" type=\"text\" required />\r\n                  </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                  <div className=\"field col-md-6\">\r\n                    <label>Registered</label>\r\n                    <input className=\"form-control\" defaultValue={modalStock.registered} onChange={e => { onModalInputChange(e) }} name=\"registered\" type=\"text\" required />\r\n                  </div>\r\n\r\n                  <div className=\"field col-md-6\">\r\n                    <label>Taxposition</label>\r\n                    <input className=\"form-control\" defaultValue={modalStock.taxposition} onChange={e => { onModalInputChange(e) }} name=\"taxposition\" type=\"text\" required />\r\n                  </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                  {/* <div className=\"field col-md-6\">\r\n                    <label>Buyer</label>\r\n                     <input className=\"form-control\" defaultValue={modalStock.buyer} onChange={e => { onModalInputChange(e) }} name=\"buyer\" type=\"text\" required />\r\n                    \r\n                  </div> */}\r\n\r\n                  <div className=\"field col-md-6\">\r\n                    <label>Expected Price</label>\r\n                    <input className=\"form-control\" defaultValue={modalStock.expected_price} onChange={e => { onModalInputChange(e) }} name=\"expected_price\" type=\"text\" required />\r\n                  </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                  <div className=\"field col-md-6\">\r\n                    <label>Bank Loan</label>\r\n                    <input className=\"form-control\" defaultValue={modalStock.bank_loan} onChange={e => { onModalInputChange(e) }} name=\"bank_loan\" type=\"text\" required />\r\n                  </div>\r\n\r\n                  <div className=\"field col-md-6\">\r\n                    <label>Installment</label>\r\n                    <input className=\"form-control\" defaultValue={modalStock.installment} onChange={e => { onModalInputChange(e) }} name=\"installment\" type=\"text\" required />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                  <div className=\"field col-md-6\">\r\n                    <label>Loan Amount</label>\r\n                    <input className=\"form-control\" defaultValue={modalStock.loan_amount} onChange={e => { onModalInputChange(e) }} name=\"loan_amount\" type=\"text\" required />\r\n                  </div>\r\n\r\n                  <div className=\"field col-md-6\">\r\n                    <label>Extra Keys</label>\r\n                    {/* <input className=\"form-control\" defaultValue={modalStock.extra_keys} onChange={e => { onModalInputChange(e) }} name=\"extra_keys\" type=\"text\" required /> */}\r\n                    <select onChange={e => { onModalInputChange(e) }} defaultValue={modalStock.extra_keys} className=\"form-control\" name=\"extra_keys\">\r\n                      <option>Select Value</option>\r\n                      {key_stepny.map(key_stepny => (\r\n                        <option key={key_stepny} value={key_stepny}>{key_stepny}</option>\r\n                      ))}  \r\n                    </select>\r\n                  \r\n                  </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                  <div className=\"field col-md-6\">\r\n                    <label>Stepny</label>\r\n                    {/* <input className=\"form-control\" defaultValue={modalStock.stepny} onChange={e => { onModalInputChange(e) }} name=\"stepny\" type=\"text\" required /> */}\r\n                    <select onChange={e => { onModalInputChange(e) }} defaultValue={modalStock.stepny} className=\"form-control\" name=\"stepny\">\r\n                      <option>Select Value</option>\r\n                      {key_stepny.map(key_stepny => (\r\n                        <option key={key_stepny} value={key_stepny}>{key_stepny}</option>\r\n                      ))}  \r\n                    </select>\r\n                  </div>\r\n\r\n                  <div className=\"field col-md-6\">\r\n                    <label>Bank</label>\r\n                    {/* <input className=\"form-control\" defaultValue={modalStock.bank} onChange={e => { onModalInputChange(e) }} name=\"bank\" type=\"text\" required /> */}\r\n                    <select defaultValue={modalStock.bank} onChange={e => { onModalInputChange(e) }} className=\"form-control\" name=\"bank\">\r\n                      <option>Select Value</option>\r\n                      {bankdata.data.bank_master.map(bank => (\r\n                        <option key={bank.id} value={bank.id}>{bank.bank_name}</option>\r\n                      ))}  \r\n                    </select>\r\n                  </div>\r\n                </div>\r\n                <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '20px' }}>\r\n                  <button className=\"btn btn-primary\" type='submit' style={{ marginRight: '50px' }}>Save</button>\r\n                  <button className=\"btn btn-primary\" type='reset'>Reset</button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleClose}>\r\n              Close\r\n            </Button>\r\n\r\n          </Modal.Footer>\r\n        </Modal>\r\n        <div className=\"col-md-12\">\r\n          <h1 style={{ width: '100%', textAlign: 'center' }}>Vehicle Registration</h1>\r\n          <Divider style={{ marginBottom: '10px', }} />\r\n          <form className=\"form-group\" onSubmit={e => onFormSubmit(e)}>\r\n\r\n            <div className=\"row\">\r\n              <div className=\"field col-md-6\">\r\n                <label>Vehicle Number</label>\r\n                <input className=\"form-control\" onChange={e => onInputChange(e)} name=\"vehicle_no\" type=\"text\" required />\r\n              </div>\r\n              <div className=\"field col-md-6\">\r\n                <label>Vehicle Master</label>\r\n                {/* <input className=\"form-control\" onChange={e => onInputChange(e)} name=\"vehicle_master\" type=\"text\" required /> */}\r\n                <select onChange={e => onInputChange(e)} className=\"form-control\" name=\"vehicle_master\">\r\n                      <option>Select Vehicle</option>\r\n                      {vehicledata.data.vehicle_master.map(vehicle => (\r\n                        <option key={vehicle.id} value={vehicle.id}>{vehicle.model}</option>\r\n                      ))}  \r\n                </select>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"field col-md-6\">\r\n                <label>Selling Price</label>\r\n                <input className=\"form-control\" onChange={e => onInputChange(e)} name=\"selling_price\" type=\"text\" required />\r\n              </div>\r\n              <div className=\"field col-md-6\">\r\n                <label>Bank</label>\r\n                {/* <input className=\"form-control\" onChange={e => onInputChange(e)} name=\"bank\" type=\"text\" required /> */}\r\n                <select className=\"form-control\" onChange={e => onInputChange(e)} name=\"bank\">\r\n                  <option>Select Bank</option>\r\n                  {bankdata.data.bank_master.map(bank => (\r\n                    <option key={bank.id} value={bank.id}>{bank.bank_name}</option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n              <div className=\"field col-md-6\">\r\n                <label>Fuel Type</label>\r\n                {/* <input onChange={e => onInputChange(e)} className=\"form-control\" name=\"fuel_type\" type=\"text\" placeholder='Enter Your Fuel Type' required/> */}\r\n                <select className=\"form-control\" onChange={e => onInputChange(e)} name=\"fuel_type\" required>\r\n                  <option>Select Fuel Type</option>\r\n                  <option value='Petrol'>Petrol</option>\r\n                  <option value='Disel'>Disel</option>\r\n                  <option value='Electric'>Electric</option>\r\n                </select>\r\n              </div>\r\n\r\n              <div className=\"field col-md-6\">\r\n                <label>KMS Driven</label>\r\n                <input className=\"form-control\" onChange={e => onInputChange(e)} name=\"kms_driven\" type=\"text\" required />\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"field col-md-6\">\r\n                <label>Engine Displacement</label>\r\n                <input className=\"form-control\" onChange={e => onInputChange(e)} name=\"engine_displacement\" type=\"text\" required />\r\n              </div>\r\n\r\n              <div className=\"field col-md-6\">\r\n                <label>Body Type</label>\r\n                {/* <input onChange={e => onInputChange(e)} className=\"form-control\" name=\"body_type\" type=\"text\" placeholder='Enter Your Body Type' required /> */}\r\n                <select className=\"form-control\" onChange={e => onInputChange(e)} name=\"body_type\">\r\n                  <option>Select Body Type</option>\r\n                  <option value='SUV'>SUV</option>\r\n                  <option value='SEDAW'>SEDAW</option>\r\n                  <option value='MUV'>MUV</option>\r\n                  <option value='HATCHBCK'>HATCHBCK</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"field col-md-6\">\r\n                <label>Number Of Owners</label>\r\n                <input className=\"form-control\" onChange={e => onInputChange(e)} name=\"no_of_owners\" type=\"text\" required />\r\n              </div>\r\n              <div className=\"field col-md-6\">\r\n                <label>Passing Year</label>\r\n                {/* <input onChange={e => onInputChange(e)} className=\"form-control\" name=\"passing_year\" type=\"text\" placeholder='Enter Your Passing Year' required /> */}\r\n                <select className=\"form-control\" onChange={e => onInputChange(e)} name=\"passing\">\r\n                  <option>Select Passing Year</option>\r\n                  {passing_year.map(year => (\r\n                    <option key={year} value={year}>{year}</option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"field col-md-6\">\r\n                <label>Engine Number</label>\r\n                <input className=\"form-control\" onChange={e => onInputChange(e)} name=\"engine_no\" type=\"text\" required />\r\n              </div>\r\n              <div className=\"field col-md-6\">\r\n                <label>Transmission</label>\r\n                {/* <input className=\"form-control\" onChange={e => onInputChange(e)} name=\"transmission\" type=\"text\" required /> */}\r\n                <select className=\"form-control\" onChange={e => onInputChange(e)} name=\"transmission\">\r\n                  <option>Select Transmission</option>\r\n                  {transmission.map(transmission => (\r\n                    <option key={transmission} value={transmission}>{transmission}</option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"field col-md-6\">\r\n                <label>Chess Number</label>\r\n                <input className=\"form-control\" onChange={e => onInputChange(e)} name=\"chess_no\" type=\"text\" required />\r\n              </div>\r\n              <div className=\"field col-md-6\">\r\n                <label>Transfer</label>\r\n                <input className=\"form-control\" onChange={e => onInputChange(e)} name=\"transfer\" type=\"text\" required />\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"field col-md-6\">\r\n                <label>Insurance</label>\r\n                <input className=\"form-control\" onChange={e => onInputChange(e)} name=\"insurance\" type=\"text\" required />\r\n              </div>\r\n              <div className=\"field col-md-6\">\r\n                <label>NOC</label>\r\n                <input className=\"form-control\" onChange={e => onInputChange(e)} name=\"noc\" type=\"text\" required />\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"field col-md-6\">\r\n                <label>HP</label>\r\n                <input className=\"form-control\" onChange={e => onInputChange(e)} name=\"hp\" type=\"text\" required />\r\n              </div>\r\n              <div className=\"field col-md-6\">\r\n                <label>Average</label>\r\n                <input className=\"form-control\" onChange={e => onInputChange(e)} name=\"average\" type=\"text\" required />\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"field col-md-6\">\r\n                <label>Accidental</label>\r\n                <input className=\"form-control\" onChange={e => onInputChange(e)} name=\"accidental\" type=\"text\" required />\r\n              </div>\r\n              <div className=\"field col-md-6\">\r\n                <label>Registered</label>\r\n                <input className=\"form-control\" onChange={e => onInputChange(e)} name=\"registered\" type=\"text\" required />\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"field col-md-6\">\r\n                <label>Expected Price</label>\r\n                <input className=\"form-control\" onChange={e => onInputChange(e)} name=\"expected_price\" type=\"text\" required />\r\n              </div>\r\n              <div className=\"field col-md-6\">\r\n                <label>Bank_loan</label>\r\n                <input className=\"form-control\" onChange={e => onInputChange(e)} name=\"bank_loan\" type=\"text\" required />\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"field col-md-6\">\r\n                <label>Installment</label>\r\n                <input className=\"form-control\" onChange={e => onInputChange(e)} name=\"installment\" type=\"text\" required />\r\n              </div>\r\n              <div className=\"field col-md-6\">\r\n                <label>Loan Amount</label>\r\n                <input className=\"form-control\" onChange={e => onInputChange(e)} name=\"loan_amount\" type=\"text\" required />\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"field col-md-6\">\r\n                <label>Extra Keys</label>\r\n                {/* <input className=\"form-control\" onChange={e => onInputChange(e)} name=\"extra_keys\" type=\"text\" required /> */}\r\n                <select onChange={e => onInputChange(e)} className=\"form-control\" name=\"extra_keys\">\r\n                      <option>Select Value</option>\r\n                      {key_stepny.map(key_stepny => (\r\n                        <option key={key_stepny} value={key_stepny}>{key_stepny}</option>\r\n                      ))}  \r\n                    </select>\r\n              </div>\r\n              <div className=\"field col-md-6\">\r\n                <label>Stepny</label>\r\n                {/* <input className=\"form-control\" onChange={e => onInputChange(e)} name=\"stepny\" type=\"text\" required /> */}\r\n                <select onChange={e => onInputChange(e)} className=\"form-control\" name=\"stepny\">\r\n                      <option>Select Value</option>\r\n                      {key_stepny.map(key_stepny => (\r\n                        <option key={key_stepny} value={key_stepny}>{key_stepny}</option>\r\n                      ))}  \r\n                </select>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"field col-md-6\">\r\n                <label>Owner</label>\r\n                {/* <input className=\"form-control\" onChange={e => onInputChange(e)} name=\"owner\" type=\"text\" required /> */}\r\n                <select onChange={e => onInputChange(e)} className=\"form-control\" name=\"owner\">\r\n                  <option>Select Owner</option>\r\n                    {sellerdata.data.seller.map(seller => (\r\n                      <option key={seller.id} value={seller.id}>{seller.name}</option>\r\n                    ))}  \r\n                </select>\r\n              </div>\r\n              {/* <div className=\"field col-md-6\">\r\n                <label>Buyer</label>\r\n                <input className=\"form-control\" onChange={e => onInputChange(e)} name=\"buyer\" type=\"text\" required />\r\n              </div> */}\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"field col-md-6\">\r\n                <label>Taxposition</label>\r\n                <input className=\"form-control\" onChange={e => onInputChange(e)} name=\"taxposition\" type=\"text\" required />\r\n              </div>\r\n              <div className=\"field col-md-6\">\r\n                <label>Body Color</label>\r\n                <input className=\"form-control\" onChange={e => onInputChange(e)} name=\"body_color\" type=\"text\" required />\r\n              </div>\r\n            </div>\r\n            <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '20px' }}>\r\n              <button className=\"btn btn-primary\" type='submit' style={{ marginRight: '50px' }}>Save</button>\r\n\r\n              <Link to={`/Data_Entry/Vehicle_Registration`} style={{ marginRight: '50px' }} className=\"btn btn-success\">\r\n                Previous\r\n              </Link>\r\n              <Link to={`/Data_Entry/Delivery_Note`} className=\"btn btn-success\" style={{ marginRight: '50px' }}>\r\n              Next\r\n            </Link>\r\n              <button className=\"btn btn-primary\" type='reset'>Reset</button>\r\n            </div>\r\n          </form>\r\n        </div><br />\r\n        <div style={{ height: 500, width: '100%' }}>\r\n          <DataGrid\r\n            rows={rows}\r\n            columns={columns}\r\n            pageSize={10}\r\n            rowsPerPageOptions={[10]}\r\n            checkboxSelection={false}\r\n            disableSelectionOnClick\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default VehicleCrud;","D:\\Mitharis\\my-app\\src\\Components\\NavItems\\Data_Entry\\EnquiryCrud.js",["233","234"],"import React, { useState } from 'react'\r\nimport { CircularProgress, Divider } from '@material-ui/core';\r\nimport { gql, useMutation, useSubscription } from '@apollo/client';\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport { Switch, Route, Link } from \"react-router-dom\";\r\n\r\nconst EnquiryQuery = gql`\r\nsubscription MySubscription {\r\n    enquiry {\r\n        id\r\n        buyer\r\n        adhaar\r\n        pan\r\n        vehicle\r\n    }\r\n  }\r\n  \r\n  `\r\n\r\nconst INSERT_ENQUIRY = gql`\r\nmutation MyMutation($adhaar: String!, $buyer: Int!, $pan: String!, $vehicle: Int!) {\r\n    insert_enquiry_one(object: {adhaar: $adhaar, buyer: $buyer, pan: $pan, vehicle: $vehicle}) {\r\n      id\r\n    }\r\n  }   \r\n  `\r\nconst UPDATE_ENQUIRY = gql`\r\nmutation MyMutation($id:Int!,$adhaar: String!, $buyer: Int!, $pan: String!, $vehicle: Int!) {\r\n    update_enquiry_by_pk(pk_columns: {id:$id}, _set: {adhaar: $adhaar, buyer: $buyer, pan: $pan, vehicle: $vehicle}) {\r\n      id\r\n    }\r\n  }\r\n`\r\nconst DELETE_ENQUIRY = gql`\r\nmutation MyMutation($id:Int!) {\r\n    delete_enquiry_by_pk(id: $id) {\r\n      id\r\n    }\r\n  }\r\n`\r\nexport default function EnquiryCrud() {\r\n    const [showModal, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    const [enquiry, setEnquiry] = useState({\r\n        buyer: \"\",\r\n        adhaar: \"\",\r\n        pan: \"\",\r\n        vehicle: \"\"\r\n    })\r\n    const [modalEnquiry, setModalEnquiry] = useState({\r\n        id: \"\",\r\n        buyer: \"\",\r\n        adhaar: \"\",\r\n        pan: \"\",\r\n        vehicle: \"\"\r\n    })\r\n    const onInputChange = (e) => {\r\n        setEnquiry({ ...enquiry, [e.target.name]: e.target.value })\r\n    }\r\n    const onModalInputChange = (e) => {\r\n        setModalEnquiry({ ...modalEnquiry, [e.target.name]: e.target.value })\r\n    }\r\n    const onFormSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(enquiry);\r\n        insertEnquiryData({\r\n            variables: {\r\n                buyer: enquiry.buyer,\r\n                adhaar: enquiry.adhaar,\r\n                pan: enquiry.pan,\r\n                vehicle: enquiry.vehicle\r\n            }\r\n        });\r\n    }\r\n    const onModalFormSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(enquiry);\r\n        updateEnquiryData({\r\n            variables: {\r\n                id: modalEnquiry.id,\r\n                buyer: modalEnquiry.buyer,\r\n                adhaar: modalEnquiry.adhaar,\r\n                pan: modalEnquiry.pan,\r\n                vehicle: modalEnquiry.vehicle\r\n            }\r\n        });\r\n        handleClose();\r\n    }\r\n    const editEnquiry = (row) => {\r\n        setModalEnquiry({\r\n            id: row.id,\r\n            buyer: row.buyer,\r\n            adhaar: row.adhaar,\r\n            pan: row.pan,\r\n            vehicle: row.vehicle\r\n        })\r\n        handleShow();\r\n    }\r\n    const deleteEnquiry = (id) => {\r\n        deleteEnquiryData({ variables: { id: id } })\r\n    }\r\n    const [insertEnquiryData] = useMutation(INSERT_ENQUIRY);\r\n    const [updateEnquiryData] = useMutation(UPDATE_ENQUIRY);\r\n    const [deleteEnquiryData] = useMutation(DELETE_ENQUIRY);\r\n    const { loading, error, data } = useSubscription(EnquiryQuery);\r\n    if (loading) return <div style={{ width: \"100%\", marginTop: '25%', textAlign: 'center' }}><CircularProgress /></div>;\r\n    if (error) return `Error! ${error.message}`;\r\n    const columns = [\r\n        {\r\n            field: 'id',\r\n            headerName: 'ID',\r\n            width: 100,\r\n            hide: false,\r\n        },\r\n        {\r\n            field: 'buyer',\r\n            headerName: 'Buyer',\r\n            width: 200,\r\n            hide: false,\r\n        },\r\n        {\r\n            field: 'adhaar',\r\n            headerName: 'Adhaar',\r\n            width: 150,\r\n            editable: false,\r\n        },\r\n        {\r\n            field: 'pan',\r\n            headerName: 'PAN',\r\n            width: 150,\r\n            editable: false,\r\n        },\r\n\r\n        {\r\n            field: 'vehicle',\r\n            headerName: 'Vehicle',\r\n            width: 200,\r\n            editable: false,\r\n        },\r\n        {\r\n            field: 'action',\r\n            headerName: 'Action',\r\n            width: 200,\r\n            renderCell: (params) => {\r\n                return (\r\n                    <div className=\"\" style={{ width: \"100%\", textAlign: 'center', margin: '0 40px' }}>\r\n                        <button type=\"button\" className=\"btn btn-warning\" onClick={() => { editEnquiry(params.row) }} data-toggle=\"tooltip\" title=\"Edit\" ><i className=\"fa fa-pencil\"></i></button>\r\n                        <button style={{ marginLeft: '20%' }} onClick={() => { deleteEnquiry(params.row.id) }} className=\"btn btn-danger\" data-toggle=\"tooltip\" title=\"Delete\" ><i className=\"fa fa-trash\"></i></button>\r\n                    </div>\r\n                );\r\n            }\r\n        },\r\n    ];\r\n    //console.log(data3);\r\n    const rows = data.enquiry;\r\n\r\n    return (\r\n        <div className='container'>\r\n            <Modal show={showModal} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Modal heading</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"col-md-12\">\r\n                        <form className=\"form-group\" onSubmit={e => onModalFormSubmit(e)}>\r\n                            <div className=\"field col-md-6\">\r\n                                <label>ID</label>\r\n                                <input className=\"form-control\" defaultValue={modalEnquiry.id} onChange={e => onModalInputChange(e)} name=\"id\" type=\"text\" required />\r\n                            </div>\r\n                            <div className=\"field col-md-6\">\r\n                                <label>Buyer</label>\r\n                                <input className=\"form-control\" defaultValue={modalEnquiry.buyer} onChange={e => onModalInputChange(e)} name=\"buyer\" type=\"text\" required />\r\n                            </div>\r\n                            <div className=\"field col-md-6\">\r\n                                <label>Adhaar</label>\r\n                                <input className=\"form-control\" defaultValue={modalEnquiry.adhaar} onChange={e => onModalInputChange(e)} name=\"adhaar\" type=\"text\" required />\r\n                            </div>\r\n                            <div className=\"field col-md-6\">\r\n                                <label>PAN</label>\r\n                                <input className=\"form-control\" defaultValue={modalEnquiry.pan} onChange={e => onModalInputChange(e)} name=\"pan\" type=\"text\" required />\r\n                            </div>\r\n                            <div className=\"field col-md-6\">\r\n                                <label>Vehicle</label>\r\n                                <input className=\"form-control\" defaultValue={modalEnquiry.vehicle} onChange={e => onModalInputChange(e)} name=\"vehicle\" type=\"text\" required />\r\n                            </div>\r\n                            <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '20px' }}>\r\n                                <button className=\"btn btn-primary\" type='submit' style={{ marginRight: '50px' }}>Save</button>\r\n                                <button className=\"btn btn-primary\" type='reset'>Reset</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Close\r\n                    </Button>\r\n\r\n                </Modal.Footer>\r\n            </Modal>            <div className=\"col-md-12\">\r\n                <form className=\"form-group\" onSubmit={e => onFormSubmit(e)}>\r\n                    <div className=\"row\">\r\n                        <h1 style={{ width: '100%', textAlign: 'center' }}>Enquiry Generation</h1>\r\n                        <Divider style={{ marginBottom: '10px', }} />\r\n                        <div className=\"\">\r\n                            <div className=\"booking-form\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-sm-6\">\r\n                                        <div className=\"form-group\">\r\n                                            <span className=\"form-label\">Buyer</span>\r\n                                            <input className=\"form-control\" onChange={e => onInputChange(e)} type=\"text\" name='buyer' />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-sm-6\">\r\n                                        <div className=\"form-group\">\r\n                                            <span className=\"form-label\">Adhaar</span>\r\n                                            <input className=\"form-control\" onChange={e => onInputChange(e)} type=\"text\" name='adhaar' />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-sm-6\">\r\n                                    <div className=\"form-group\">\r\n                                        <span className=\"form-label\">PAN</span>\r\n                                        <input className=\"form-control\" onChange={e => onInputChange(e)} type=\"text\" name='pan' />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-sm-6\">\r\n                                    <div className=\"form-group\">\r\n                                        <span className=\"form-label\">Vehicle</span>\r\n                                        <input className=\"form-control\" onChange={e => onInputChange(e)} type=\"text\" name='vehicle' />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '20px' }}>\r\n                        <button className=\"btn btn-primary\" type='submit' style={{ marginRight: '50px' }}>Save</button>\r\n                        <Link to={`/Data_Entry/Enquiry_Generation`} className=\"btn btn-success\" style={{ marginRight: '50px' }}>\r\n                            Previous\r\n                        </Link>\r\n                        <button className=\"btn btn-primary\" type='reset'>Reset</button>\r\n                    </div>\r\n                </form>\r\n            </div><br />\r\n            <div style={{ height: 500, width: '100%' }}>\r\n                <DataGrid\r\n                    rows={rows}\r\n                    columns={columns}\r\n                    pageSize={10}\r\n                    rowsPerPageOptions={[10]}\r\n                    checkboxSelection={false}\r\n                    disableSelectionOnClick\r\n                />\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n",{"ruleId":"235","replacedBy":"236"},{"ruleId":"237","replacedBy":"238"},{"ruleId":"239","severity":1,"message":"240","line":7,"column":3,"nodeType":"241","messageId":"242","endLine":7,"endColumn":15},{"ruleId":"239","severity":1,"message":"243","line":9,"column":10,"nodeType":"241","messageId":"242","endLine":9,"endColumn":16},{"ruleId":"239","severity":1,"message":"244","line":9,"column":18,"nodeType":"241","messageId":"242","endLine":9,"endColumn":23},{"ruleId":"239","severity":1,"message":"245","line":9,"column":25,"nodeType":"241","messageId":"242","endLine":9,"endColumn":29},{"ruleId":"239","severity":1,"message":"246","line":130,"column":33,"nodeType":"241","messageId":"242","endLine":130,"endColumn":46},{"ruleId":"239","severity":1,"message":"247","line":131,"column":33,"nodeType":"241","messageId":"242","endLine":131,"endColumn":44},{"ruleId":"239","severity":1,"message":"248","line":132,"column":33,"nodeType":"241","messageId":"242","endLine":132,"endColumn":43},{"ruleId":"239","severity":1,"message":"243","line":6,"column":10,"nodeType":"241","messageId":"242","endLine":6,"endColumn":16},{"ruleId":"239","severity":1,"message":"244","line":6,"column":18,"nodeType":"241","messageId":"242","endLine":6,"endColumn":23},{"ruleId":"239","severity":1,"message":"249","line":188,"column":35,"nodeType":"241","messageId":"242","endLine":188,"endColumn":46},{"ruleId":"239","severity":1,"message":"247","line":189,"column":35,"nodeType":"241","messageId":"242","endLine":189,"endColumn":46},{"ruleId":"239","severity":1,"message":"250","line":190,"column":35,"nodeType":"241","messageId":"242","endLine":190,"endColumn":50},{"ruleId":"239","severity":1,"message":"251","line":191,"column":25,"nodeType":"241","messageId":"242","endLine":191,"endColumn":41},{"ruleId":"239","severity":1,"message":"252","line":7,"column":20,"nodeType":"241","messageId":"242","endLine":7,"endColumn":31},{"ruleId":"239","severity":1,"message":"243","line":11,"column":10,"nodeType":"241","messageId":"242","endLine":11,"endColumn":16},{"ruleId":"239","severity":1,"message":"244","line":11,"column":18,"nodeType":"241","messageId":"242","endLine":11,"endColumn":23},{"ruleId":"239","severity":1,"message":"253","line":36,"column":10,"nodeType":"241","messageId":"242","endLine":36,"endColumn":18},{"ruleId":"239","severity":1,"message":"254","line":48,"column":29,"nodeType":"241","messageId":"242","endLine":48,"endColumn":39},{"ruleId":"239","severity":1,"message":"252","line":8,"column":20,"nodeType":"241","messageId":"242","endLine":8,"endColumn":31},{"ruleId":"239","severity":1,"message":"255","line":269,"column":11,"nodeType":"241","messageId":"242","endLine":269,"endColumn":19},{"ruleId":"239","severity":1,"message":"240","line":7,"column":3,"nodeType":"241","messageId":"242","endLine":7,"endColumn":15},{"ruleId":"239","severity":1,"message":"243","line":9,"column":10,"nodeType":"241","messageId":"242","endLine":9,"endColumn":16},{"ruleId":"239","severity":1,"message":"244","line":9,"column":18,"nodeType":"241","messageId":"242","endLine":9,"endColumn":23},{"ruleId":"239","severity":1,"message":"245","line":9,"column":25,"nodeType":"241","messageId":"242","endLine":9,"endColumn":29},{"ruleId":"239","severity":1,"message":"256","line":101,"column":26,"nodeType":"241","messageId":"242","endLine":101,"endColumn":36},{"ruleId":"239","severity":1,"message":"247","line":102,"column":26,"nodeType":"241","messageId":"242","endLine":102,"endColumn":37},{"ruleId":"239","severity":1,"message":"248","line":103,"column":26,"nodeType":"241","messageId":"242","endLine":103,"endColumn":36},{"ruleId":"239","severity":1,"message":"257","line":5,"column":5,"nodeType":"241","messageId":"242","endLine":5,"endColumn":20},{"ruleId":"239","severity":1,"message":"258","line":6,"column":5,"nodeType":"241","messageId":"242","endLine":6,"endColumn":16},{"ruleId":"239","severity":1,"message":"259","line":9,"column":10,"nodeType":"241","messageId":"242","endLine":9,"endColumn":15},{"ruleId":"239","severity":1,"message":"260","line":9,"column":17,"nodeType":"241","messageId":"242","endLine":9,"endColumn":23},{"ruleId":"239","severity":1,"message":"261","line":104,"column":11,"nodeType":"241","messageId":"242","endLine":104,"endColumn":17},{"ruleId":"239","severity":1,"message":"262","line":105,"column":11,"nodeType":"241","messageId":"242","endLine":105,"endColumn":16},{"ruleId":"239","severity":1,"message":"257","line":6,"column":5,"nodeType":"241","messageId":"242","endLine":6,"endColumn":20},{"ruleId":"239","severity":1,"message":"258","line":7,"column":5,"nodeType":"241","messageId":"242","endLine":7,"endColumn":16},{"ruleId":"239","severity":1,"message":"259","line":9,"column":10,"nodeType":"241","messageId":"242","endLine":9,"endColumn":15},{"ruleId":"239","severity":1,"message":"260","line":9,"column":17,"nodeType":"241","messageId":"242","endLine":9,"endColumn":23},{"ruleId":"239","severity":1,"message":"263","line":89,"column":9,"nodeType":"241","messageId":"242","endLine":89,"endColumn":16},{"ruleId":"239","severity":1,"message":"264","line":94,"column":11,"nodeType":"241","messageId":"242","endLine":94,"endColumn":20},{"ruleId":"239","severity":1,"message":"265","line":105,"column":11,"nodeType":"241","messageId":"242","endLine":105,"endColumn":16},{"ruleId":"239","severity":1,"message":"261","line":106,"column":11,"nodeType":"241","messageId":"242","endLine":106,"endColumn":17},{"ruleId":"239","severity":1,"message":"262","line":107,"column":11,"nodeType":"241","messageId":"242","endLine":107,"endColumn":16},{"ruleId":"239","severity":1,"message":"266","line":3,"column":5,"nodeType":"241","messageId":"242","endLine":3,"endColumn":13},{"ruleId":"239","severity":1,"message":"258","line":5,"column":5,"nodeType":"241","messageId":"242","endLine":5,"endColumn":16},{"ruleId":"239","severity":1,"message":"257","line":6,"column":5,"nodeType":"241","messageId":"242","endLine":6,"endColumn":20},{"ruleId":"239","severity":1,"message":"243","line":9,"column":10,"nodeType":"241","messageId":"242","endLine":9,"endColumn":16},{"ruleId":"239","severity":1,"message":"244","line":9,"column":18,"nodeType":"241","messageId":"242","endLine":9,"endColumn":23},{"ruleId":"239","severity":1,"message":"245","line":9,"column":25,"nodeType":"241","messageId":"242","endLine":9,"endColumn":29},{"ruleId":"239","severity":1,"message":"259","line":12,"column":10,"nodeType":"241","messageId":"242","endLine":12,"endColumn":15},{"ruleId":"239","severity":1,"message":"260","line":12,"column":17,"nodeType":"241","messageId":"242","endLine":12,"endColumn":23},{"ruleId":"239","severity":1,"message":"258","line":4,"column":5,"nodeType":"241","messageId":"242","endLine":4,"endColumn":16},{"ruleId":"239","severity":1,"message":"257","line":6,"column":5,"nodeType":"241","messageId":"242","endLine":6,"endColumn":20},{"ruleId":"239","severity":1,"message":"259","line":10,"column":10,"nodeType":"241","messageId":"242","endLine":10,"endColumn":15},{"ruleId":"239","severity":1,"message":"260","line":10,"column":17,"nodeType":"241","messageId":"242","endLine":10,"endColumn":23},{"ruleId":"239","severity":1,"message":"263","line":43,"column":9,"nodeType":"241","messageId":"242","endLine":43,"endColumn":16},{"ruleId":"239","severity":1,"message":"255","line":145,"column":11,"nodeType":"241","messageId":"242","endLine":145,"endColumn":19},{"ruleId":"239","severity":1,"message":"267","line":1,"column":15,"nodeType":"241","messageId":"242","endLine":1,"endColumn":23},{"ruleId":"239","severity":1,"message":"258","line":5,"column":5,"nodeType":"241","messageId":"242","endLine":5,"endColumn":16},{"ruleId":"239","severity":1,"message":"257","line":6,"column":5,"nodeType":"241","messageId":"242","endLine":6,"endColumn":20},{"ruleId":"239","severity":1,"message":"240","line":7,"column":5,"nodeType":"241","messageId":"242","endLine":7,"endColumn":17},{"ruleId":"239","severity":1,"message":"243","line":9,"column":10,"nodeType":"241","messageId":"242","endLine":9,"endColumn":16},{"ruleId":"239","severity":1,"message":"244","line":9,"column":18,"nodeType":"241","messageId":"242","endLine":9,"endColumn":23},{"ruleId":"239","severity":1,"message":"245","line":9,"column":25,"nodeType":"241","messageId":"242","endLine":9,"endColumn":29},{"ruleId":"239","severity":1,"message":"259","line":12,"column":10,"nodeType":"241","messageId":"242","endLine":12,"endColumn":15},{"ruleId":"239","severity":1,"message":"260","line":12,"column":17,"nodeType":"241","messageId":"242","endLine":12,"endColumn":23},{"ruleId":"239","severity":1,"message":"266","line":3,"column":3,"nodeType":"241","messageId":"242","endLine":3,"endColumn":11},{"ruleId":"239","severity":1,"message":"240","line":7,"column":3,"nodeType":"241","messageId":"242","endLine":7,"endColumn":15},{"ruleId":"239","severity":1,"message":"243","line":9,"column":10,"nodeType":"241","messageId":"242","endLine":9,"endColumn":16},{"ruleId":"239","severity":1,"message":"244","line":9,"column":18,"nodeType":"241","messageId":"242","endLine":9,"endColumn":23},{"ruleId":"239","severity":1,"message":"245","line":9,"column":25,"nodeType":"241","messageId":"242","endLine":9,"endColumn":29},{"ruleId":"239","severity":1,"message":"248","line":94,"column":33,"nodeType":"241","messageId":"242","endLine":94,"endColumn":43},{"ruleId":"239","severity":1,"message":"268","line":95,"column":33,"nodeType":"241","messageId":"242","endLine":95,"endColumn":43},{"ruleId":"239","severity":1,"message":"254","line":96,"column":33,"nodeType":"241","messageId":"242","endLine":96,"endColumn":43},{"ruleId":"239","severity":1,"message":"266","line":3,"column":5,"nodeType":"241","messageId":"242","endLine":3,"endColumn":13},{"ruleId":"239","severity":1,"message":"240","line":7,"column":5,"nodeType":"241","messageId":"242","endLine":7,"endColumn":17},{"ruleId":"239","severity":1,"message":"243","line":9,"column":10,"nodeType":"241","messageId":"242","endLine":9,"endColumn":16},{"ruleId":"239","severity":1,"message":"244","line":9,"column":18,"nodeType":"241","messageId":"242","endLine":9,"endColumn":23},{"ruleId":"239","severity":1,"message":"245","line":9,"column":25,"nodeType":"241","messageId":"242","endLine":9,"endColumn":29},{"ruleId":"239","severity":1,"message":"248","line":97,"column":29,"nodeType":"241","messageId":"242","endLine":97,"endColumn":39},{"ruleId":"239","severity":1,"message":"254","line":99,"column":29,"nodeType":"241","messageId":"242","endLine":99,"endColumn":39},{"ruleId":"239","severity":1,"message":"266","line":3,"column":5,"nodeType":"241","messageId":"242","endLine":3,"endColumn":13},{"ruleId":"239","severity":1,"message":"240","line":7,"column":5,"nodeType":"241","messageId":"242","endLine":7,"endColumn":17},{"ruleId":"239","severity":1,"message":"243","line":9,"column":10,"nodeType":"241","messageId":"242","endLine":9,"endColumn":16},{"ruleId":"239","severity":1,"message":"244","line":9,"column":18,"nodeType":"241","messageId":"242","endLine":9,"endColumn":23},{"ruleId":"239","severity":1,"message":"245","line":9,"column":25,"nodeType":"241","messageId":"242","endLine":9,"endColumn":29},{"ruleId":"239","severity":1,"message":"247","line":110,"column":31,"nodeType":"241","messageId":"242","endLine":110,"endColumn":42},{"ruleId":"239","severity":1,"message":"269","line":111,"column":31,"nodeType":"241","messageId":"242","endLine":111,"endColumn":39},{"ruleId":"239","severity":1,"message":"249","line":112,"column":31,"nodeType":"241","messageId":"242","endLine":112,"endColumn":42},{"ruleId":"239","severity":1,"message":"252","line":7,"column":20,"nodeType":"241","messageId":"242","endLine":7,"endColumn":31},{"ruleId":"239","severity":1,"message":"243","line":11,"column":10,"nodeType":"241","messageId":"242","endLine":11,"endColumn":16},{"ruleId":"239","severity":1,"message":"244","line":11,"column":18,"nodeType":"241","messageId":"242","endLine":11,"endColumn":23},{"ruleId":"239","severity":1,"message":"243","line":12,"column":10,"nodeType":"241","messageId":"242","endLine":12,"endColumn":16},{"ruleId":"239","severity":1,"message":"244","line":12,"column":18,"nodeType":"241","messageId":"242","endLine":12,"endColumn":23},{"ruleId":"239","severity":1,"message":"270","line":106,"column":12,"nodeType":"241","messageId":"242","endLine":106,"endColumn":25},{"ruleId":"239","severity":1,"message":"271","line":110,"column":12,"nodeType":"241","messageId":"242","endLine":110,"endColumn":17},{"ruleId":"239","severity":1,"message":"272","line":110,"column":18,"nodeType":"241","messageId":"242","endLine":110,"endColumn":26},{"ruleId":"239","severity":1,"message":"273","line":111,"column":9,"nodeType":"241","messageId":"242","endLine":111,"endColumn":12},{"ruleId":"239","severity":1,"message":"252","line":8,"column":20,"nodeType":"241","messageId":"242","endLine":8,"endColumn":31},{"ruleId":"239","severity":1,"message":"243","line":12,"column":10,"nodeType":"241","messageId":"242","endLine":12,"endColumn":16},{"ruleId":"239","severity":1,"message":"244","line":12,"column":18,"nodeType":"241","messageId":"242","endLine":12,"endColumn":23},{"ruleId":"239","severity":1,"message":"274","line":13,"column":10,"nodeType":"241","messageId":"242","endLine":13,"endColumn":20},{"ruleId":"239","severity":1,"message":"253","line":128,"column":10,"nodeType":"241","messageId":"242","endLine":128,"endColumn":18},{"ruleId":"239","severity":1,"message":"254","line":327,"column":29,"nodeType":"241","messageId":"242","endLine":327,"endColumn":39},{"ruleId":"239","severity":1,"message":"268","line":328,"column":28,"nodeType":"241","messageId":"242","endLine":328,"endColumn":38},{"ruleId":"239","severity":1,"message":"248","line":329,"column":29,"nodeType":"241","messageId":"242","endLine":329,"endColumn":39},{"ruleId":"239","severity":1,"message":"243","line":6,"column":10,"nodeType":"241","messageId":"242","endLine":6,"endColumn":16},{"ruleId":"239","severity":1,"message":"244","line":6,"column":18,"nodeType":"241","messageId":"242","endLine":6,"endColumn":23},"no-native-reassign",["275"],"no-negated-in-lhs",["276"],"no-unused-vars","'useLazyQuery' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'insuranceData' is assigned a value but never used.","'updatedData' is assigned a value but never used.","'deleteData' is assigned a value but never used.","'deletedData' is assigned a value but never used.","'transactionData' is assigned a value but never used.","'updatedStockData' is assigned a value but never used.","'GridToolbar' is defined but never used.","'passPara' is assigned a value but never used.","'insertData' is assigned a value but never used.","'printPdf' is assigned a value but never used.","'stolenData' is assigned a value but never used.","'useSubscription' is defined but never used.","'useMutation' is defined but never used.","'Modal' is defined but never used.","'Button' is defined but never used.","'seller' is assigned a value but never used.","'buyer' is assigned a value but never used.","'counter' is assigned a value but never used.","'comm_data' is assigned a value but never used.","'stock' is assigned a value but never used.","'useQuery' is defined but never used.","'useState' is defined but never used.","'updateData' is assigned a value but never used.","'carsData' is assigned a value but never used.","'searchVehicle' is assigned a value but never used.","'owner' is assigned a value but never used.","'setOwner' is assigned a value but never used.","'ind' is defined but never used.","'useHistory' is defined but never used.","no-global-assign","no-unsafe-negation"]